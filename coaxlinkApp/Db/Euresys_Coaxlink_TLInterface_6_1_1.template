# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, /home/beams/MENGBRET/test/Euresys_Coaxlink_TLInterface_6_1_1.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)InterfaceID+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceID+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)InterfaceType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)InterfaceType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)SerialNumber_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SerialNumber")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)PartNumber_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PartNumber")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FirmwareRevision_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareRevision")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FirmwareVariant_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareVariant")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)FirmwareStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "TooRecent")
  field(ONVL, "1")
  field(TWST, "TooOld")
  field(TWVL, "2")
  field(THST, "RecoveryMode")
  field(THVL, "3")
  field(FRST, "PCIeGen1NotSuppo")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)FirmwareStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "TooRecent")
  field(ONVL, "1")
  field(TWST, "TooOld")
  field(TWVL, "2")
  field(THST, "RecoveryMode")
  field(THVL, "3")
  field(FRST, "PCIeGen1NotSuppo")
  field(FRVL, "4")
  field(DISA, "0")
}

record(bi, "$(P)$(R)FirmwareRecoverySwitch_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareRecoverySwitch")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)FirmwareRecoverySwitch") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareRecoverySwitch")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceUpdateList") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceUpdateList")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DeviceSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceSelector")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceID+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceID+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceVendorName+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceVendorName+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceModelName+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceModelName+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceAccessStatus+I_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceAccessStatus+I")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceAccessStatus+I") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceAccessStatus+I")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpPoCxpHostConnectionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpHostConnectionSelector")
  field(ZRST, "All")
  field(ZRVL, "15")
  field(ONST, "A")
  field(ONVL, "1")
  field(TWST, "B")
  field(TWVL, "2")
  field(THST, "C")
  field(THVL, "4")
  field(FRST, "D")
  field(FRVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpPoCxpHostConnectionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpHostConnectionSelector")
  field(ZRST, "All")
  field(ZRVL, "15")
  field(ONST, "A")
  field(ONVL, "1")
  field(TWST, "B")
  field(TWVL, "2")
  field(THST, "C")
  field(THVL, "4")
  field(FRST, "D")
  field(FRVL, "8")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpPoCxpAuto") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpAuto")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpPoCxpTurnOff") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpTurnOff")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpPoCxpTripReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpTripReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpPoCxpConfigurationStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpConfigurationStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "Auto")
  field(ONVL, "2")
  field(TWST, "Unknown")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpPoCxpConfigurationStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpConfigurationStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "Auto")
  field(ONVL, "2")
  field(TWST, "Unknown")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpPoCxpStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "On")
  field(ONVL, "2")
  field(TWST, "Tripped")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpPoCxpStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "On")
  field(ONVL, "2")
  field(TWST, "Tripped")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)CxpPoCxpCurrent_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpCurrent")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)CxpPoCxpCurrent") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpCurrent")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)CxpPoCxpVoltage_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpVoltage")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)CxpPoCxpVoltage") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpVoltage")
  field(PREC, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpPoCxpPowerInputStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpPowerInputStatus")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpPoCxpPowerInputStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpPowerInputStatus")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CxpHostConnectionCount+I_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionCount+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpHostConnectionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionSelector")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpHostConnectionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionSelector")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpConnectionState_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpConnectionState")
  field(ZRST, "Undetected")
  field(ZRVL, "0")
  field(ONST, "Detected")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpConnectionState") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpConnectionState")
  field(ZRST, "Undetected")
  field(ZRVL, "0")
  field(ONST, "Detected")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpDownConnectionSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDownConnectionSpeed")
  field(ZRST, "CXP1")
  field(ZRVL, "0")
  field(ONST, "CXP2")
  field(ONVL, "1")
  field(TWST, "CXP3")
  field(TWVL, "2")
  field(THST, "CXP5")
  field(THVL, "3")
  field(FRST, "CXP6")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpDownConnectionSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDownConnectionSpeed")
  field(ZRST, "CXP1")
  field(ZRVL, "0")
  field(ONST, "CXP2")
  field(ONVL, "1")
  field(TWST, "CXP3")
  field(TWVL, "2")
  field(THST, "CXP5")
  field(THVL, "3")
  field(FRST, "CXP6")
  field(FRVL, "4")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)CxpDeviceConnectionID_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDeviceConnectionID")
#  field(ZRST, "CameraW_Master")
#  field(ZRVL, "0")
#  field(ONST, "CameraW_Extensio")
#  field(ONVL, "1")
#  field(TWST, "CameraW_Extensio")
#  field(TWVL, "2")
#  field(THST, "CameraW_Extensio")
#  field(THVL, "3")
#  field(FRST, "CameraW_Extensio")
#  field(FRVL, "4")
#  field(FVST, "CameraW_Extensio")
#  field(FVVL, "5")
#  field(SXST, "CameraW_Extensio")
#  field(SXVL, "6")
#  field(SVST, "CameraW_Extensio")
#  field(SVVL, "7")
#  field(EIST, "CameraX_Master")
#  field(EIVL, "65536")
#  field(NIST, "CameraX_Extensio")
#  field(NIVL, "65537")
#  field(TEST, "CameraX_Extensio")
#  field(TEVL, "65538")
#  field(ELST, "CameraX_Extensio")
#  field(ELVL, "65539")
#  field(TVST, "CameraX_Extensio")
#  field(TVVL, "65540")
#  field(TTST, "CameraX_Extensio")
#  field(TTVL, "65541")
#  field(FTST, "CameraX_Extensio")
#  field(FTVL, "65542")
#  field(FFST, "CameraX_Extensio")
#  field(FFVL, "65543")
#  field(ZR1ST, "CameraY_Master")
#  field(ZR1VL, "131072")
#  field(ON1ST, "CameraY_Extensio")
#  field(ON1VL, "131073")
#  field(TW1ST, "CameraY_Extensio")
#  field(TW1VL, "131074")
#  field(TH1ST, "CameraY_Extensio")
#  field(TH1VL, "131075")
#  field(FR1ST, "CameraY_Extensio")
#  field(FR1VL, "131076")
#  field(FV1ST, "CameraY_Extensio")
#  field(FV1VL, "131077")
#  field(SX1ST, "CameraY_Extensio")
#  field(SX1VL, "131078")
#  field(SV1ST, "CameraY_Extensio")
#  field(SV1VL, "131079")
#  field(EI1ST, "CameraZ_Master")
#  field(EI1VL, "196608")
#  field(NI1ST, "CameraZ_Extensio")
#  field(NI1VL, "196609")
#  field(TE1ST, "CameraZ_Extensio")
#  field(TE1VL, "196610")
#  field(EL1ST, "CameraZ_Extensio")
#  field(EL1VL, "196611")
#  field(TV1ST, "CameraZ_Extensio")
#  field(TV1VL, "196612")
#  field(TT1ST, "CameraZ_Extensio")
#  field(TT1VL, "196613")
#  field(FT1ST, "CameraZ_Extensio")
#  field(FT1VL, "196614")
#  field(FF1ST, "CameraZ_Extensio")
#  field(FF1VL, "196615")
#  field(ZR2ST, "SubLink_Extensio")
#  field(ZR2VL, "4294901761")
#  field(ON2ST, "SubLink_Extensio")
#  field(ON2VL, "4294901762")
#  field(TW2ST, "SubLink_Extensio")
#  field(TW2VL, "4294901763")
#  field(TH2ST, "SubLink_Extensio")
#  field(TH2VL, "4294901764")
#  field(FR2ST, "SubLink_Extensio")
#  field(FR2VL, "4294901765")
#  field(FV2ST, "SubLink_Extensio")
#  field(FV2VL, "4294901766")
#  field(SX2ST, "SubLink_Extensio")
#  field(SX2VL, "4294901767")
#  field(SV2ST, "NotReady")
#  field(SV2VL, "128")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)CxpDeviceConnectionID") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDeviceConnectionID")
#  field(ZRST, "CameraW_Master")
#  field(ZRVL, "0")
#  field(ONST, "CameraW_Extensio")
#  field(ONVL, "1")
#  field(TWST, "CameraW_Extensio")
#  field(TWVL, "2")
#  field(THST, "CameraW_Extensio")
#  field(THVL, "3")
#  field(FRST, "CameraW_Extensio")
#  field(FRVL, "4")
#  field(FVST, "CameraW_Extensio")
#  field(FVVL, "5")
#  field(SXST, "CameraW_Extensio")
#  field(SXVL, "6")
#  field(SVST, "CameraW_Extensio")
#  field(SVVL, "7")
#  field(EIST, "CameraX_Master")
#  field(EIVL, "65536")
#  field(NIST, "CameraX_Extensio")
#  field(NIVL, "65537")
#  field(TEST, "CameraX_Extensio")
#  field(TEVL, "65538")
#  field(ELST, "CameraX_Extensio")
#  field(ELVL, "65539")
#  field(TVST, "CameraX_Extensio")
#  field(TVVL, "65540")
#  field(TTST, "CameraX_Extensio")
#  field(TTVL, "65541")
#  field(FTST, "CameraX_Extensio")
#  field(FTVL, "65542")
#  field(FFST, "CameraX_Extensio")
#  field(FFVL, "65543")
#  field(ZR1ST, "CameraY_Master")
#  field(ZR1VL, "131072")
#  field(ON1ST, "CameraY_Extensio")
#  field(ON1VL, "131073")
#  field(TW1ST, "CameraY_Extensio")
#  field(TW1VL, "131074")
#  field(TH1ST, "CameraY_Extensio")
#  field(TH1VL, "131075")
#  field(FR1ST, "CameraY_Extensio")
#  field(FR1VL, "131076")
#  field(FV1ST, "CameraY_Extensio")
#  field(FV1VL, "131077")
#  field(SX1ST, "CameraY_Extensio")
#  field(SX1VL, "131078")
#  field(SV1ST, "CameraY_Extensio")
#  field(SV1VL, "131079")
#  field(EI1ST, "CameraZ_Master")
#  field(EI1VL, "196608")
#  field(NI1ST, "CameraZ_Extensio")
#  field(NI1VL, "196609")
#  field(TE1ST, "CameraZ_Extensio")
#  field(TE1VL, "196610")
#  field(EL1ST, "CameraZ_Extensio")
#  field(EL1VL, "196611")
#  field(TV1ST, "CameraZ_Extensio")
#  field(TV1VL, "196612")
#  field(TT1ST, "CameraZ_Extensio")
#  field(TT1VL, "196613")
#  field(FT1ST, "CameraZ_Extensio")
#  field(FT1VL, "196614")
#  field(FF1ST, "CameraZ_Extensio")
#  field(FF1VL, "196615")
#  field(ZR2ST, "SubLink_Extensio")
#  field(ZR2VL, "4294901761")
#  field(ON2ST, "SubLink_Extensio")
#  field(ON2VL, "4294901762")
#  field(TW2ST, "SubLink_Extensio")
#  field(TW2VL, "4294901763")
#  field(TH2ST, "SubLink_Extensio")
#  field(TH2VL, "4294901764")
#  field(FR2ST, "SubLink_Extensio")
#  field(FR2VL, "4294901765")
#  field(FV2ST, "SubLink_Extensio")
#  field(FV2VL, "4294901766")
#  field(SX2ST, "SubLink_Extensio")
#  field(SX2VL, "4294901767")
#  field(SV2ST, "NotReady")
#  field(SV2VL, "128")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)CxpHostConnectionTestMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpHostConnectionTestMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CxpHostConnectionTestErrorCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestErrorCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpHostConnectionTestErrorCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestErrorCount")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CxpHostConnectionTestPacketCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestPacketCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpHostConnectionTestPacketCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestPacketCount")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpHostConnectionTestInjectError") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestInjectError")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpRevisionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpRevisionSelector")
  field(ZRST, "CXP_1_0")
  field(ZRVL, "0")
  field(ONST, "CXP_1_1")
  field(ONVL, "2")
  field(TWST, "CXP_1_1_1")
  field(TWVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpRevisionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpRevisionSelector")
  field(ZRST, "CXP_1_0")
  field(ZRVL, "0")
  field(ONST, "CXP_1_1")
  field(ONVL, "2")
  field(TWST, "CXP_1_1_1")
  field(TWVL, "4")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpRevisionSupport_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpRevisionSupport")
  field(ZRST, "NotSupported")
  field(ZRVL, "0")
  field(ONST, "PartiallySupport")
  field(ONVL, "1")
  field(TWST, "Supported")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpRevisionSupport") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpRevisionSupport")
  field(ZRST, "NotSupported")
  field(ZRVL, "0")
  field(ONST, "PartiallySupport")
  field(ONVL, "1")
  field(TWST, "Supported")
  field(TWVL, "2")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)LineSelector_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
#  field(ZRST, "DIN11")
#  field(ZRVL, "0")
#  field(ONST, "DIN12")
#  field(ONVL, "1")
#  field(TWST, "DIN21")
#  field(TWVL, "2")
#  field(THST, "DIN22")
#  field(THVL, "3")
#  field(FRST, "IIN11")
#  field(FRVL, "4")
#  field(FVST, "IIN12")
#  field(FVVL, "5")
#  field(SXST, "IIN13")
#  field(SXVL, "6")
#  field(SVST, "IIN14")
#  field(SVVL, "7")
#  field(EIST, "IIN21")
#  field(EIVL, "8")
#  field(NIST, "IIN22")
#  field(NIVL, "9")
#  field(TEST, "IIN23")
#  field(TEVL, "10")
#  field(ELST, "IIN24")
#  field(ELVL, "11")
#  field(TVST, "IOUT11")
#  field(TVVL, "12")
#  field(TTST, "IOUT12")
#  field(TTVL, "13")
#  field(FTST, "IOUT21")
#  field(FTVL, "14")
#  field(FFST, "IOUT22")
#  field(FFVL, "15")
#  field(ZR1ST, "TTLIO11")
#  field(ZR1VL, "16")
#  field(ON1ST, "TTLIO12")
#  field(ON1VL, "17")
#  field(TW1ST, "TTLIO21")
#  field(TW1VL, "18")
#  field(TH1ST, "TTLIO22")
#  field(TH1VL, "19")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)LineSelector") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
#  field(ZRST, "DIN11")
#  field(ZRVL, "0")
#  field(ONST, "DIN12")
#  field(ONVL, "1")
#  field(TWST, "DIN21")
#  field(TWVL, "2")
#  field(THST, "DIN22")
#  field(THVL, "3")
#  field(FRST, "IIN11")
#  field(FRVL, "4")
#  field(FVST, "IIN12")
#  field(FVVL, "5")
#  field(SXST, "IIN13")
#  field(SXVL, "6")
#  field(SVST, "IIN14")
#  field(SVVL, "7")
#  field(EIST, "IIN21")
#  field(EIVL, "8")
#  field(NIST, "IIN22")
#  field(NIVL, "9")
#  field(TEST, "IIN23")
#  field(TEVL, "10")
#  field(ELST, "IIN24")
#  field(ELVL, "11")
#  field(TVST, "IOUT11")
#  field(TVVL, "12")
#  field(TTST, "IOUT12")
#  field(TTVL, "13")
#  field(FTST, "IOUT21")
#  field(FTVL, "14")
#  field(FFST, "IOUT22")
#  field(FFVL, "15")
#  field(ZR1ST, "TTLIO11")
#  field(ZR1VL, "16")
#  field(ON1ST, "TTLIO12")
#  field(ON1VL, "17")
#  field(TW1ST, "TTLIO21")
#  field(TW1VL, "18")
#  field(TH1ST, "TTLIO22")
#  field(TH1VL, "19")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)LineFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFormat")
  field(ZRST, "ISO")
  field(ZRVL, "0")
  field(ONST, "DIFF")
  field(ONVL, "1")
  field(TWST, "TTL")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFormat")
  field(ZRST, "ISO")
  field(ZRVL, "0")
  field(ONST, "DIFF")
  field(ONVL, "1")
  field(TWST, "TTL")
  field(TWVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineMode")
  field(ZRST, "Input")
  field(ZRVL, "1")
  field(ONST, "Output")
  field(ONVL, "2")
  field(TWST, "DriveLow")
  field(TWVL, "3")
  field(THST, "DriveHigh")
  field(THVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineMode")
  field(ZRST, "Input")
  field(ZRVL, "1")
  field(ONST, "Output")
  field(ONVL, "2")
  field(TWST, "DriveLow")
  field(TWVL, "3")
  field(THST, "DriveHigh")
  field(THVL, "4")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LineInverter_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInverter")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LineInverter") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInverter")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineFilterStrength_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFilterStrength")
  field(ZRST, "Lowest")
  field(ZRVL, "1")
  field(ONST, "Low")
  field(ONVL, "2")
  field(TWST, "Medium")
  field(TWVL, "3")
  field(THST, "High")
  field(THVL, "4")
  field(FRST, "Highest")
  field(FRVL, "5")
  field(FVST, "NotAvailable")
  field(FVVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineFilterStrength") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFilterStrength")
  field(ZRST, "Lowest")
  field(ZRVL, "1")
  field(ONST, "Low")
  field(ONVL, "2")
  field(TWST, "Medium")
  field(TWVL, "3")
  field(THST, "High")
  field(THVL, "4")
  field(FRST, "Highest")
  field(FRVL, "5")
  field(FVST, "NotAvailable")
  field(FVVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)LineFilterDelay_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFilterDelay")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)LineFilterDelay") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFilterDelay")
  field(PREC, "3")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LineStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatus")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LineStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatus")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LineStatusAll_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatusAll")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LineStatusAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatusAll")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)LineSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
#  field(ZRST, "UserOutput0")
#  field(ZRVL, "1")
#  field(ONST, "UserOutput1")
#  field(ONVL, "2")
#  field(TWST, "UserOutput2")
#  field(TWVL, "3")
#  field(THST, "UserOutput3")
#  field(THVL, "4")
#  field(FRST, "UserOutput4")
#  field(FRVL, "5")
#  field(FVST, "UserOutput5")
#  field(FVVL, "6")
#  field(SXST, "UserOutput6")
#  field(SXVL, "7")
#  field(SVST, "UserOutput7")
#  field(SVVL, "8")
#  field(EIST, "Device0Strobe")
#  field(EIVL, "9")
#  field(NIST, "Device1Strobe")
#  field(NIVL, "10")
#  field(TEST, "Device2Strobe")
#  field(TEVL, "11")
#  field(ELST, "Device3Strobe")
#  field(ELVL, "12")
#  field(TVST, "Device0CameraTri")
#  field(TVVL, "13")
#  field(TTST, "Device1CameraTri")
#  field(TTVL, "14")
#  field(FTST, "Device2CameraTri")
#  field(FTVL, "15")
#  field(FFST, "Device3CameraTri")
#  field(FFVL, "16")
#  field(ZR1ST, "Device0Stream0St")
#  field(ZR1VL, "25")
#  field(ON1ST, "Device1Stream0St")
#  field(ON1VL, "26")
#  field(TW1ST, "Device2Stream0St")
#  field(TW1VL, "27")
#  field(TH1ST, "Device3Stream0St")
#  field(TH1VL, "28")
#  field(FR1ST, "Low")
#  field(FR1VL, "255")
#  field(FV1ST, "NotAvailable")
#  field(FV1VL, "0")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)LineSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
#  field(ZRST, "UserOutput0")
#  field(ZRVL, "1")
#  field(ONST, "UserOutput1")
#  field(ONVL, "2")
#  field(TWST, "UserOutput2")
#  field(TWVL, "3")
#  field(THST, "UserOutput3")
#  field(THVL, "4")
#  field(FRST, "UserOutput4")
#  field(FRVL, "5")
#  field(FVST, "UserOutput5")
#  field(FVVL, "6")
#  field(SXST, "UserOutput6")
#  field(SXVL, "7")
#  field(SVST, "UserOutput7")
#  field(SVVL, "8")
#  field(EIST, "Device0Strobe")
#  field(EIVL, "9")
#  field(NIST, "Device1Strobe")
#  field(NIVL, "10")
#  field(TEST, "Device2Strobe")
#  field(TEVL, "11")
#  field(ELST, "Device3Strobe")
#  field(ELVL, "12")
#  field(TVST, "Device0CameraTri")
#  field(TVVL, "13")
#  field(TTST, "Device1CameraTri")
#  field(TTVL, "14")
#  field(FTST, "Device2CameraTri")
#  field(FTVL, "15")
#  field(FFST, "Device3CameraTri")
#  field(FFVL, "16")
#  field(ZR1ST, "Device0Stream0St")
#  field(ZR1VL, "25")
#  field(ON1ST, "Device1Stream0St")
#  field(ON1VL, "26")
#  field(TW1ST, "Device2Stream0St")
#  field(TW1VL, "27")
#  field(TH1ST, "Device3Stream0St")
#  field(TH1VL, "28")
#  field(FR1ST, "Low")
#  field(FR1VL, "255")
#  field(FV1ST, "NotAvailable")
#  field(FV1VL, "0")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)UserOutputValueAll_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputValueAll")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)UserOutputValueAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputValueAll")
  field(DISA, "0")
}

record(longin, "$(P)$(R)UserActions_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserActions")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)UserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserActions")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)AddUserAction_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AddUserAction")
#  field(ZRST, "UserEvent1")
#  field(ZRVL, "1048576")
#  field(ONST, "UserEvent2")
#  field(ONVL, "2097152")
#  field(TWST, "UserEvent3")
#  field(TWVL, "4194304")
#  field(THST, "UserEvent4")
#  field(THVL, "8388608")
#  field(FRST, "UserOutput0_High")
#  field(FRVL, "1")
#  field(FVST, "UserOutput0_Low")
#  field(FVVL, "2")
#  field(SXST, "UserOutput0_Togg")
#  field(SXVL, "3")
#  field(SVST, "UserOutput1_High")
#  field(SVVL, "4")
#  field(EIST, "UserOutput1_Low")
#  field(EIVL, "8")
#  field(NIST, "UserOutput1_Togg")
#  field(NIVL, "12")
#  field(TEST, "UserOutput2_High")
#  field(TEVL, "16")
#  field(ELST, "UserOutput2_Low")
#  field(ELVL, "32")
#  field(TVST, "UserOutput2_Togg")
#  field(TVVL, "48")
#  field(TTST, "UserOutput3_High")
#  field(TTVL, "64")
#  field(FTST, "UserOutput3_Low")
#  field(FTVL, "128")
#  field(FFST, "UserOutput3_Togg")
#  field(FFVL, "192")
#  field(ZR1ST, "UserOutput4_High")
#  field(ZR1VL, "256")
#  field(ON1ST, "UserOutput4_Low")
#  field(ON1VL, "512")
#  field(TW1ST, "UserOutput4_Togg")
#  field(TW1VL, "768")
#  field(TH1ST, "UserOutput5_High")
#  field(TH1VL, "1024")
#  field(FR1ST, "UserOutput5_Low")
#  field(FR1VL, "2048")
#  field(FV1ST, "UserOutput5_Togg")
#  field(FV1VL, "3072")
#  field(SX1ST, "UserOutput6_High")
#  field(SX1VL, "4096")
#  field(SV1ST, "UserOutput6_Low")
#  field(SV1VL, "8192")
#  field(EI1ST, "UserOutput6_Togg")
#  field(EI1VL, "12288")
#  field(NI1ST, "UserOutput7_High")
#  field(NI1VL, "16384")
#  field(TE1ST, "UserOutput7_Low")
#  field(TE1VL, "32768")
#  field(EL1ST, "UserOutput7_Togg")
#  field(EL1VL, "49152")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)AddUserAction") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AddUserAction")
#  field(ZRST, "UserEvent1")
#  field(ZRVL, "1048576")
#  field(ONST, "UserEvent2")
#  field(ONVL, "2097152")
#  field(TWST, "UserEvent3")
#  field(TWVL, "4194304")
#  field(THST, "UserEvent4")
#  field(THVL, "8388608")
#  field(FRST, "UserOutput0_High")
#  field(FRVL, "1")
#  field(FVST, "UserOutput0_Low")
#  field(FVVL, "2")
#  field(SXST, "UserOutput0_Togg")
#  field(SXVL, "3")
#  field(SVST, "UserOutput1_High")
#  field(SVVL, "4")
#  field(EIST, "UserOutput1_Low")
#  field(EIVL, "8")
#  field(NIST, "UserOutput1_Togg")
#  field(NIVL, "12")
#  field(TEST, "UserOutput2_High")
#  field(TEVL, "16")
#  field(ELST, "UserOutput2_Low")
#  field(ELVL, "32")
#  field(TVST, "UserOutput2_Togg")
#  field(TVVL, "48")
#  field(TTST, "UserOutput3_High")
#  field(TTVL, "64")
#  field(FTST, "UserOutput3_Low")
#  field(FTVL, "128")
#  field(FFST, "UserOutput3_Togg")
#  field(FFVL, "192")
#  field(ZR1ST, "UserOutput4_High")
#  field(ZR1VL, "256")
#  field(ON1ST, "UserOutput4_Low")
#  field(ON1VL, "512")
#  field(TW1ST, "UserOutput4_Togg")
#  field(TW1VL, "768")
#  field(TH1ST, "UserOutput5_High")
#  field(TH1VL, "1024")
#  field(FR1ST, "UserOutput5_Low")
#  field(FR1VL, "2048")
#  field(FV1ST, "UserOutput5_Togg")
#  field(FV1VL, "3072")
#  field(SX1ST, "UserOutput6_High")
#  field(SX1VL, "4096")
#  field(SV1ST, "UserOutput6_Low")
#  field(SV1VL, "8192")
#  field(EI1ST, "UserOutput6_Togg")
#  field(EI1VL, "12288")
#  field(NI1ST, "UserOutput7_High")
#  field(NI1VL, "16384")
#  field(TE1ST, "UserOutput7_Low")
#  field(TE1VL, "32768")
#  field(EL1ST, "UserOutput7_Togg")
#  field(EL1VL, "49152")
#  field(DISA, "0")
#}

record(longout, "$(P)$(R)ClearUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ClearUserActions")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ExecuteUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExecuteUserActions")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ScheduleUserActions_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScheduleUserActions")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ScheduleUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScheduleUserActions")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)UserActionsSchedulerReference_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserActionsSchedulerReference")
  field(ZRST, "InternalTime")
  field(ZRVL, "1")
  field(ONST, "QDC1Position")
  field(ONVL, "2")
  field(TWST, "QDC2Position")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)UserActionsSchedulerReference") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserActionsSchedulerReference")
  field(ZRST, "InternalTime")
  field(ZRVL, "1")
  field(ONST, "QDC1Position")
  field(ONVL, "2")
  field(TWST, "QDC2Position")
  field(TWVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)ScheduledUserActionsPoolStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScheduledUserActionsPoolStatus")
  field(ZRST, "Empty")
  field(ZRVL, "1")
  field(ONST, "PartiallyFilled")
  field(ONVL, "2")
  field(TWST, "AlmostFull")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)ScheduledUserActionsPoolStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScheduledUserActionsPoolStatus")
  field(ZRST, "Empty")
  field(ZRVL, "1")
  field(ONST, "PartiallyFilled")
  field(ONVL, "2")
  field(TWST, "AlmostFull")
  field(TWVL, "3")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DiscardScheduledUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DiscardScheduledUserActions")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineInputToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSelector")
  field(ZRST, "LIN1")
  field(ZRVL, "1")
  field(ONST, "LIN2")
  field(ONVL, "2")
  field(TWST, "LIN3")
  field(TWVL, "3")
  field(THST, "LIN4")
  field(THVL, "4")
  field(FRST, "LIN5")
  field(FRVL, "5")
  field(FVST, "LIN6")
  field(FVVL, "6")
  field(SXST, "LIN7")
  field(SXVL, "7")
  field(SVST, "LIN8")
  field(SVVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineInputToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSelector")
  field(ZRST, "LIN1")
  field(ZRVL, "1")
  field(ONST, "LIN2")
  field(ONVL, "2")
  field(TWST, "LIN3")
  field(TWVL, "3")
  field(THST, "LIN4")
  field(THVL, "4")
  field(FRST, "LIN5")
  field(FRVL, "5")
  field(FVST, "LIN6")
  field(FVVL, "6")
  field(SXST, "LIN7")
  field(SXVL, "7")
  field(SVST, "LIN8")
  field(SVVL, "8")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)LineInputToolSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSource")
#  field(ZRST, "DIN11")
#  field(ZRVL, "0")
#  field(ONST, "DIN12")
#  field(ONVL, "1")
#  field(TWST, "DIN21")
#  field(TWVL, "2")
#  field(THST, "DIN22")
#  field(THVL, "3")
#  field(FRST, "IIN11")
#  field(FRVL, "4")
#  field(FVST, "IIN12")
#  field(FVVL, "5")
#  field(SXST, "IIN13")
#  field(SXVL, "6")
#  field(SVST, "IIN14")
#  field(SVVL, "7")
#  field(EIST, "IIN21")
#  field(EIVL, "8")
#  field(NIST, "IIN22")
#  field(NIVL, "9")
#  field(TEST, "IIN23")
#  field(TEVL, "10")
#  field(ELST, "IIN24")
#  field(ELVL, "11")
#  field(TVST, "IOUT11")
#  field(TVVL, "12")
#  field(TTST, "IOUT12")
#  field(TTVL, "13")
#  field(FTST, "IOUT21")
#  field(FTVL, "14")
#  field(FFST, "IOUT22")
#  field(FFVL, "15")
#  field(ZR1ST, "TTLIO11")
#  field(ZR1VL, "16")
#  field(ON1ST, "TTLIO12")
#  field(ON1VL, "17")
#  field(TW1ST, "TTLIO21")
#  field(TW1VL, "18")
#  field(TH1ST, "TTLIO22")
#  field(TH1VL, "19")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)LineInputToolSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSource")
#  field(ZRST, "DIN11")
#  field(ZRVL, "0")
#  field(ONST, "DIN12")
#  field(ONVL, "1")
#  field(TWST, "DIN21")
#  field(TWVL, "2")
#  field(THST, "DIN22")
#  field(THVL, "3")
#  field(FRST, "IIN11")
#  field(FRVL, "4")
#  field(FVST, "IIN12")
#  field(FVVL, "5")
#  field(SXST, "IIN13")
#  field(SXVL, "6")
#  field(SVST, "IIN14")
#  field(SVVL, "7")
#  field(EIST, "IIN21")
#  field(EIVL, "8")
#  field(NIST, "IIN22")
#  field(NIVL, "9")
#  field(TEST, "IIN23")
#  field(TEVL, "10")
#  field(ELST, "IIN24")
#  field(ELVL, "11")
#  field(TVST, "IOUT11")
#  field(TVVL, "12")
#  field(TTST, "IOUT12")
#  field(TTVL, "13")
#  field(FTST, "IOUT21")
#  field(FTVL, "14")
#  field(FFST, "IOUT22")
#  field(FFVL, "15")
#  field(ZR1ST, "TTLIO11")
#  field(ZR1VL, "16")
#  field(ON1ST, "TTLIO12")
#  field(ON1VL, "17")
#  field(TW1ST, "TTLIO21")
#  field(TW1VL, "18")
#  field(TH1ST, "TTLIO22")
#  field(TH1VL, "19")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)LineInputToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolActivation")
  field(ZRST, "RisingEdge")
  field(ZRVL, "1")
  field(ONST, "FallingEdge")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineInputToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolActivation")
  field(ZRST, "RisingEdge")
  field(ZRVL, "1")
  field(ONST, "FallingEdge")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)MultiplierDividerToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSelector")
  field(ZRST, "MDV1")
  field(ZRVL, "1")
  field(ONST, "MDV2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)MultiplierDividerToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSelector")
  field(ZRST, "MDV1")
  field(ZRVL, "1")
  field(ONST, "MDV2")
  field(ONVL, "2")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)MultiplierDividerToolSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSource")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)MultiplierDividerToolSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSource")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)MultiplierDividerToolOutputControl_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolOutputControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)MultiplierDividerToolOutputControl") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolOutputControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)MultiplierDividerToolMultiplicationFactor_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolMultiplicationFactor")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)MultiplierDividerToolMultiplicationFactor") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolMultiplicationFactor")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)MultiplierDividerToolDivisionFactor_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolDivisionFactor")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)MultiplierDividerToolDivisionFactor") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolDivisionFactor")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MultiplierDividerToolEffectiveMultiplicationFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolEffectiveMultiplicationFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)MultiplierDividerToolEffectiveMultiplicationFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolEffectiveMultiplicationFactor")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MultiplierDividerToolEffectiveDivisionFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolEffectiveDivisionFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)MultiplierDividerToolEffectiveDivisionFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolEffectiveDivisionFactor")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolSelector")
  field(ZRST, "QDC1")
  field(ZRVL, "1")
  field(ONST, "QDC2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolSelector")
  field(ZRST, "QDC1")
  field(ZRVL, "1")
  field(ONST, "QDC2")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolSources_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolSources")
  field(ZRST, "DIN11_DIN12")
  field(ZRVL, "1")
  field(ONST, "DIN21_DIN22")
  field(ONVL, "2")
  field(TWST, "IIN11_IIN12")
  field(TWVL, "3")
  field(THST, "IIN13_IIN14")
  field(THVL, "4")
  field(FRST, "IIN21_IIN22")
  field(FRVL, "5")
  field(FVST, "IIN23_IIN24")
  field(FVVL, "6")
  field(SXST, "TTLIO11_TTLIO12")
  field(SXVL, "7")
  field(SVST, "TTLIO21_TTLIO22")
  field(SVVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolSources") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolSources")
  field(ZRST, "DIN11_DIN12")
  field(ZRVL, "1")
  field(ONST, "DIN21_DIN22")
  field(ONVL, "2")
  field(TWST, "IIN11_IIN12")
  field(TWVL, "3")
  field(THST, "IIN13_IIN14")
  field(THVL, "4")
  field(FRST, "IIN21_IIN22")
  field(FRVL, "5")
  field(FVST, "IIN23_IIN24")
  field(FVVL, "6")
  field(SXST, "TTLIO11_TTLIO12")
  field(SXVL, "7")
  field(SVST, "TTLIO21_TTLIO22")
  field(SVVL, "8")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolActivation")
  field(ZRST, "RisingEdgeA")
  field(ZRVL, "1")
  field(ONST, "FallingEdgeA")
  field(ONVL, "2")
  field(TWST, "AllEdgesA")
  field(TWVL, "3")
  field(THST, "AllEdgesAB")
  field(THVL, "4")
  field(FRST, "None")
  field(FRVL, "5")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolActivation")
  field(ZRST, "RisingEdgeA")
  field(ZRVL, "1")
  field(ONST, "FallingEdgeA")
  field(ONVL, "2")
  field(TWST, "AllEdgesA")
  field(TWVL, "3")
  field(THST, "AllEdgesAB")
  field(THVL, "4")
  field(FRST, "None")
  field(FRVL, "5")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolForwardDirection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolForwardDirection")
  field(ZRST, "A_Leads_B")
  field(ZRVL, "1")
  field(ONST, "B_Leads_A")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolForwardDirection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolForwardDirection")
  field(ZRST, "A_Leads_B")
  field(ZRVL, "1")
  field(ONST, "B_Leads_A")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolOutputMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolOutputMode")
  field(ZRST, "Unfiltered")
  field(ZRVL, "1")
  field(ONST, "ForwardOnly")
  field(ONVL, "2")
  field(TWST, "FirstPassForward")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolOutputMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolOutputMode")
  field(ZRST, "Unfiltered")
  field(ZRVL, "1")
  field(ONST, "ForwardOnly")
  field(ONVL, "2")
  field(TWST, "FirstPassForward")
  field(TWVL, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)QuadratureDecoderToolPosition_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolPosition")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolDirection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolDirection")
  field(ZRST, "Forward")
  field(ZRVL, "0")
  field(ONST, "Backward")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolDirection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolDirection")
  field(ZRST, "Forward")
  field(ZRVL, "0")
  field(ONST, "Backward")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longout, "$(P)$(R)QuadratureDecoderToolPositionReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolPositionReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DividerToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSelector")
  field(ZRST, "DIV1")
  field(ZRVL, "1")
  field(ONST, "DIV2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DividerToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSelector")
  field(ZRST, "DIV1")
  field(ZRVL, "1")
  field(ONST, "DIV2")
  field(ONVL, "2")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)DividerToolSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSource")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)DividerToolSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSource")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)DividerToolEnableControl_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolEnableControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DividerToolEnableControl") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolEnableControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DividerToolDivisionFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolDivisionFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DividerToolDivisionFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolDivisionFactor")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DividerToolInitialOffset_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolInitialOffset")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DividerToolInitialOffset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolInitialOffset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DelayToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSelector")
  field(ZRST, "DEL1")
  field(ZRVL, "1")
  field(ONST, "DEL2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DelayToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSelector")
  field(ZRST, "DEL1")
  field(ZRVL, "1")
  field(ONST, "DEL2")
  field(ONVL, "2")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)DelayToolSource1_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource1")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)DelayToolSource1") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource1")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)DelayToolSource2_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource2")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)DelayToolSource2") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource2")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)DelayToolClockSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolClockSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "TIME8NS")
  field(ONVL, "1")
  field(TWST, "TIME200NS")
  field(TWVL, "2")
  field(THST, "TIME1US")
  field(THVL, "3")
  field(FRST, "LIN1")
  field(FRVL, "4")
  field(FVST, "LIN2")
  field(FVVL, "5")
  field(SXST, "LIN3")
  field(SXVL, "6")
  field(SVST, "LIN4")
  field(SVVL, "7")
  field(EIST, "LIN5")
  field(EIVL, "8")
  field(NIST, "LIN6")
  field(NIVL, "9")
  field(TEST, "LIN7")
  field(TEVL, "10")
  field(ELST, "LIN8")
  field(ELVL, "11")
  field(TVST, "QDC1")
  field(TVVL, "12")
  field(TTST, "QDC2")
  field(TTVL, "13")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DelayToolClockSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolClockSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "TIME8NS")
  field(ONVL, "1")
  field(TWST, "TIME200NS")
  field(TWVL, "2")
  field(THST, "TIME1US")
  field(THVL, "3")
  field(FRST, "LIN1")
  field(FRVL, "4")
  field(FVST, "LIN2")
  field(FVVL, "5")
  field(SXST, "LIN3")
  field(SXVL, "6")
  field(SVST, "LIN4")
  field(SVVL, "7")
  field(EIST, "LIN5")
  field(EIVL, "8")
  field(NIST, "LIN6")
  field(NIVL, "9")
  field(TEST, "LIN7")
  field(TEVL, "10")
  field(ELST, "LIN8")
  field(ELVL, "11")
  field(TVST, "QDC1")
  field(TVVL, "12")
  field(TTST, "QDC2")
  field(TTVL, "13")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DelayToolDelayValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolDelayValue")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DelayToolDelayValue") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolDelayValue")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)EventInputToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolSelector")
  field(ZRST, "EIN1")
  field(ZRVL, "1")
  field(ONST, "EIN2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)EventInputToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolSelector")
  field(ZRST, "EIN1")
  field(ZRVL, "1")
  field(ONST, "EIN2")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)EventInputToolSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolSource")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)EventInputToolSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolSource")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)EventInputToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolActivation")
  field(ZRST, "StartOfScan")
  field(ZRVL, "129")
  field(ONST, "EndOfScan")
  field(ONVL, "128")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)EventInputToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolActivation")
  field(ZRST, "StartOfScan")
  field(ZRVL, "129")
  field(ONST, "EndOfScan")
  field(ONVL, "128")
  field(DISA, "0")
}

record(longin, "$(P)$(R)InternalTime_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InternalTime")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PCIeMaxPayloadSizeSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxPayloadSizeSupported")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PCIeMaxPayloadSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxPayloadSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PCIeMaxReadRequestSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxReadRequestSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PCIeMaxLinkSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PCIeMaxLinkSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PCIeCurrentLinkSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeCurrentLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PCIeCurrentLinkSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeCurrentLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PCIeMaximumLinkWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaximumLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PCIeMaximumLinkWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaximumLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PCIeNegotiatedLinkWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeNegotiatedLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PCIeNegotiatedLinkWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeNegotiatedLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(DISA, "0")
}

record(bi, "$(P)$(R)PCIeLinkSpeed2500MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed2500MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)PCIeLinkSpeed2500MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed2500MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)PCIeLinkSpeed5000MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed5000MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)PCIeLinkSpeed5000MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed5000MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)PCIeLinkSpeed8000MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed8000MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)PCIeLinkSpeed8000MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed8000MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)FanStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FanStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "NotOK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)FanStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FanStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "NotOK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TemperatureSensorSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TemperatureSensorSelector")
  field(ZRST, "Grabber")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TemperatureSensorSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TemperatureSensorSelector")
  field(ZRST, "Grabber")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Temperature+I_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Temperature+I")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Temperature+I") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Temperature+I")
  field(PREC, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AuxiliaryPowerInput_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AuxiliaryPowerInput")
  field(ZRST, "Unconnected")
  field(ZRVL, "0")
  field(ONST, "Connected")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AuxiliaryPowerInput") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AuxiliaryPowerInput")
  field(ZRST, "Unconnected")
  field(ZRVL, "0")
  field(ONST, "Connected")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AuxiliaryPower12VInput_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AuxiliaryPower12VInput")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AuxiliaryPower12VInput") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AuxiliaryPower12VInput")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FirmwareBoardID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareBoardID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CPLDRevision_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CPLDRevision")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CPLDRevision") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CPLDRevision")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PreviousBootBank_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PreviousBootBank")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)PreviousBootBank") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PreviousBootBank")
  field(DISA, "0")
}

record(longin, "$(P)$(R)NextBootBank_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NextBootBank")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)NextBootBank") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NextBootBank")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CurrentBankSelect_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CurrentBankSelect")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CurrentBankSelect") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CurrentBankSelect")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CurrentBankSelectReadback_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CurrentBankSelectReadback")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CurrentBankSelectReadback") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CurrentBankSelectReadback")
  field(DISA, "0")
}

record(longin, "$(P)$(R)NextBankSelect_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NextBankSelect")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)NextBankSelect") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NextBankSelect")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SpiBankStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SpiBankStatus")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PotBankStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PotBankStatus")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)EventSelector+I_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+I")
#  field(ZRST, "LIN1")
#  field(ZRVL, "32768")
#  field(ONST, "LIN2")
#  field(ONVL, "32769")
#  field(TWST, "LIN3")
#  field(TWVL, "32770")
#  field(THST, "LIN4")
#  field(THVL, "32771")
#  field(FRST, "LIN5")
#  field(FRVL, "32772")
#  field(FVST, "LIN6")
#  field(FVVL, "32773")
#  field(SXST, "LIN7")
#  field(SXVL, "32774")
#  field(SVST, "LIN8")
#  field(SVVL, "32775")
#  field(EIST, "QDC1")
#  field(EIVL, "32896")
#  field(NIST, "QDC1Dir")
#  field(NIVL, "32897")
#  field(TEST, "QDC2")
#  field(TEVL, "32898")
#  field(ELST, "QDC2Dir")
#  field(ELVL, "32899")
#  field(TVST, "DIV1")
#  field(TVVL, "33024")
#  field(TTST, "DIV2")
#  field(TTVL, "33025")
#  field(FTST, "MDV1")
#  field(FTVL, "33152")
#  field(FFST, "MDV2")
#  field(FFVL, "33153")
#  field(ZR1ST, "DEL11")
#  field(ZR1VL, "33280")
#  field(ON1ST, "DEL12")
#  field(ON1VL, "33281")
#  field(TW1ST, "DEL21")
#  field(TW1VL, "33282")
#  field(TH1ST, "DEL22")
#  field(TH1VL, "33283")
#  field(FR1ST, "UserEvent1")
#  field(FR1VL, "33536")
#  field(FV1ST, "UserEvent2")
#  field(FV1VL, "33537")
#  field(SX1ST, "UserEvent3")
#  field(SX1VL, "33538")
#  field(SV1ST, "UserEvent4")
#  field(SV1VL, "33539")
#  field(EI1ST, "EIN1")
#  field(EI1VL, "33664")
#  field(NI1ST, "EIN2")
#  field(NI1VL, "33665")
#  field(TE1ST, "CrcErrorCxpA")
#  field(TE1VL, "33408")
#  field(EL1ST, "CrcErrorCxpB")
#  field(EL1VL, "33409")
#  field(TV1ST, "CrcErrorCxpC")
#  field(TV1VL, "33410")
#  field(TT1ST, "CrcErrorCxpD")
#  field(TT1VL, "33411")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)EventSelector+I") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+I")
#  field(ZRST, "LIN1")
#  field(ZRVL, "32768")
#  field(ONST, "LIN2")
#  field(ONVL, "32769")
#  field(TWST, "LIN3")
#  field(TWVL, "32770")
#  field(THST, "LIN4")
#  field(THVL, "32771")
#  field(FRST, "LIN5")
#  field(FRVL, "32772")
#  field(FVST, "LIN6")
#  field(FVVL, "32773")
#  field(SXST, "LIN7")
#  field(SXVL, "32774")
#  field(SVST, "LIN8")
#  field(SVVL, "32775")
#  field(EIST, "QDC1")
#  field(EIVL, "32896")
#  field(NIST, "QDC1Dir")
#  field(NIVL, "32897")
#  field(TEST, "QDC2")
#  field(TEVL, "32898")
#  field(ELST, "QDC2Dir")
#  field(ELVL, "32899")
#  field(TVST, "DIV1")
#  field(TVVL, "33024")
#  field(TTST, "DIV2")
#  field(TTVL, "33025")
#  field(FTST, "MDV1")
#  field(FTVL, "33152")
#  field(FFST, "MDV2")
#  field(FFVL, "33153")
#  field(ZR1ST, "DEL11")
#  field(ZR1VL, "33280")
#  field(ON1ST, "DEL12")
#  field(ON1VL, "33281")
#  field(TW1ST, "DEL21")
#  field(TW1VL, "33282")
#  field(TH1ST, "DEL22")
#  field(TH1VL, "33283")
#  field(FR1ST, "UserEvent1")
#  field(FR1VL, "33536")
#  field(FV1ST, "UserEvent2")
#  field(FV1VL, "33537")
#  field(SX1ST, "UserEvent3")
#  field(SX1VL, "33538")
#  field(SV1ST, "UserEvent4")
#  field(SV1VL, "33539")
#  field(EI1ST, "EIN1")
#  field(EI1VL, "33664")
#  field(NI1ST, "EIN2")
#  field(NI1VL, "33665")
#  field(TE1ST, "CrcErrorCxpA")
#  field(TE1VL, "33408")
#  field(EL1ST, "CrcErrorCxpB")
#  field(EL1VL, "33409")
#  field(TV1ST, "CrcErrorCxpC")
#  field(TV1VL, "33410")
#  field(TT1ST, "CrcErrorCxpD")
#  field(TT1VL, "33411")
#  field(DISA, "0")
#}

record(bi, "$(P)$(R)EventNotification+I_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotification+I")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)EventNotification+I") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotification+I")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)EventNotificationContext1+I_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)EventNotificationContext1+I") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EventNotificationContext2+I_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)EventNotificationContext2+I") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EventNotificationContext3+I_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

#record(mbbo, "$(P)$(R)EventNotificationContext3+I") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)EventCount+I_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventCount+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)EventCountReset+I") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventCountReset+I")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)OemSafetyKeyVerification_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OemSafetyKeyVerification")
  field(ZRST, "ProgrammingKey")
  field(ZRVL, "1")
  field(ONST, "EncryptedKey")
  field(ONVL, "2")
  field(TWST, "ProgrammingKeyOr")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)OemSafetyKeyVerification") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OemSafetyKeyVerification")
  field(ZRST, "ProgrammingKey")
  field(ZRVL, "1")
  field(ONST, "EncryptedKey")
  field(ONVL, "2")
  field(TWST, "ProgrammingKeyOr")
  field(TWVL, "3")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)CheckOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CheckOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)ProgramOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ProgramOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)EncryptedOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EncryptedOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

