include "ADBase.template"

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, /home/beams/MENGBRET/test/Euresys_Coaxlink_TLSystem_6_1_1.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)System_TLVendorName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_TLVendorName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)System_TLModelName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_TLModelName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)System_TLID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_TLID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)System_TLVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_TLVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)System_TLPath_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_TLPath")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)System_TLType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_TLType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)System_TLType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_TLType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longin, "$(P)$(R)System_GenTLVersionMajor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_GenTLVersionMajor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)System_GenTLVersionMajor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_GenTLVersionMajor")
  field(DISA, "0")
}

record(longin, "$(P)$(R)System_GenTLVersionMinor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_GenTLVersionMinor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)System_GenTLVersionMinor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_GenTLVersionMinor")
  field(DISA, "0")
}

record(longout, "$(P)$(R)System_InterfaceUpdateList") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_InterfaceUpdateList")
  field(DISA, "0")
}

record(longin, "$(P)$(R)System_InterfaceSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_InterfaceSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)System_InterfaceSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_InterfaceSelector")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)System_InterfaceID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))System_InterfaceID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, /home/beams/MENGBRET/test/Euresys_Coaxlink_TLInterface_6_1_1.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)Interface_InterfaceID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_InterfaceID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_InterfaceType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_InterfaceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_InterfaceType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_InterfaceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Interface_SerialNumber_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_SerialNumber")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Interface_PartNumber_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PartNumber")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_FirmwareRevision_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FirmwareRevision")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_FirmwareVariant_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FirmwareVariant")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_FirmwareStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FirmwareStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "TooRecent")
  field(ONVL, "1")
  field(TWST, "TooOld")
  field(TWVL, "2")
  field(THST, "RecoveryMode")
  field(THVL, "3")
  field(FRST, "PCIeGen1NotSuppo")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_FirmwareStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FirmwareStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "TooRecent")
  field(ONVL, "1")
  field(TWST, "TooOld")
  field(TWVL, "2")
  field(THST, "RecoveryMode")
  field(THVL, "3")
  field(FRST, "PCIeGen1NotSuppo")
  field(FRVL, "4")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Interface_FirmwareRecoverySwitch_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FirmwareRecoverySwitch")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Interface_FirmwareRecoverySwitch") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FirmwareRecoverySwitch")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_DeviceUpdateList") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DeviceUpdateList")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_DeviceSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DeviceSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_DeviceSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DeviceSelector")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Interface_DeviceID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DeviceID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Interface_DeviceVendorName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DeviceVendorName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Interface_DeviceModelName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DeviceModelName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_DeviceAccessStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DeviceAccessStatus")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_DeviceAccessStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DeviceAccessStatus")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpPoCxpHostConnectionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpHostConnectionSelector")
  field(ZRST, "All")
  field(ZRVL, "15")
  field(ONST, "A")
  field(ONVL, "1")
  field(TWST, "B")
  field(TWVL, "2")
  field(THST, "C")
  field(THVL, "4")
  field(FRST, "D")
  field(FRVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpPoCxpHostConnectionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpHostConnectionSelector")
  field(ZRST, "All")
  field(ZRVL, "15")
  field(ONST, "A")
  field(ONVL, "1")
  field(TWST, "B")
  field(TWVL, "2")
  field(THST, "C")
  field(THVL, "4")
  field(FRST, "D")
  field(FRVL, "8")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CxpPoCxpAuto") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpAuto")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CxpPoCxpTurnOff") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpTurnOff")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CxpPoCxpTripReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpTripReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpPoCxpConfigurationStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpConfigurationStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "Auto")
  field(ONVL, "2")
  field(TWST, "Unknown")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpPoCxpConfigurationStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpConfigurationStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "Auto")
  field(ONVL, "2")
  field(TWST, "Unknown")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpPoCxpStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "On")
  field(ONVL, "2")
  field(TWST, "Tripped")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpPoCxpStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "On")
  field(ONVL, "2")
  field(TWST, "Tripped")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Interface_CxpPoCxpCurrent_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpCurrent")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Interface_CxpPoCxpCurrent") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpCurrent")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Interface_CxpPoCxpVoltage_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpVoltage")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Interface_CxpPoCxpVoltage") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpVoltage")
  field(PREC, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpPoCxpPowerInputStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpPowerInputStatus")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpPoCxpPowerInputStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpPoCxpPowerInputStatus")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_CxpHostConnectionCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpHostConnectionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionSelector")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpHostConnectionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionSelector")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpConnectionState_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpConnectionState")
  field(ZRST, "Undetected")
  field(ZRVL, "0")
  field(ONST, "Detected")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpConnectionState") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpConnectionState")
  field(ZRST, "Undetected")
  field(ZRVL, "0")
  field(ONST, "Detected")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpDownConnectionSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpDownConnectionSpeed")
  field(ZRST, "CXP1")
  field(ZRVL, "0")
  field(ONST, "CXP2")
  field(ONVL, "1")
  field(TWST, "CXP3")
  field(TWVL, "2")
  field(THST, "CXP5")
  field(THVL, "3")
  field(FRST, "CXP6")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpDownConnectionSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpDownConnectionSpeed")
  field(ZRST, "CXP1")
  field(ZRVL, "0")
  field(ONST, "CXP2")
  field(ONVL, "1")
  field(TWST, "CXP3")
  field(TWVL, "2")
  field(THST, "CXP5")
  field(THVL, "3")
  field(FRST, "CXP6")
  field(FRVL, "4")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_CxpDeviceConnectionID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpDeviceConnectionID")
  field(ZRST, "CameraW_Master")
  field(ZRVL, "0")
  field(ONST, "CameraW_Extensio")
  field(ONVL, "1")
  field(TWST, "CameraW_Extensio")
  field(TWVL, "2")
  field(THST, "CameraW_Extensio")
  field(THVL, "3")
  field(FRST, "CameraW_Extensio")
  field(FRVL, "4")
  field(FVST, "CameraW_Extensio")
  field(FVVL, "5")
  field(SXST, "CameraW_Extensio")
  field(SXVL, "6")
  field(SVST, "CameraW_Extensio")
  field(SVVL, "7")
  field(EIST, "CameraX_Master")
  field(EIVL, "65536")
  field(NIST, "CameraX_Extensio")
  field(NIVL, "65537")
  field(TEST, "CameraX_Extensio")
  field(TEVL, "65538")
  field(ELST, "CameraX_Extensio")
  field(ELVL, "65539")
  field(TVST, "CameraX_Extensio")
  field(TVVL, "65540")
  field(TTST, "CameraX_Extensio")
  field(TTVL, "65541")
  field(FTST, "CameraX_Extensio")
  field(FTVL, "65542")
  field(FFST, "CameraX_Extensio")
  field(FFVL, "65543")
  field(ZR1ST, "CameraY_Master")
  field(ZR1VL, "131072")
  field(ON1ST, "CameraY_Extensio")
  field(ON1VL, "131073")
  field(TW1ST, "CameraY_Extensio")
  field(TW1VL, "131074")
  field(TH1ST, "CameraY_Extensio")
  field(TH1VL, "131075")
  field(FR1ST, "CameraY_Extensio")
  field(FR1VL, "131076")
  field(FV1ST, "CameraY_Extensio")
  field(FV1VL, "131077")
  field(SX1ST, "CameraY_Extensio")
  field(SX1VL, "131078")
  field(SV1ST, "CameraY_Extensio")
  field(SV1VL, "131079")
  field(EI1ST, "CameraZ_Master")
  field(EI1VL, "196608")
  field(NI1ST, "CameraZ_Extensio")
  field(NI1VL, "196609")
  field(TE1ST, "CameraZ_Extensio")
  field(TE1VL, "196610")
  field(EL1ST, "CameraZ_Extensio")
  field(EL1VL, "196611")
  field(TV1ST, "CameraZ_Extensio")
  field(TV1VL, "196612")
  field(TT1ST, "CameraZ_Extensio")
  field(TT1VL, "196613")
  field(FT1ST, "CameraZ_Extensio")
  field(FT1VL, "196614")
  field(FF1ST, "CameraZ_Extensio")
  field(FF1VL, "196615")
  field(ZR2ST, "SubLink_Extensio")
  field(ZR2VL, "4294901761")
  field(ON2ST, "SubLink_Extensio")
  field(ON2VL, "4294901762")
  field(TW2ST, "SubLink_Extensio")
  field(TW2VL, "4294901763")
  field(TH2ST, "SubLink_Extensio")
  field(TH2VL, "4294901764")
  field(FR2ST, "SubLink_Extensio")
  field(FR2VL, "4294901765")
  field(FV2ST, "SubLink_Extensio")
  field(FV2VL, "4294901766")
  field(SX2ST, "SubLink_Extensio")
  field(SX2VL, "4294901767")
  field(SV2ST, "NotReady")
  field(SV2VL, "128")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_CxpDeviceConnectionID") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpDeviceConnectionID")
  field(ZRST, "CameraW_Master")
  field(ZRVL, "0")
  field(ONST, "CameraW_Extensio")
  field(ONVL, "1")
  field(TWST, "CameraW_Extensio")
  field(TWVL, "2")
  field(THST, "CameraW_Extensio")
  field(THVL, "3")
  field(FRST, "CameraW_Extensio")
  field(FRVL, "4")
  field(FVST, "CameraW_Extensio")
  field(FVVL, "5")
  field(SXST, "CameraW_Extensio")
  field(SXVL, "6")
  field(SVST, "CameraW_Extensio")
  field(SVVL, "7")
  field(EIST, "CameraX_Master")
  field(EIVL, "65536")
  field(NIST, "CameraX_Extensio")
  field(NIVL, "65537")
  field(TEST, "CameraX_Extensio")
  field(TEVL, "65538")
  field(ELST, "CameraX_Extensio")
  field(ELVL, "65539")
  field(TVST, "CameraX_Extensio")
  field(TVVL, "65540")
  field(TTST, "CameraX_Extensio")
  field(TTVL, "65541")
  field(FTST, "CameraX_Extensio")
  field(FTVL, "65542")
  field(FFST, "CameraX_Extensio")
  field(FFVL, "65543")
  field(ZR1ST, "CameraY_Master")
  field(ZR1VL, "131072")
  field(ON1ST, "CameraY_Extensio")
  field(ON1VL, "131073")
  field(TW1ST, "CameraY_Extensio")
  field(TW1VL, "131074")
  field(TH1ST, "CameraY_Extensio")
  field(TH1VL, "131075")
  field(FR1ST, "CameraY_Extensio")
  field(FR1VL, "131076")
  field(FV1ST, "CameraY_Extensio")
  field(FV1VL, "131077")
  field(SX1ST, "CameraY_Extensio")
  field(SX1VL, "131078")
  field(SV1ST, "CameraY_Extensio")
  field(SV1VL, "131079")
  field(EI1ST, "CameraZ_Master")
  field(EI1VL, "196608")
  field(NI1ST, "CameraZ_Extensio")
  field(NI1VL, "196609")
  field(TE1ST, "CameraZ_Extensio")
  field(TE1VL, "196610")
  field(EL1ST, "CameraZ_Extensio")
  field(EL1VL, "196611")
  field(TV1ST, "CameraZ_Extensio")
  field(TV1VL, "196612")
  field(TT1ST, "CameraZ_Extensio")
  field(TT1VL, "196613")
  field(FT1ST, "CameraZ_Extensio")
  field(FT1VL, "196614")
  field(FF1ST, "CameraZ_Extensio")
  field(FF1VL, "196615")
  field(ZR2ST, "SubLink_Extensio")
  field(ZR2VL, "4294901761")
  field(ON2ST, "SubLink_Extensio")
  field(ON2VL, "4294901762")
  field(TW2ST, "SubLink_Extensio")
  field(TW2VL, "4294901763")
  field(TH2ST, "SubLink_Extensio")
  field(TH2VL, "4294901764")
  field(FR2ST, "SubLink_Extensio")
  field(FR2VL, "4294901765")
  field(FV2ST, "SubLink_Extensio")
  field(FV2VL, "4294901766")
  field(SX2ST, "SubLink_Extensio")
  field(SX2VL, "4294901767")
  field(SV2ST, "NotReady")
  field(SV2VL, "128")
  field(DISA, "0")
}

*/

record(mbbi, "$(P)$(R)Interface_CxpHostConnectionTestMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpHostConnectionTestMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_CxpHostConnectionTestErrorCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionTestErrorCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CxpHostConnectionTestErrorCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionTestErrorCount")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_CxpHostConnectionTestPacketCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionTestPacketCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CxpHostConnectionTestPacketCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionTestPacketCount")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CxpHostConnectionTestInjectError") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpHostConnectionTestInjectError")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpRevisionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpRevisionSelector")
  field(ZRST, "CXP_1_0")
  field(ZRVL, "0")
  field(ONST, "CXP_1_1")
  field(ONVL, "2")
  field(TWST, "CXP_1_1_1")
  field(TWVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpRevisionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpRevisionSelector")
  field(ZRST, "CXP_1_0")
  field(ZRVL, "0")
  field(ONST, "CXP_1_1")
  field(ONVL, "2")
  field(TWST, "CXP_1_1_1")
  field(TWVL, "4")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_CxpRevisionSupport_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpRevisionSupport")
  field(ZRST, "NotSupported")
  field(ZRVL, "0")
  field(ONST, "PartiallySupport")
  field(ONVL, "1")
  field(TWST, "Supported")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_CxpRevisionSupport") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CxpRevisionSupport")
  field(ZRST, "NotSupported")
  field(ZRVL, "0")
  field(ONST, "PartiallySupport")
  field(ONVL, "1")
  field(TWST, "Supported")
  field(TWVL, "2")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_LineSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineSelector")
  field(ZRST, "DIN11")
  field(ZRVL, "0")
  field(ONST, "DIN12")
  field(ONVL, "1")
  field(TWST, "DIN21")
  field(TWVL, "2")
  field(THST, "DIN22")
  field(THVL, "3")
  field(FRST, "IIN11")
  field(FRVL, "4")
  field(FVST, "IIN12")
  field(FVVL, "5")
  field(SXST, "IIN13")
  field(SXVL, "6")
  field(SVST, "IIN14")
  field(SVVL, "7")
  field(EIST, "IIN21")
  field(EIVL, "8")
  field(NIST, "IIN22")
  field(NIVL, "9")
  field(TEST, "IIN23")
  field(TEVL, "10")
  field(ELST, "IIN24")
  field(ELVL, "11")
  field(TVST, "IOUT11")
  field(TVVL, "12")
  field(TTST, "IOUT12")
  field(TTVL, "13")
  field(FTST, "IOUT21")
  field(FTVL, "14")
  field(FFST, "IOUT22")
  field(FFVL, "15")
  field(ZR1ST, "TTLIO11")
  field(ZR1VL, "16")
  field(ON1ST, "TTLIO12")
  field(ON1VL, "17")
  field(TW1ST, "TTLIO21")
  field(TW1VL, "18")
  field(TH1ST, "TTLIO22")
  field(TH1VL, "19")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_LineSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineSelector")
  field(ZRST, "DIN11")
  field(ZRVL, "0")
  field(ONST, "DIN12")
  field(ONVL, "1")
  field(TWST, "DIN21")
  field(TWVL, "2")
  field(THST, "DIN22")
  field(THVL, "3")
  field(FRST, "IIN11")
  field(FRVL, "4")
  field(FVST, "IIN12")
  field(FVVL, "5")
  field(SXST, "IIN13")
  field(SXVL, "6")
  field(SVST, "IIN14")
  field(SVVL, "7")
  field(EIST, "IIN21")
  field(EIVL, "8")
  field(NIST, "IIN22")
  field(NIVL, "9")
  field(TEST, "IIN23")
  field(TEVL, "10")
  field(ELST, "IIN24")
  field(ELVL, "11")
  field(TVST, "IOUT11")
  field(TVVL, "12")
  field(TTST, "IOUT12")
  field(TTVL, "13")
  field(FTST, "IOUT21")
  field(FTVL, "14")
  field(FFST, "IOUT22")
  field(FFVL, "15")
  field(ZR1ST, "TTLIO11")
  field(ZR1VL, "16")
  field(ON1ST, "TTLIO12")
  field(ON1VL, "17")
  field(TW1ST, "TTLIO21")
  field(TW1VL, "18")
  field(TH1ST, "TTLIO22")
  field(TH1VL, "19")
  field(DISA, "0")
}

*/

record(mbbi, "$(P)$(R)Interface_LineFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineFormat")
  field(ZRST, "ISO")
  field(ZRVL, "0")
  field(ONST, "DIFF")
  field(ONVL, "1")
  field(TWST, "TTL")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_LineFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineFormat")
  field(ZRST, "ISO")
  field(ZRVL, "0")
  field(ONST, "DIFF")
  field(ONVL, "1")
  field(TWST, "TTL")
  field(TWVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_LineMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineMode")
  field(ZRST, "Input")
  field(ZRVL, "1")
  field(ONST, "Output")
  field(ONVL, "2")
  field(TWST, "DriveLow")
  field(TWVL, "3")
  field(THST, "DriveHigh")
  field(THVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_LineMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineMode")
  field(ZRST, "Input")
  field(ZRVL, "1")
  field(ONST, "Output")
  field(ONVL, "2")
  field(TWST, "DriveLow")
  field(TWVL, "3")
  field(THST, "DriveHigh")
  field(THVL, "4")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Interface_LineInverter_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineInverter")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Interface_LineInverter") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineInverter")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_LineFilterStrength_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineFilterStrength")
  field(ZRST, "Lowest")
  field(ZRVL, "1")
  field(ONST, "Low")
  field(ONVL, "2")
  field(TWST, "Medium")
  field(TWVL, "3")
  field(THST, "High")
  field(THVL, "4")
  field(FRST, "Highest")
  field(FRVL, "5")
  field(FVST, "NotAvailable")
  field(FVVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_LineFilterStrength") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineFilterStrength")
  field(ZRST, "Lowest")
  field(ZRVL, "1")
  field(ONST, "Low")
  field(ONVL, "2")
  field(TWST, "Medium")
  field(TWVL, "3")
  field(THST, "High")
  field(THVL, "4")
  field(FRST, "Highest")
  field(FRVL, "5")
  field(FVST, "NotAvailable")
  field(FVVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Interface_LineFilterDelay_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineFilterDelay")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Interface_LineFilterDelay") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineFilterDelay")
  field(PREC, "3")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Interface_LineStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineStatus")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Interface_LineStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineStatus")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_LineStatusAll_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineStatusAll")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_LineStatusAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineStatusAll")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_LineSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineSource")
  field(ZRST, "UserOutput0")
  field(ZRVL, "1")
  field(ONST, "UserOutput1")
  field(ONVL, "2")
  field(TWST, "UserOutput2")
  field(TWVL, "3")
  field(THST, "UserOutput3")
  field(THVL, "4")
  field(FRST, "UserOutput4")
  field(FRVL, "5")
  field(FVST, "UserOutput5")
  field(FVVL, "6")
  field(SXST, "UserOutput6")
  field(SXVL, "7")
  field(SVST, "UserOutput7")
  field(SVVL, "8")
  field(EIST, "Device0Strobe")
  field(EIVL, "9")
  field(NIST, "Device1Strobe")
  field(NIVL, "10")
  field(TEST, "Device2Strobe")
  field(TEVL, "11")
  field(ELST, "Device3Strobe")
  field(ELVL, "12")
  field(TVST, "Device0CameraTri")
  field(TVVL, "13")
  field(TTST, "Device1CameraTri")
  field(TTVL, "14")
  field(FTST, "Device2CameraTri")
  field(FTVL, "15")
  field(FFST, "Device3CameraTri")
  field(FFVL, "16")
  field(ZR1ST, "Device0Stream0St")
  field(ZR1VL, "25")
  field(ON1ST, "Device1Stream0St")
  field(ON1VL, "26")
  field(TW1ST, "Device2Stream0St")
  field(TW1VL, "27")
  field(TH1ST, "Device3Stream0St")
  field(TH1VL, "28")
  field(FR1ST, "Low")
  field(FR1VL, "255")
  field(FV1ST, "NotAvailable")
  field(FV1VL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_LineSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineSource")
  field(ZRST, "UserOutput0")
  field(ZRVL, "1")
  field(ONST, "UserOutput1")
  field(ONVL, "2")
  field(TWST, "UserOutput2")
  field(TWVL, "3")
  field(THST, "UserOutput3")
  field(THVL, "4")
  field(FRST, "UserOutput4")
  field(FRVL, "5")
  field(FVST, "UserOutput5")
  field(FVVL, "6")
  field(SXST, "UserOutput6")
  field(SXVL, "7")
  field(SVST, "UserOutput7")
  field(SVVL, "8")
  field(EIST, "Device0Strobe")
  field(EIVL, "9")
  field(NIST, "Device1Strobe")
  field(NIVL, "10")
  field(TEST, "Device2Strobe")
  field(TEVL, "11")
  field(ELST, "Device3Strobe")
  field(ELVL, "12")
  field(TVST, "Device0CameraTri")
  field(TVVL, "13")
  field(TTST, "Device1CameraTri")
  field(TTVL, "14")
  field(FTST, "Device2CameraTri")
  field(FTVL, "15")
  field(FFST, "Device3CameraTri")
  field(FFVL, "16")
  field(ZR1ST, "Device0Stream0St")
  field(ZR1VL, "25")
  field(ON1ST, "Device1Stream0St")
  field(ON1VL, "26")
  field(TW1ST, "Device2Stream0St")
  field(TW1VL, "27")
  field(TH1ST, "Device3Stream0St")
  field(TH1VL, "28")
  field(FR1ST, "Low")
  field(FR1VL, "255")
  field(FV1ST, "NotAvailable")
  field(FV1VL, "0")
  field(DISA, "0")
}

*/

record(longin, "$(P)$(R)Interface_UserOutputValueAll_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_UserOutputValueAll")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_UserOutputValueAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_UserOutputValueAll")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_UserActions_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_UserActions")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_UserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_UserActions")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_AddUserAction_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_AddUserAction")
  field(ZRST, "UserEvent1")
  field(ZRVL, "1048576")
  field(ONST, "UserEvent2")
  field(ONVL, "2097152")
  field(TWST, "UserEvent3")
  field(TWVL, "4194304")
  field(THST, "UserEvent4")
  field(THVL, "8388608")
  field(FRST, "UserOutput0_High")
  field(FRVL, "1")
  field(FVST, "UserOutput0_Low")
  field(FVVL, "2")
  field(SXST, "UserOutput0_Togg")
  field(SXVL, "3")
  field(SVST, "UserOutput1_High")
  field(SVVL, "4")
  field(EIST, "UserOutput1_Low")
  field(EIVL, "8")
  field(NIST, "UserOutput1_Togg")
  field(NIVL, "12")
  field(TEST, "UserOutput2_High")
  field(TEVL, "16")
  field(ELST, "UserOutput2_Low")
  field(ELVL, "32")
  field(TVST, "UserOutput2_Togg")
  field(TVVL, "48")
  field(TTST, "UserOutput3_High")
  field(TTVL, "64")
  field(FTST, "UserOutput3_Low")
  field(FTVL, "128")
  field(FFST, "UserOutput3_Togg")
  field(FFVL, "192")
  field(ZR1ST, "UserOutput4_High")
  field(ZR1VL, "256")
  field(ON1ST, "UserOutput4_Low")
  field(ON1VL, "512")
  field(TW1ST, "UserOutput4_Togg")
  field(TW1VL, "768")
  field(TH1ST, "UserOutput5_High")
  field(TH1VL, "1024")
  field(FR1ST, "UserOutput5_Low")
  field(FR1VL, "2048")
  field(FV1ST, "UserOutput5_Togg")
  field(FV1VL, "3072")
  field(SX1ST, "UserOutput6_High")
  field(SX1VL, "4096")
  field(SV1ST, "UserOutput6_Low")
  field(SV1VL, "8192")
  field(EI1ST, "UserOutput6_Togg")
  field(EI1VL, "12288")
  field(NI1ST, "UserOutput7_High")
  field(NI1VL, "16384")
  field(TE1ST, "UserOutput7_Low")
  field(TE1VL, "32768")
  field(EL1ST, "UserOutput7_Togg")
  field(EL1VL, "49152")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_AddUserAction") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_AddUserAction")
  field(ZRST, "UserEvent1")
  field(ZRVL, "1048576")
  field(ONST, "UserEvent2")
  field(ONVL, "2097152")
  field(TWST, "UserEvent3")
  field(TWVL, "4194304")
  field(THST, "UserEvent4")
  field(THVL, "8388608")
  field(FRST, "UserOutput0_High")
  field(FRVL, "1")
  field(FVST, "UserOutput0_Low")
  field(FVVL, "2")
  field(SXST, "UserOutput0_Togg")
  field(SXVL, "3")
  field(SVST, "UserOutput1_High")
  field(SVVL, "4")
  field(EIST, "UserOutput1_Low")
  field(EIVL, "8")
  field(NIST, "UserOutput1_Togg")
  field(NIVL, "12")
  field(TEST, "UserOutput2_High")
  field(TEVL, "16")
  field(ELST, "UserOutput2_Low")
  field(ELVL, "32")
  field(TVST, "UserOutput2_Togg")
  field(TVVL, "48")
  field(TTST, "UserOutput3_High")
  field(TTVL, "64")
  field(FTST, "UserOutput3_Low")
  field(FTVL, "128")
  field(FFST, "UserOutput3_Togg")
  field(FFVL, "192")
  field(ZR1ST, "UserOutput4_High")
  field(ZR1VL, "256")
  field(ON1ST, "UserOutput4_Low")
  field(ON1VL, "512")
  field(TW1ST, "UserOutput4_Togg")
  field(TW1VL, "768")
  field(TH1ST, "UserOutput5_High")
  field(TH1VL, "1024")
  field(FR1ST, "UserOutput5_Low")
  field(FR1VL, "2048")
  field(FV1ST, "UserOutput5_Togg")
  field(FV1VL, "3072")
  field(SX1ST, "UserOutput6_High")
  field(SX1VL, "4096")
  field(SV1ST, "UserOutput6_Low")
  field(SV1VL, "8192")
  field(EI1ST, "UserOutput6_Togg")
  field(EI1VL, "12288")
  field(NI1ST, "UserOutput7_High")
  field(NI1VL, "16384")
  field(TE1ST, "UserOutput7_Low")
  field(TE1VL, "32768")
  field(EL1ST, "UserOutput7_Togg")
  field(EL1VL, "49152")
  field(DISA, "0")
}

*/

record(longout, "$(P)$(R)Interface_ClearUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_ClearUserActions")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_ExecuteUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_ExecuteUserActions")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_ScheduleUserActions_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_ScheduleUserActions")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_ScheduleUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_ScheduleUserActions")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_UserActionsSchedulerReference_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_UserActionsSchedulerReference")
  field(ZRST, "InternalTime")
  field(ZRVL, "1")
  field(ONST, "QDC1Position")
  field(ONVL, "2")
  field(TWST, "QDC2Position")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_UserActionsSchedulerReference") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_UserActionsSchedulerReference")
  field(ZRST, "InternalTime")
  field(ZRVL, "1")
  field(ONST, "QDC1Position")
  field(ONVL, "2")
  field(TWST, "QDC2Position")
  field(TWVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_ScheduledUserActionsPoolStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_ScheduledUserActionsPoolStatus")
  field(ZRST, "Empty")
  field(ZRVL, "1")
  field(ONST, "PartiallyFilled")
  field(ONVL, "2")
  field(TWST, "AlmostFull")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_ScheduledUserActionsPoolStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_ScheduledUserActionsPoolStatus")
  field(ZRST, "Empty")
  field(ZRVL, "1")
  field(ONST, "PartiallyFilled")
  field(ONVL, "2")
  field(TWST, "AlmostFull")
  field(TWVL, "3")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_DiscardScheduledUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DiscardScheduledUserActions")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_LineInputToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineInputToolSelector")
  field(ZRST, "LIN1")
  field(ZRVL, "1")
  field(ONST, "LIN2")
  field(ONVL, "2")
  field(TWST, "LIN3")
  field(TWVL, "3")
  field(THST, "LIN4")
  field(THVL, "4")
  field(FRST, "LIN5")
  field(FRVL, "5")
  field(FVST, "LIN6")
  field(FVVL, "6")
  field(SXST, "LIN7")
  field(SXVL, "7")
  field(SVST, "LIN8")
  field(SVVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_LineInputToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineInputToolSelector")
  field(ZRST, "LIN1")
  field(ZRVL, "1")
  field(ONST, "LIN2")
  field(ONVL, "2")
  field(TWST, "LIN3")
  field(TWVL, "3")
  field(THST, "LIN4")
  field(THVL, "4")
  field(FRST, "LIN5")
  field(FRVL, "5")
  field(FVST, "LIN6")
  field(FVVL, "6")
  field(SXST, "LIN7")
  field(SXVL, "7")
  field(SVST, "LIN8")
  field(SVVL, "8")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_LineInputToolSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineInputToolSource")
  field(ZRST, "DIN11")
  field(ZRVL, "0")
  field(ONST, "DIN12")
  field(ONVL, "1")
  field(TWST, "DIN21")
  field(TWVL, "2")
  field(THST, "DIN22")
  field(THVL, "3")
  field(FRST, "IIN11")
  field(FRVL, "4")
  field(FVST, "IIN12")
  field(FVVL, "5")
  field(SXST, "IIN13")
  field(SXVL, "6")
  field(SVST, "IIN14")
  field(SVVL, "7")
  field(EIST, "IIN21")
  field(EIVL, "8")
  field(NIST, "IIN22")
  field(NIVL, "9")
  field(TEST, "IIN23")
  field(TEVL, "10")
  field(ELST, "IIN24")
  field(ELVL, "11")
  field(TVST, "IOUT11")
  field(TVVL, "12")
  field(TTST, "IOUT12")
  field(TTVL, "13")
  field(FTST, "IOUT21")
  field(FTVL, "14")
  field(FFST, "IOUT22")
  field(FFVL, "15")
  field(ZR1ST, "TTLIO11")
  field(ZR1VL, "16")
  field(ON1ST, "TTLIO12")
  field(ON1VL, "17")
  field(TW1ST, "TTLIO21")
  field(TW1VL, "18")
  field(TH1ST, "TTLIO22")
  field(TH1VL, "19")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_LineInputToolSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineInputToolSource")
  field(ZRST, "DIN11")
  field(ZRVL, "0")
  field(ONST, "DIN12")
  field(ONVL, "1")
  field(TWST, "DIN21")
  field(TWVL, "2")
  field(THST, "DIN22")
  field(THVL, "3")
  field(FRST, "IIN11")
  field(FRVL, "4")
  field(FVST, "IIN12")
  field(FVVL, "5")
  field(SXST, "IIN13")
  field(SXVL, "6")
  field(SVST, "IIN14")
  field(SVVL, "7")
  field(EIST, "IIN21")
  field(EIVL, "8")
  field(NIST, "IIN22")
  field(NIVL, "9")
  field(TEST, "IIN23")
  field(TEVL, "10")
  field(ELST, "IIN24")
  field(ELVL, "11")
  field(TVST, "IOUT11")
  field(TVVL, "12")
  field(TTST, "IOUT12")
  field(TTVL, "13")
  field(FTST, "IOUT21")
  field(FTVL, "14")
  field(FFST, "IOUT22")
  field(FFVL, "15")
  field(ZR1ST, "TTLIO11")
  field(ZR1VL, "16")
  field(ON1ST, "TTLIO12")
  field(ON1VL, "17")
  field(TW1ST, "TTLIO21")
  field(TW1VL, "18")
  field(TH1ST, "TTLIO22")
  field(TH1VL, "19")
  field(DISA, "0")
}

*/

record(mbbi, "$(P)$(R)Interface_LineInputToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineInputToolActivation")
  field(ZRST, "RisingEdge")
  field(ZRVL, "1")
  field(ONST, "FallingEdge")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_LineInputToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_LineInputToolActivation")
  field(ZRST, "RisingEdge")
  field(ZRVL, "1")
  field(ONST, "FallingEdge")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_MultiplierDividerToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolSelector")
  field(ZRST, "MDV1")
  field(ZRVL, "1")
  field(ONST, "MDV2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_MultiplierDividerToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolSelector")
  field(ZRST, "MDV1")
  field(ZRVL, "1")
  field(ONST, "MDV2")
  field(ONVL, "2")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_MultiplierDividerToolSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "LIN1")
  field(ONVL, "1")
  field(TWST, "LIN2")
  field(TWVL, "2")
  field(THST, "LIN3")
  field(THVL, "3")
  field(FRST, "LIN4")
  field(FRVL, "4")
  field(FVST, "LIN5")
  field(FVVL, "5")
  field(SXST, "LIN6")
  field(SXVL, "6")
  field(SVST, "LIN7")
  field(SVVL, "7")
  field(EIST, "LIN8")
  field(EIVL, "8")
  field(NIST, "QDC1")
  field(NIVL, "9")
  field(TEST, "QDC2")
  field(TEVL, "10")
  field(ELST, "MDV1")
  field(ELVL, "11")
  field(TVST, "MDV2")
  field(TVVL, "12")
  field(TTST, "DIV1")
  field(TTVL, "13")
  field(FTST, "DIV2")
  field(FTVL, "14")
  field(FFST, "DEL1_1")
  field(FFVL, "15")
  field(ZR1ST, "DEL1_2")
  field(ZR1VL, "16")
  field(ON1ST, "DEL2_1")
  field(ON1VL, "17")
  field(TW1ST, "DEL2_2")
  field(TW1VL, "18")
  field(TH1ST, "EIN1")
  field(TH1VL, "19")
  field(FR1ST, "EIN2")
  field(FR1VL, "20")
  field(FV1ST, "UserEvent1")
  field(FV1VL, "21")
  field(SX1ST, "UserEvent2")
  field(SX1VL, "22")
  field(SV1ST, "UserEvent3")
  field(SV1VL, "23")
  field(EI1ST, "UserEvent4")
  field(EI1VL, "24")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_MultiplierDividerToolSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "LIN1")
  field(ONVL, "1")
  field(TWST, "LIN2")
  field(TWVL, "2")
  field(THST, "LIN3")
  field(THVL, "3")
  field(FRST, "LIN4")
  field(FRVL, "4")
  field(FVST, "LIN5")
  field(FVVL, "5")
  field(SXST, "LIN6")
  field(SXVL, "6")
  field(SVST, "LIN7")
  field(SVVL, "7")
  field(EIST, "LIN8")
  field(EIVL, "8")
  field(NIST, "QDC1")
  field(NIVL, "9")
  field(TEST, "QDC2")
  field(TEVL, "10")
  field(ELST, "MDV1")
  field(ELVL, "11")
  field(TVST, "MDV2")
  field(TVVL, "12")
  field(TTST, "DIV1")
  field(TTVL, "13")
  field(FTST, "DIV2")
  field(FTVL, "14")
  field(FFST, "DEL1_1")
  field(FFVL, "15")
  field(ZR1ST, "DEL1_2")
  field(ZR1VL, "16")
  field(ON1ST, "DEL2_1")
  field(ON1VL, "17")
  field(TW1ST, "DEL2_2")
  field(TW1VL, "18")
  field(TH1ST, "EIN1")
  field(TH1VL, "19")
  field(FR1ST, "EIN2")
  field(FR1VL, "20")
  field(FV1ST, "UserEvent1")
  field(FV1VL, "21")
  field(SX1ST, "UserEvent2")
  field(SX1VL, "22")
  field(SV1ST, "UserEvent3")
  field(SV1VL, "23")
  field(EI1ST, "UserEvent4")
  field(EI1VL, "24")
  field(DISA, "0")
}

*/

record(mbbi, "$(P)$(R)Interface_MultiplierDividerToolOutputControl_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolOutputControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_MultiplierDividerToolOutputControl") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolOutputControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Interface_MultiplierDividerToolMultiplicationFactor_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolMultiplicationFactor")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Interface_MultiplierDividerToolMultiplicationFactor") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolMultiplicationFactor")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Interface_MultiplierDividerToolDivisionFactor_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolDivisionFactor")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Interface_MultiplierDividerToolDivisionFactor") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolDivisionFactor")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_MultiplierDividerToolEffectiveMultiplicationFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolEffectiveMultiplicationFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_MultiplierDividerToolEffectiveMultiplicationFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolEffectiveMultiplicationFactor")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_MultiplierDividerToolEffectiveDivisionFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolEffectiveDivisionFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_MultiplierDividerToolEffectiveDivisionFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_MultiplierDividerToolEffectiveDivisionFactor")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_QuadratureDecoderToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolSelector")
  field(ZRST, "QDC1")
  field(ZRVL, "1")
  field(ONST, "QDC2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_QuadratureDecoderToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolSelector")
  field(ZRST, "QDC1")
  field(ZRVL, "1")
  field(ONST, "QDC2")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_QuadratureDecoderToolSources_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolSources")
  field(ZRST, "DIN11_DIN12")
  field(ZRVL, "1")
  field(ONST, "DIN21_DIN22")
  field(ONVL, "2")
  field(TWST, "IIN11_IIN12")
  field(TWVL, "3")
  field(THST, "IIN13_IIN14")
  field(THVL, "4")
  field(FRST, "IIN21_IIN22")
  field(FRVL, "5")
  field(FVST, "IIN23_IIN24")
  field(FVVL, "6")
  field(SXST, "TTLIO11_TTLIO12")
  field(SXVL, "7")
  field(SVST, "TTLIO21_TTLIO22")
  field(SVVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_QuadratureDecoderToolSources") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolSources")
  field(ZRST, "DIN11_DIN12")
  field(ZRVL, "1")
  field(ONST, "DIN21_DIN22")
  field(ONVL, "2")
  field(TWST, "IIN11_IIN12")
  field(TWVL, "3")
  field(THST, "IIN13_IIN14")
  field(THVL, "4")
  field(FRST, "IIN21_IIN22")
  field(FRVL, "5")
  field(FVST, "IIN23_IIN24")
  field(FVVL, "6")
  field(SXST, "TTLIO11_TTLIO12")
  field(SXVL, "7")
  field(SVST, "TTLIO21_TTLIO22")
  field(SVVL, "8")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_QuadratureDecoderToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolActivation")
  field(ZRST, "RisingEdgeA")
  field(ZRVL, "1")
  field(ONST, "FallingEdgeA")
  field(ONVL, "2")
  field(TWST, "AllEdgesA")
  field(TWVL, "3")
  field(THST, "AllEdgesAB")
  field(THVL, "4")
  field(FRST, "None")
  field(FRVL, "5")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_QuadratureDecoderToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolActivation")
  field(ZRST, "RisingEdgeA")
  field(ZRVL, "1")
  field(ONST, "FallingEdgeA")
  field(ONVL, "2")
  field(TWST, "AllEdgesA")
  field(TWVL, "3")
  field(THST, "AllEdgesAB")
  field(THVL, "4")
  field(FRST, "None")
  field(FRVL, "5")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_QuadratureDecoderToolForwardDirection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolForwardDirection")
  field(ZRST, "A_Leads_B")
  field(ZRVL, "1")
  field(ONST, "B_Leads_A")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_QuadratureDecoderToolForwardDirection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolForwardDirection")
  field(ZRST, "A_Leads_B")
  field(ZRVL, "1")
  field(ONST, "B_Leads_A")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_QuadratureDecoderToolOutputMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolOutputMode")
  field(ZRST, "Unfiltered")
  field(ZRVL, "1")
  field(ONST, "ForwardOnly")
  field(ONVL, "2")
  field(TWST, "FirstPassForward")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_QuadratureDecoderToolOutputMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolOutputMode")
  field(ZRST, "Unfiltered")
  field(ZRVL, "1")
  field(ONST, "ForwardOnly")
  field(ONVL, "2")
  field(TWST, "FirstPassForward")
  field(TWVL, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_QuadratureDecoderToolPosition_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolPosition")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_QuadratureDecoderToolDirection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolDirection")
  field(ZRST, "Forward")
  field(ZRVL, "0")
  field(ONST, "Backward")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_QuadratureDecoderToolDirection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolDirection")
  field(ZRST, "Forward")
  field(ZRVL, "0")
  field(ONST, "Backward")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_QuadratureDecoderToolPositionReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_QuadratureDecoderToolPositionReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_DividerToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolSelector")
  field(ZRST, "DIV1")
  field(ZRVL, "1")
  field(ONST, "DIV2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_DividerToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolSelector")
  field(ZRST, "DIV1")
  field(ZRVL, "1")
  field(ONST, "DIV2")
  field(ONVL, "2")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_DividerToolSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "LIN1")
  field(ONVL, "1")
  field(TWST, "LIN2")
  field(TWVL, "2")
  field(THST, "LIN3")
  field(THVL, "3")
  field(FRST, "LIN4")
  field(FRVL, "4")
  field(FVST, "LIN5")
  field(FVVL, "5")
  field(SXST, "LIN6")
  field(SXVL, "6")
  field(SVST, "LIN7")
  field(SVVL, "7")
  field(EIST, "LIN8")
  field(EIVL, "8")
  field(NIST, "QDC1")
  field(NIVL, "9")
  field(TEST, "QDC2")
  field(TEVL, "10")
  field(ELST, "MDV1")
  field(ELVL, "11")
  field(TVST, "MDV2")
  field(TVVL, "12")
  field(TTST, "DIV1")
  field(TTVL, "13")
  field(FTST, "DIV2")
  field(FTVL, "14")
  field(FFST, "DEL1_1")
  field(FFVL, "15")
  field(ZR1ST, "DEL1_2")
  field(ZR1VL, "16")
  field(ON1ST, "DEL2_1")
  field(ON1VL, "17")
  field(TW1ST, "DEL2_2")
  field(TW1VL, "18")
  field(TH1ST, "EIN1")
  field(TH1VL, "19")
  field(FR1ST, "EIN2")
  field(FR1VL, "20")
  field(FV1ST, "UserEvent1")
  field(FV1VL, "21")
  field(SX1ST, "UserEvent2")
  field(SX1VL, "22")
  field(SV1ST, "UserEvent3")
  field(SV1VL, "23")
  field(EI1ST, "UserEvent4")
  field(EI1VL, "24")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_DividerToolSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "LIN1")
  field(ONVL, "1")
  field(TWST, "LIN2")
  field(TWVL, "2")
  field(THST, "LIN3")
  field(THVL, "3")
  field(FRST, "LIN4")
  field(FRVL, "4")
  field(FVST, "LIN5")
  field(FVVL, "5")
  field(SXST, "LIN6")
  field(SXVL, "6")
  field(SVST, "LIN7")
  field(SVVL, "7")
  field(EIST, "LIN8")
  field(EIVL, "8")
  field(NIST, "QDC1")
  field(NIVL, "9")
  field(TEST, "QDC2")
  field(TEVL, "10")
  field(ELST, "MDV1")
  field(ELVL, "11")
  field(TVST, "MDV2")
  field(TVVL, "12")
  field(TTST, "DIV1")
  field(TTVL, "13")
  field(FTST, "DIV2")
  field(FTVL, "14")
  field(FFST, "DEL1_1")
  field(FFVL, "15")
  field(ZR1ST, "DEL1_2")
  field(ZR1VL, "16")
  field(ON1ST, "DEL2_1")
  field(ON1VL, "17")
  field(TW1ST, "DEL2_2")
  field(TW1VL, "18")
  field(TH1ST, "EIN1")
  field(TH1VL, "19")
  field(FR1ST, "EIN2")
  field(FR1VL, "20")
  field(FV1ST, "UserEvent1")
  field(FV1VL, "21")
  field(SX1ST, "UserEvent2")
  field(SX1VL, "22")
  field(SV1ST, "UserEvent3")
  field(SV1VL, "23")
  field(EI1ST, "UserEvent4")
  field(EI1VL, "24")
  field(DISA, "0")
}

*/

record(mbbi, "$(P)$(R)Interface_DividerToolEnableControl_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolEnableControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_DividerToolEnableControl") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolEnableControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_DividerToolDivisionFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolDivisionFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_DividerToolDivisionFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolDivisionFactor")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_DividerToolInitialOffset_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolInitialOffset")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_DividerToolInitialOffset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DividerToolInitialOffset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_DelayToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolSelector")
  field(ZRST, "DEL1")
  field(ZRVL, "1")
  field(ONST, "DEL2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_DelayToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolSelector")
  field(ZRST, "DEL1")
  field(ZRVL, "1")
  field(ONST, "DEL2")
  field(ONVL, "2")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_DelayToolSource1_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolSource1")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "LIN1")
  field(ONVL, "1")
  field(TWST, "LIN2")
  field(TWVL, "2")
  field(THST, "LIN3")
  field(THVL, "3")
  field(FRST, "LIN4")
  field(FRVL, "4")
  field(FVST, "LIN5")
  field(FVVL, "5")
  field(SXST, "LIN6")
  field(SXVL, "6")
  field(SVST, "LIN7")
  field(SVVL, "7")
  field(EIST, "LIN8")
  field(EIVL, "8")
  field(NIST, "QDC1")
  field(NIVL, "9")
  field(TEST, "QDC2")
  field(TEVL, "10")
  field(ELST, "MDV1")
  field(ELVL, "11")
  field(TVST, "MDV2")
  field(TVVL, "12")
  field(TTST, "DIV1")
  field(TTVL, "13")
  field(FTST, "DIV2")
  field(FTVL, "14")
  field(FFST, "DEL1_1")
  field(FFVL, "15")
  field(ZR1ST, "DEL1_2")
  field(ZR1VL, "16")
  field(ON1ST, "DEL2_1")
  field(ON1VL, "17")
  field(TW1ST, "DEL2_2")
  field(TW1VL, "18")
  field(TH1ST, "EIN1")
  field(TH1VL, "19")
  field(FR1ST, "EIN2")
  field(FR1VL, "20")
  field(FV1ST, "UserEvent1")
  field(FV1VL, "21")
  field(SX1ST, "UserEvent2")
  field(SX1VL, "22")
  field(SV1ST, "UserEvent3")
  field(SV1VL, "23")
  field(EI1ST, "UserEvent4")
  field(EI1VL, "24")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_DelayToolSource1") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolSource1")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "LIN1")
  field(ONVL, "1")
  field(TWST, "LIN2")
  field(TWVL, "2")
  field(THST, "LIN3")
  field(THVL, "3")
  field(FRST, "LIN4")
  field(FRVL, "4")
  field(FVST, "LIN5")
  field(FVVL, "5")
  field(SXST, "LIN6")
  field(SXVL, "6")
  field(SVST, "LIN7")
  field(SVVL, "7")
  field(EIST, "LIN8")
  field(EIVL, "8")
  field(NIST, "QDC1")
  field(NIVL, "9")
  field(TEST, "QDC2")
  field(TEVL, "10")
  field(ELST, "MDV1")
  field(ELVL, "11")
  field(TVST, "MDV2")
  field(TVVL, "12")
  field(TTST, "DIV1")
  field(TTVL, "13")
  field(FTST, "DIV2")
  field(FTVL, "14")
  field(FFST, "DEL1_1")
  field(FFVL, "15")
  field(ZR1ST, "DEL1_2")
  field(ZR1VL, "16")
  field(ON1ST, "DEL2_1")
  field(ON1VL, "17")
  field(TW1ST, "DEL2_2")
  field(TW1VL, "18")
  field(TH1ST, "EIN1")
  field(TH1VL, "19")
  field(FR1ST, "EIN2")
  field(FR1VL, "20")
  field(FV1ST, "UserEvent1")
  field(FV1VL, "21")
  field(SX1ST, "UserEvent2")
  field(SX1VL, "22")
  field(SV1ST, "UserEvent3")
  field(SV1VL, "23")
  field(EI1ST, "UserEvent4")
  field(EI1VL, "24")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_DelayToolSource2_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolSource2")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "LIN1")
  field(ONVL, "1")
  field(TWST, "LIN2")
  field(TWVL, "2")
  field(THST, "LIN3")
  field(THVL, "3")
  field(FRST, "LIN4")
  field(FRVL, "4")
  field(FVST, "LIN5")
  field(FVVL, "5")
  field(SXST, "LIN6")
  field(SXVL, "6")
  field(SVST, "LIN7")
  field(SVVL, "7")
  field(EIST, "LIN8")
  field(EIVL, "8")
  field(NIST, "QDC1")
  field(NIVL, "9")
  field(TEST, "QDC2")
  field(TEVL, "10")
  field(ELST, "MDV1")
  field(ELVL, "11")
  field(TVST, "MDV2")
  field(TVVL, "12")
  field(TTST, "DIV1")
  field(TTVL, "13")
  field(FTST, "DIV2")
  field(FTVL, "14")
  field(FFST, "DEL1_1")
  field(FFVL, "15")
  field(ZR1ST, "DEL1_2")
  field(ZR1VL, "16")
  field(ON1ST, "DEL2_1")
  field(ON1VL, "17")
  field(TW1ST, "DEL2_2")
  field(TW1VL, "18")
  field(TH1ST, "EIN1")
  field(TH1VL, "19")
  field(FR1ST, "EIN2")
  field(FR1VL, "20")
  field(FV1ST, "UserEvent1")
  field(FV1VL, "21")
  field(SX1ST, "UserEvent2")
  field(SX1VL, "22")
  field(SV1ST, "UserEvent3")
  field(SV1VL, "23")
  field(EI1ST, "UserEvent4")
  field(EI1VL, "24")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_DelayToolSource2") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolSource2")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "LIN1")
  field(ONVL, "1")
  field(TWST, "LIN2")
  field(TWVL, "2")
  field(THST, "LIN3")
  field(THVL, "3")
  field(FRST, "LIN4")
  field(FRVL, "4")
  field(FVST, "LIN5")
  field(FVVL, "5")
  field(SXST, "LIN6")
  field(SXVL, "6")
  field(SVST, "LIN7")
  field(SVVL, "7")
  field(EIST, "LIN8")
  field(EIVL, "8")
  field(NIST, "QDC1")
  field(NIVL, "9")
  field(TEST, "QDC2")
  field(TEVL, "10")
  field(ELST, "MDV1")
  field(ELVL, "11")
  field(TVST, "MDV2")
  field(TVVL, "12")
  field(TTST, "DIV1")
  field(TTVL, "13")
  field(FTST, "DIV2")
  field(FTVL, "14")
  field(FFST, "DEL1_1")
  field(FFVL, "15")
  field(ZR1ST, "DEL1_2")
  field(ZR1VL, "16")
  field(ON1ST, "DEL2_1")
  field(ON1VL, "17")
  field(TW1ST, "DEL2_2")
  field(TW1VL, "18")
  field(TH1ST, "EIN1")
  field(TH1VL, "19")
  field(FR1ST, "EIN2")
  field(FR1VL, "20")
  field(FV1ST, "UserEvent1")
  field(FV1VL, "21")
  field(SX1ST, "UserEvent2")
  field(SX1VL, "22")
  field(SV1ST, "UserEvent3")
  field(SV1VL, "23")
  field(EI1ST, "UserEvent4")
  field(EI1VL, "24")
  field(DISA, "0")
}

*/

record(mbbi, "$(P)$(R)Interface_DelayToolClockSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolClockSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "TIME8NS")
  field(ONVL, "1")
  field(TWST, "TIME200NS")
  field(TWVL, "2")
  field(THST, "TIME1US")
  field(THVL, "3")
  field(FRST, "LIN1")
  field(FRVL, "4")
  field(FVST, "LIN2")
  field(FVVL, "5")
  field(SXST, "LIN3")
  field(SXVL, "6")
  field(SVST, "LIN4")
  field(SVVL, "7")
  field(EIST, "LIN5")
  field(EIVL, "8")
  field(NIST, "LIN6")
  field(NIVL, "9")
  field(TEST, "LIN7")
  field(TEVL, "10")
  field(ELST, "LIN8")
  field(ELVL, "11")
  field(TVST, "QDC1")
  field(TVVL, "12")
  field(TTST, "QDC2")
  field(TTVL, "13")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_DelayToolClockSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolClockSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "TIME8NS")
  field(ONVL, "1")
  field(TWST, "TIME200NS")
  field(TWVL, "2")
  field(THST, "TIME1US")
  field(THVL, "3")
  field(FRST, "LIN1")
  field(FRVL, "4")
  field(FVST, "LIN2")
  field(FVVL, "5")
  field(SXST, "LIN3")
  field(SXVL, "6")
  field(SVST, "LIN4")
  field(SVVL, "7")
  field(EIST, "LIN5")
  field(EIVL, "8")
  field(NIST, "LIN6")
  field(NIVL, "9")
  field(TEST, "LIN7")
  field(TEVL, "10")
  field(ELST, "LIN8")
  field(ELVL, "11")
  field(TVST, "QDC1")
  field(TVVL, "12")
  field(TTST, "QDC2")
  field(TTVL, "13")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_DelayToolDelayValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolDelayValue")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_DelayToolDelayValue") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_DelayToolDelayValue")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_EventInputToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventInputToolSelector")
  field(ZRST, "EIN1")
  field(ZRVL, "1")
  field(ONST, "EIN2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_EventInputToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventInputToolSelector")
  field(ZRST, "EIN1")
  field(ZRVL, "1")
  field(ONST, "EIN2")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_EventInputToolSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventInputToolSource")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_EventInputToolSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventInputToolSource")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_EventInputToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventInputToolActivation")
  field(ZRST, "StartOfScan")
  field(ZRVL, "129")
  field(ONST, "EndOfScan")
  field(ONVL, "128")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_EventInputToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventInputToolActivation")
  field(ZRST, "StartOfScan")
  field(ZRVL, "129")
  field(ONST, "EndOfScan")
  field(ONVL, "128")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_InternalTime_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_InternalTime")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_PCIeMaxPayloadSizeSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeMaxPayloadSizeSupported")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_PCIeMaxPayloadSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeMaxPayloadSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_PCIeMaxReadRequestSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeMaxReadRequestSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_PCIeMaxLinkSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeMaxLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_PCIeMaxLinkSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeMaxLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_PCIeCurrentLinkSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeCurrentLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_PCIeCurrentLinkSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeCurrentLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_PCIeMaximumLinkWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeMaximumLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_PCIeMaximumLinkWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeMaximumLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_PCIeNegotiatedLinkWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeNegotiatedLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_PCIeNegotiatedLinkWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeNegotiatedLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Interface_PCIeLinkSpeed2500MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeLinkSpeed2500MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Interface_PCIeLinkSpeed2500MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeLinkSpeed2500MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Interface_PCIeLinkSpeed5000MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeLinkSpeed5000MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Interface_PCIeLinkSpeed5000MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeLinkSpeed5000MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Interface_PCIeLinkSpeed8000MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeLinkSpeed8000MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Interface_PCIeLinkSpeed8000MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PCIeLinkSpeed8000MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_FanStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FanStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "NotOK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_FanStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FanStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "NotOK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_TemperatureSensorSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_TemperatureSensorSelector")
  field(ZRST, "Grabber")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_TemperatureSensorSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_TemperatureSensorSelector")
  field(ZRST, "Grabber")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Interface_Temperature_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_Temperature")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Interface_Temperature") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_Temperature")
  field(PREC, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_AuxiliaryPowerInput_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_AuxiliaryPowerInput")
  field(ZRST, "Unconnected")
  field(ZRVL, "0")
  field(ONST, "Connected")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_AuxiliaryPowerInput") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_AuxiliaryPowerInput")
  field(ZRST, "Unconnected")
  field(ZRVL, "0")
  field(ONST, "Connected")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_AuxiliaryPower12VInput_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_AuxiliaryPower12VInput")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_AuxiliaryPower12VInput") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_AuxiliaryPower12VInput")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_FirmwareBoardID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_FirmwareBoardID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_CPLDRevision_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CPLDRevision")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CPLDRevision") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CPLDRevision")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_PreviousBootBank_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PreviousBootBank")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_PreviousBootBank") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PreviousBootBank")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_NextBootBank_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_NextBootBank")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_NextBootBank") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_NextBootBank")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_CurrentBankSelect_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CurrentBankSelect")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CurrentBankSelect") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CurrentBankSelect")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_CurrentBankSelectReadback_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CurrentBankSelectReadback")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_CurrentBankSelectReadback") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CurrentBankSelectReadback")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_NextBankSelect_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_NextBankSelect")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_NextBankSelect") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_NextBankSelect")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_SpiBankStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_SpiBankStatus")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Interface_PotBankStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_PotBankStatus")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_EventSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventSelector")
  field(ZRST, "LIN1")
  field(ZRVL, "32768")
  field(ONST, "LIN2")
  field(ONVL, "32769")
  field(TWST, "LIN3")
  field(TWVL, "32770")
  field(THST, "LIN4")
  field(THVL, "32771")
  field(FRST, "LIN5")
  field(FRVL, "32772")
  field(FVST, "LIN6")
  field(FVVL, "32773")
  field(SXST, "LIN7")
  field(SXVL, "32774")
  field(SVST, "LIN8")
  field(SVVL, "32775")
  field(EIST, "QDC1")
  field(EIVL, "32896")
  field(NIST, "QDC1Dir")
  field(NIVL, "32897")
  field(TEST, "QDC2")
  field(TEVL, "32898")
  field(ELST, "QDC2Dir")
  field(ELVL, "32899")
  field(TVST, "DIV1")
  field(TVVL, "33024")
  field(TTST, "DIV2")
  field(TTVL, "33025")
  field(FTST, "MDV1")
  field(FTVL, "33152")
  field(FFST, "MDV2")
  field(FFVL, "33153")
  field(ZR1ST, "DEL11")
  field(ZR1VL, "33280")
  field(ON1ST, "DEL12")
  field(ON1VL, "33281")
  field(TW1ST, "DEL21")
  field(TW1VL, "33282")
  field(TH1ST, "DEL22")
  field(TH1VL, "33283")
  field(FR1ST, "UserEvent1")
  field(FR1VL, "33536")
  field(FV1ST, "UserEvent2")
  field(FV1VL, "33537")
  field(SX1ST, "UserEvent3")
  field(SX1VL, "33538")
  field(SV1ST, "UserEvent4")
  field(SV1VL, "33539")
  field(EI1ST, "EIN1")
  field(EI1VL, "33664")
  field(NI1ST, "EIN2")
  field(NI1VL, "33665")
  field(TE1ST, "CrcErrorCxpA")
  field(TE1VL, "33408")
  field(EL1ST, "CrcErrorCxpB")
  field(EL1VL, "33409")
  field(TV1ST, "CrcErrorCxpC")
  field(TV1VL, "33410")
  field(TT1ST, "CrcErrorCxpD")
  field(TT1VL, "33411")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_EventSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventSelector")
  field(ZRST, "LIN1")
  field(ZRVL, "32768")
  field(ONST, "LIN2")
  field(ONVL, "32769")
  field(TWST, "LIN3")
  field(TWVL, "32770")
  field(THST, "LIN4")
  field(THVL, "32771")
  field(FRST, "LIN5")
  field(FRVL, "32772")
  field(FVST, "LIN6")
  field(FVVL, "32773")
  field(SXST, "LIN7")
  field(SXVL, "32774")
  field(SVST, "LIN8")
  field(SVVL, "32775")
  field(EIST, "QDC1")
  field(EIVL, "32896")
  field(NIST, "QDC1Dir")
  field(NIVL, "32897")
  field(TEST, "QDC2")
  field(TEVL, "32898")
  field(ELST, "QDC2Dir")
  field(ELVL, "32899")
  field(TVST, "DIV1")
  field(TVVL, "33024")
  field(TTST, "DIV2")
  field(TTVL, "33025")
  field(FTST, "MDV1")
  field(FTVL, "33152")
  field(FFST, "MDV2")
  field(FFVL, "33153")
  field(ZR1ST, "DEL11")
  field(ZR1VL, "33280")
  field(ON1ST, "DEL12")
  field(ON1VL, "33281")
  field(TW1ST, "DEL21")
  field(TW1VL, "33282")
  field(TH1ST, "DEL22")
  field(TH1VL, "33283")
  field(FR1ST, "UserEvent1")
  field(FR1VL, "33536")
  field(FV1ST, "UserEvent2")
  field(FV1VL, "33537")
  field(SX1ST, "UserEvent3")
  field(SX1VL, "33538")
  field(SV1ST, "UserEvent4")
  field(SV1VL, "33539")
  field(EI1ST, "EIN1")
  field(EI1VL, "33664")
  field(NI1ST, "EIN2")
  field(NI1VL, "33665")
  field(TE1ST, "CrcErrorCxpA")
  field(TE1VL, "33408")
  field(EL1ST, "CrcErrorCxpB")
  field(EL1VL, "33409")
  field(TV1ST, "CrcErrorCxpC")
  field(TV1VL, "33410")
  field(TT1ST, "CrcErrorCxpD")
  field(TT1VL, "33411")
  field(DISA, "0")
}

*/

record(bi, "$(P)$(R)Interface_EventNotification_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventNotification")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Interface_EventNotification") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventNotification")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_EventNotificationContext1_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventNotificationContext1")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "LIN1EventCount")
  field(TWVL, "32768")
  field(THST, "LIN2EventCount")
  field(THVL, "32769")
  field(FRST, "LIN3EventCount")
  field(FRVL, "32770")
  field(FVST, "LIN4EventCount")
  field(FVVL, "32771")
  field(SXST, "LIN5EventCount")
  field(SXVL, "32772")
  field(SVST, "LIN6EventCount")
  field(SVVL, "32773")
  field(EIST, "LIN7EventCount")
  field(EIVL, "32774")
  field(NIST, "LIN8EventCount")
  field(NIVL, "32775")
  field(TEST, "QDC1EventCount")
  field(TEVL, "32896")
  field(ELST, "QDC1DirEventCoun")
  field(ELVL, "32897")
  field(TVST, "QDC2EventCount")
  field(TVVL, "32898")
  field(TTST, "QDC2DirEventCoun")
  field(TTVL, "32899")
  field(FTST, "DIV1EventCount")
  field(FTVL, "33024")
  field(FFST, "DIV2EventCount")
  field(FFVL, "33025")
  field(ZR1ST, "MDV1EventCount")
  field(ZR1VL, "33152")
  field(ON1ST, "MDV2EventCount")
  field(ON1VL, "33153")
  field(TW1ST, "DEL11EventCount")
  field(TW1VL, "33280")
  field(TH1ST, "DEL12EventCount")
  field(TH1VL, "33281")
  field(FR1ST, "DEL21EventCount")
  field(FR1VL, "33282")
  field(FV1ST, "DEL22EventCount")
  field(FV1VL, "33283")
  field(SX1ST, "UserEvent1EventC")
  field(SX1VL, "33536")
  field(SV1ST, "UserEvent2EventC")
  field(SV1VL, "33537")
  field(EI1ST, "UserEvent3EventC")
  field(EI1VL, "33538")
  field(NI1ST, "UserEvent4EventC")
  field(NI1VL, "33539")
  field(TE1ST, "EIN1EventCount")
  field(TE1VL, "33664")
  field(EL1ST, "EIN2EventCount")
  field(EL1VL, "33665")
  field(TV1ST, "CrcErrorCxpAEven")
  field(TV1VL, "33408")
  field(TT1ST, "CrcErrorCxpBEven")
  field(TT1VL, "33409")
  field(FT1ST, "CrcErrorCxpCEven")
  field(FT1VL, "33410")
  field(FF1ST, "CrcErrorCxpDEven")
  field(FF1VL, "33411")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_EventNotificationContext1") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventNotificationContext1")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "LIN1EventCount")
  field(TWVL, "32768")
  field(THST, "LIN2EventCount")
  field(THVL, "32769")
  field(FRST, "LIN3EventCount")
  field(FRVL, "32770")
  field(FVST, "LIN4EventCount")
  field(FVVL, "32771")
  field(SXST, "LIN5EventCount")
  field(SXVL, "32772")
  field(SVST, "LIN6EventCount")
  field(SVVL, "32773")
  field(EIST, "LIN7EventCount")
  field(EIVL, "32774")
  field(NIST, "LIN8EventCount")
  field(NIVL, "32775")
  field(TEST, "QDC1EventCount")
  field(TEVL, "32896")
  field(ELST, "QDC1DirEventCoun")
  field(ELVL, "32897")
  field(TVST, "QDC2EventCount")
  field(TVVL, "32898")
  field(TTST, "QDC2DirEventCoun")
  field(TTVL, "32899")
  field(FTST, "DIV1EventCount")
  field(FTVL, "33024")
  field(FFST, "DIV2EventCount")
  field(FFVL, "33025")
  field(ZR1ST, "MDV1EventCount")
  field(ZR1VL, "33152")
  field(ON1ST, "MDV2EventCount")
  field(ON1VL, "33153")
  field(TW1ST, "DEL11EventCount")
  field(TW1VL, "33280")
  field(TH1ST, "DEL12EventCount")
  field(TH1VL, "33281")
  field(FR1ST, "DEL21EventCount")
  field(FR1VL, "33282")
  field(FV1ST, "DEL22EventCount")
  field(FV1VL, "33283")
  field(SX1ST, "UserEvent1EventC")
  field(SX1VL, "33536")
  field(SV1ST, "UserEvent2EventC")
  field(SV1VL, "33537")
  field(EI1ST, "UserEvent3EventC")
  field(EI1VL, "33538")
  field(NI1ST, "UserEvent4EventC")
  field(NI1VL, "33539")
  field(TE1ST, "EIN1EventCount")
  field(TE1VL, "33664")
  field(EL1ST, "EIN2EventCount")
  field(EL1VL, "33665")
  field(TV1ST, "CrcErrorCxpAEven")
  field(TV1VL, "33408")
  field(TT1ST, "CrcErrorCxpBEven")
  field(TT1VL, "33409")
  field(FT1ST, "CrcErrorCxpCEven")
  field(FT1VL, "33410")
  field(FF1ST, "CrcErrorCxpDEven")
  field(FF1VL, "33411")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_EventNotificationContext2_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventNotificationContext2")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "LIN1EventCount")
  field(TWVL, "32768")
  field(THST, "LIN2EventCount")
  field(THVL, "32769")
  field(FRST, "LIN3EventCount")
  field(FRVL, "32770")
  field(FVST, "LIN4EventCount")
  field(FVVL, "32771")
  field(SXST, "LIN5EventCount")
  field(SXVL, "32772")
  field(SVST, "LIN6EventCount")
  field(SVVL, "32773")
  field(EIST, "LIN7EventCount")
  field(EIVL, "32774")
  field(NIST, "LIN8EventCount")
  field(NIVL, "32775")
  field(TEST, "QDC1EventCount")
  field(TEVL, "32896")
  field(ELST, "QDC1DirEventCoun")
  field(ELVL, "32897")
  field(TVST, "QDC2EventCount")
  field(TVVL, "32898")
  field(TTST, "QDC2DirEventCoun")
  field(TTVL, "32899")
  field(FTST, "DIV1EventCount")
  field(FTVL, "33024")
  field(FFST, "DIV2EventCount")
  field(FFVL, "33025")
  field(ZR1ST, "MDV1EventCount")
  field(ZR1VL, "33152")
  field(ON1ST, "MDV2EventCount")
  field(ON1VL, "33153")
  field(TW1ST, "DEL11EventCount")
  field(TW1VL, "33280")
  field(TH1ST, "DEL12EventCount")
  field(TH1VL, "33281")
  field(FR1ST, "DEL21EventCount")
  field(FR1VL, "33282")
  field(FV1ST, "DEL22EventCount")
  field(FV1VL, "33283")
  field(SX1ST, "UserEvent1EventC")
  field(SX1VL, "33536")
  field(SV1ST, "UserEvent2EventC")
  field(SV1VL, "33537")
  field(EI1ST, "UserEvent3EventC")
  field(EI1VL, "33538")
  field(NI1ST, "UserEvent4EventC")
  field(NI1VL, "33539")
  field(TE1ST, "EIN1EventCount")
  field(TE1VL, "33664")
  field(EL1ST, "EIN2EventCount")
  field(EL1VL, "33665")
  field(TV1ST, "CrcErrorCxpAEven")
  field(TV1VL, "33408")
  field(TT1ST, "CrcErrorCxpBEven")
  field(TT1VL, "33409")
  field(FT1ST, "CrcErrorCxpCEven")
  field(FT1VL, "33410")
  field(FF1ST, "CrcErrorCxpDEven")
  field(FF1VL, "33411")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_EventNotificationContext2") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventNotificationContext2")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "LIN1EventCount")
  field(TWVL, "32768")
  field(THST, "LIN2EventCount")
  field(THVL, "32769")
  field(FRST, "LIN3EventCount")
  field(FRVL, "32770")
  field(FVST, "LIN4EventCount")
  field(FVVL, "32771")
  field(SXST, "LIN5EventCount")
  field(SXVL, "32772")
  field(SVST, "LIN6EventCount")
  field(SVVL, "32773")
  field(EIST, "LIN7EventCount")
  field(EIVL, "32774")
  field(NIST, "LIN8EventCount")
  field(NIVL, "32775")
  field(TEST, "QDC1EventCount")
  field(TEVL, "32896")
  field(ELST, "QDC1DirEventCoun")
  field(ELVL, "32897")
  field(TVST, "QDC2EventCount")
  field(TVVL, "32898")
  field(TTST, "QDC2DirEventCoun")
  field(TTVL, "32899")
  field(FTST, "DIV1EventCount")
  field(FTVL, "33024")
  field(FFST, "DIV2EventCount")
  field(FFVL, "33025")
  field(ZR1ST, "MDV1EventCount")
  field(ZR1VL, "33152")
  field(ON1ST, "MDV2EventCount")
  field(ON1VL, "33153")
  field(TW1ST, "DEL11EventCount")
  field(TW1VL, "33280")
  field(TH1ST, "DEL12EventCount")
  field(TH1VL, "33281")
  field(FR1ST, "DEL21EventCount")
  field(FR1VL, "33282")
  field(FV1ST, "DEL22EventCount")
  field(FV1VL, "33283")
  field(SX1ST, "UserEvent1EventC")
  field(SX1VL, "33536")
  field(SV1ST, "UserEvent2EventC")
  field(SV1VL, "33537")
  field(EI1ST, "UserEvent3EventC")
  field(EI1VL, "33538")
  field(NI1ST, "UserEvent4EventC")
  field(NI1VL, "33539")
  field(TE1ST, "EIN1EventCount")
  field(TE1VL, "33664")
  field(EL1ST, "EIN2EventCount")
  field(EL1VL, "33665")
  field(TV1ST, "CrcErrorCxpAEven")
  field(TV1VL, "33408")
  field(TT1ST, "CrcErrorCxpBEven")
  field(TT1VL, "33409")
  field(FT1ST, "CrcErrorCxpCEven")
  field(FT1VL, "33410")
  field(FF1ST, "CrcErrorCxpDEven")
  field(FF1VL, "33411")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbi, "$(P)$(R)Interface_EventNotificationContext3_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventNotificationContext3")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "LIN1EventCount")
  field(TWVL, "32768")
  field(THST, "LIN2EventCount")
  field(THVL, "32769")
  field(FRST, "LIN3EventCount")
  field(FRVL, "32770")
  field(FVST, "LIN4EventCount")
  field(FVVL, "32771")
  field(SXST, "LIN5EventCount")
  field(SXVL, "32772")
  field(SVST, "LIN6EventCount")
  field(SVVL, "32773")
  field(EIST, "LIN7EventCount")
  field(EIVL, "32774")
  field(NIST, "LIN8EventCount")
  field(NIVL, "32775")
  field(TEST, "QDC1EventCount")
  field(TEVL, "32896")
  field(ELST, "QDC1DirEventCoun")
  field(ELVL, "32897")
  field(TVST, "QDC2EventCount")
  field(TVVL, "32898")
  field(TTST, "QDC2DirEventCoun")
  field(TTVL, "32899")
  field(FTST, "DIV1EventCount")
  field(FTVL, "33024")
  field(FFST, "DIV2EventCount")
  field(FFVL, "33025")
  field(ZR1ST, "MDV1EventCount")
  field(ZR1VL, "33152")
  field(ON1ST, "MDV2EventCount")
  field(ON1VL, "33153")
  field(TW1ST, "DEL11EventCount")
  field(TW1VL, "33280")
  field(TH1ST, "DEL12EventCount")
  field(TH1VL, "33281")
  field(FR1ST, "DEL21EventCount")
  field(FR1VL, "33282")
  field(FV1ST, "DEL22EventCount")
  field(FV1VL, "33283")
  field(SX1ST, "UserEvent1EventC")
  field(SX1VL, "33536")
  field(SV1ST, "UserEvent2EventC")
  field(SV1VL, "33537")
  field(EI1ST, "UserEvent3EventC")
  field(EI1VL, "33538")
  field(NI1ST, "UserEvent4EventC")
  field(NI1VL, "33539")
  field(TE1ST, "EIN1EventCount")
  field(TE1VL, "33664")
  field(EL1ST, "EIN2EventCount")
  field(EL1VL, "33665")
  field(TV1ST, "CrcErrorCxpAEven")
  field(TV1VL, "33408")
  field(TT1ST, "CrcErrorCxpBEven")
  field(TT1VL, "33409")
  field(FT1ST, "CrcErrorCxpCEven")
  field(FT1VL, "33410")
  field(FF1ST, "CrcErrorCxpDEven")
  field(FF1VL, "33411")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Interface_EventNotificationContext3") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventNotificationContext3")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "LIN1EventCount")
  field(TWVL, "32768")
  field(THST, "LIN2EventCount")
  field(THVL, "32769")
  field(FRST, "LIN3EventCount")
  field(FRVL, "32770")
  field(FVST, "LIN4EventCount")
  field(FVVL, "32771")
  field(SXST, "LIN5EventCount")
  field(SXVL, "32772")
  field(SVST, "LIN6EventCount")
  field(SVVL, "32773")
  field(EIST, "LIN7EventCount")
  field(EIVL, "32774")
  field(NIST, "LIN8EventCount")
  field(NIVL, "32775")
  field(TEST, "QDC1EventCount")
  field(TEVL, "32896")
  field(ELST, "QDC1DirEventCoun")
  field(ELVL, "32897")
  field(TVST, "QDC2EventCount")
  field(TVVL, "32898")
  field(TTST, "QDC2DirEventCoun")
  field(TTVL, "32899")
  field(FTST, "DIV1EventCount")
  field(FTVL, "33024")
  field(FFST, "DIV2EventCount")
  field(FFVL, "33025")
  field(ZR1ST, "MDV1EventCount")
  field(ZR1VL, "33152")
  field(ON1ST, "MDV2EventCount")
  field(ON1VL, "33153")
  field(TW1ST, "DEL11EventCount")
  field(TW1VL, "33280")
  field(TH1ST, "DEL12EventCount")
  field(TH1VL, "33281")
  field(FR1ST, "DEL21EventCount")
  field(FR1VL, "33282")
  field(FV1ST, "DEL22EventCount")
  field(FV1VL, "33283")
  field(SX1ST, "UserEvent1EventC")
  field(SX1VL, "33536")
  field(SV1ST, "UserEvent2EventC")
  field(SV1VL, "33537")
  field(EI1ST, "UserEvent3EventC")
  field(EI1VL, "33538")
  field(NI1ST, "UserEvent4EventC")
  field(NI1VL, "33539")
  field(TE1ST, "EIN1EventCount")
  field(TE1VL, "33664")
  field(EL1ST, "EIN2EventCount")
  field(EL1VL, "33665")
  field(TV1ST, "CrcErrorCxpAEven")
  field(TV1VL, "33408")
  field(TT1ST, "CrcErrorCxpBEven")
  field(TT1VL, "33409")
  field(FT1ST, "CrcErrorCxpCEven")
  field(FT1VL, "33410")
  field(FF1ST, "CrcErrorCxpDEven")
  field(FF1VL, "33411")
  field(DISA, "0")
}

*/

record(longin, "$(P)$(R)Interface_EventCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Interface_EventCountReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EventCountReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Interface_OemSafetyKeyVerification_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_OemSafetyKeyVerification")
  field(ZRST, "ProgrammingKey")
  field(ZRVL, "1")
  field(ONST, "EncryptedKey")
  field(ONVL, "2")
  field(TWST, "ProgrammingKeyOr")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Interface_OemSafetyKeyVerification") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_OemSafetyKeyVerification")
  field(ZRST, "ProgrammingKey")
  field(ZRVL, "1")
  field(ONST, "EncryptedKey")
  field(ONVL, "2")
  field(TWST, "ProgrammingKeyOr")
  field(TWVL, "3")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Interface_CheckOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_CheckOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Interface_ProgramOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_ProgramOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Interface_EncryptedOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Interface_EncryptedOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, /home/beams/MENGBRET/test/Euresys_Coaxlink_TLDevice_6_1_1.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)Device_DeviceID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_DeviceID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Device_DeviceVendorName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_DeviceVendorName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Device_DeviceModelName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_DeviceModelName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Device_DeviceAccessStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_DeviceAccessStatus")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Device_DeviceAccessStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_DeviceAccessStatus")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Device_DeviceType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_DeviceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Device_DeviceType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_DeviceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Device_StreamSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StreamSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_StreamSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StreamSelector")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Device_StreamID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StreamID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_DeviceReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_DeviceReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Device_CameraControlMethod_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CameraControlMethod")
  field(ZRST, "NC")
  field(ZRVL, "0")
  field(ONST, "RC")
  field(ONVL, "1")
  field(TWST, "RG")
  field(TWVL, "2")
  field(THST, "EXTERNAL")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Device_CameraControlMethod") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CameraControlMethod")
  field(ZRST, "NC")
  field(ZRVL, "0")
  field(ONST, "RC")
  field(ONVL, "1")
  field(TWST, "RG")
  field(TWVL, "2")
  field(THST, "EXTERNAL")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Device_C2CLinkConfiguration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_C2CLinkConfiguration")
  field(ZRST, "Disconnected")
  field(ZRVL, "3")
  field(ONST, "Master")
  field(ONVL, "1")
  field(TWST, "Slave")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Device_C2CLinkConfiguration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_C2CLinkConfiguration")
  field(ZRST, "Disconnected")
  field(ZRVL, "3")
  field(ONST, "Master")
  field(ONVL, "1")
  field(TWST, "Slave")
  field(TWVL, "2")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Device_ExposureReadoutOverlap_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ExposureReadoutOverlap")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Device_ExposureReadoutOverlap") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ExposureReadoutOverlap")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Device_ExposureRecoveryTime_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ExposureRecoveryTime")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Device_ExposureRecoveryTime") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ExposureRecoveryTime")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Device_ExposureTime_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ExposureTime")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Device_ExposureTime") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ExposureTime")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Device_StrobeDelay_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StrobeDelay")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Device_StrobeDelay") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StrobeDelay")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Device_StrobeDuration_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StrobeDuration")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Device_StrobeDuration") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StrobeDuration")
  field(PREC, "3")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Device_CycleTriggerSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CycleTriggerSource")
  field(ZRST, "Immediate")
  field(ZRVL, "254")
  field(ONST, "StartCycle")
  field(ONVL, "0")
  field(TWST, "C2C")
  field(TWVL, "255")
  field(THST, "LIN1")
  field(THVL, "1")
  field(FRST, "LIN2")
  field(FRVL, "2")
  field(FVST, "LIN3")
  field(FVVL, "3")
  field(SXST, "LIN4")
  field(SXVL, "4")
  field(SVST, "LIN5")
  field(SVVL, "5")
  field(EIST, "LIN6")
  field(EIVL, "6")
  field(NIST, "LIN7")
  field(NIVL, "7")
  field(TEST, "LIN8")
  field(TEVL, "8")
  field(ELST, "QDC1")
  field(ELVL, "9")
  field(TVST, "QDC2")
  field(TVVL, "10")
  field(TTST, "MDV1")
  field(TTVL, "11")
  field(FTST, "MDV2")
  field(FTVL, "12")
  field(FFST, "DIV1")
  field(FFVL, "13")
  field(ZR1ST, "DIV2")
  field(ZR1VL, "14")
  field(ON1ST, "DEL1_1")
  field(ON1VL, "15")
  field(TW1ST, "DEL1_2")
  field(TW1VL, "16")
  field(TH1ST, "DEL2_1")
  field(TH1VL, "17")
  field(FR1ST, "DEL2_2")
  field(FR1VL, "18")
  field(FV1ST, "EIN1")
  field(FV1VL, "19")
  field(SX1ST, "EIN2")
  field(SX1VL, "20")
  field(SV1ST, "UserEvent1")
  field(SV1VL, "21")
  field(EI1ST, "UserEvent2")
  field(EI1VL, "22")
  field(NI1ST, "UserEvent3")
  field(NI1VL, "23")
  field(TE1ST, "UserEvent4")
  field(TE1VL, "24")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Device_CycleTriggerSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CycleTriggerSource")
  field(ZRST, "Immediate")
  field(ZRVL, "254")
  field(ONST, "StartCycle")
  field(ONVL, "0")
  field(TWST, "C2C")
  field(TWVL, "255")
  field(THST, "LIN1")
  field(THVL, "1")
  field(FRST, "LIN2")
  field(FRVL, "2")
  field(FVST, "LIN3")
  field(FVVL, "3")
  field(SXST, "LIN4")
  field(SXVL, "4")
  field(SVST, "LIN5")
  field(SVVL, "5")
  field(EIST, "LIN6")
  field(EIVL, "6")
  field(NIST, "LIN7")
  field(NIVL, "7")
  field(TEST, "LIN8")
  field(TEVL, "8")
  field(ELST, "QDC1")
  field(ELVL, "9")
  field(TVST, "QDC2")
  field(TVVL, "10")
  field(TTST, "MDV1")
  field(TTVL, "11")
  field(FTST, "MDV2")
  field(FTVL, "12")
  field(FFST, "DIV1")
  field(FFVL, "13")
  field(ZR1ST, "DIV2")
  field(ZR1VL, "14")
  field(ON1ST, "DEL1_1")
  field(ON1VL, "15")
  field(TW1ST, "DEL1_2")
  field(TW1VL, "16")
  field(TH1ST, "DEL2_1")
  field(TH1VL, "17")
  field(FR1ST, "DEL2_2")
  field(FR1VL, "18")
  field(FV1ST, "EIN1")
  field(FV1VL, "19")
  field(SX1ST, "EIN2")
  field(SX1VL, "20")
  field(SV1ST, "UserEvent1")
  field(SV1VL, "21")
  field(EI1ST, "UserEvent2")
  field(EI1VL, "22")
  field(NI1ST, "UserEvent3")
  field(NI1VL, "23")
  field(TE1ST, "UserEvent4")
  field(TE1VL, "24")
  field(DISA, "0")
}

*/

record(ai, "$(P)$(R)Device_CycleTargetPeriod_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CycleTargetPeriod")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Device_CycleTargetPeriod") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CycleTargetPeriod")
  field(PREC, "3")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_StartCycle") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StartCycle")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Device_CycleLostTriggerCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CycleLostTriggerCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_CycleLostTriggerCountReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CycleLostTriggerCountReset")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Device_StartOfSequenceTriggerSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StartOfSequenceTriggerSource")
  field(ZRST, "Immediate")
  field(ZRVL, "254")
  field(ONST, "StartSequence")
  field(ONVL, "0")
  field(TWST, "LIN1")
  field(TWVL, "1")
  field(THST, "LIN2")
  field(THVL, "2")
  field(FRST, "LIN3")
  field(FRVL, "3")
  field(FVST, "LIN4")
  field(FVVL, "4")
  field(SXST, "LIN5")
  field(SXVL, "5")
  field(SVST, "LIN6")
  field(SVVL, "6")
  field(EIST, "LIN7")
  field(EIVL, "7")
  field(NIST, "LIN8")
  field(NIVL, "8")
  field(TEST, "QDC1")
  field(TEVL, "9")
  field(ELST, "QDC2")
  field(ELVL, "10")
  field(TVST, "MDV1")
  field(TVVL, "11")
  field(TTST, "MDV2")
  field(TTVL, "12")
  field(FTST, "DIV1")
  field(FTVL, "13")
  field(FFST, "DIV2")
  field(FFVL, "14")
  field(ZR1ST, "DEL1_1")
  field(ZR1VL, "15")
  field(ON1ST, "DEL1_2")
  field(ON1VL, "16")
  field(TW1ST, "DEL2_1")
  field(TW1VL, "17")
  field(TH1ST, "DEL2_2")
  field(TH1VL, "18")
  field(FR1ST, "EIN1")
  field(FR1VL, "19")
  field(FV1ST, "EIN2")
  field(FV1VL, "20")
  field(SX1ST, "UserEvent1")
  field(SX1VL, "21")
  field(SV1ST, "UserEvent2")
  field(SV1VL, "22")
  field(EI1ST, "UserEvent3")
  field(EI1VL, "23")
  field(NI1ST, "UserEvent4")
  field(NI1VL, "24")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Device_StartOfSequenceTriggerSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StartOfSequenceTriggerSource")
  field(ZRST, "Immediate")
  field(ZRVL, "254")
  field(ONST, "StartSequence")
  field(ONVL, "0")
  field(TWST, "LIN1")
  field(TWVL, "1")
  field(THST, "LIN2")
  field(THVL, "2")
  field(FRST, "LIN3")
  field(FRVL, "3")
  field(FVST, "LIN4")
  field(FVVL, "4")
  field(SXST, "LIN5")
  field(SXVL, "5")
  field(SVST, "LIN6")
  field(SVVL, "6")
  field(EIST, "LIN7")
  field(EIVL, "7")
  field(NIST, "LIN8")
  field(NIVL, "8")
  field(TEST, "QDC1")
  field(TEVL, "9")
  field(ELST, "QDC2")
  field(ELVL, "10")
  field(TVST, "MDV1")
  field(TVVL, "11")
  field(TTST, "MDV2")
  field(TTVL, "12")
  field(FTST, "DIV1")
  field(FTVL, "13")
  field(FFST, "DIV2")
  field(FFVL, "14")
  field(ZR1ST, "DEL1_1")
  field(ZR1VL, "15")
  field(ON1ST, "DEL1_2")
  field(ON1VL, "16")
  field(TW1ST, "DEL2_1")
  field(TW1VL, "17")
  field(TH1ST, "DEL2_2")
  field(TH1VL, "18")
  field(FR1ST, "EIN1")
  field(FR1VL, "19")
  field(FV1ST, "EIN2")
  field(FV1VL, "20")
  field(SX1ST, "UserEvent1")
  field(SX1VL, "21")
  field(SV1ST, "UserEvent2")
  field(SV1VL, "22")
  field(EI1ST, "UserEvent3")
  field(EI1VL, "23")
  field(NI1ST, "UserEvent4")
  field(NI1VL, "24")
  field(DISA, "0")
}

*/

record(longout, "$(P)$(R)Device_StartSequence") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_StartSequence")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_AbortSequence") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_AbortSequence")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Device_CxpLinkConfiguration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpLinkConfiguration")
  field(ZRST, "CXP1_X1")
  field(ZRVL, "65576")
  field(ONST, "CXP2_X1")
  field(ONVL, "65584")
  field(TWST, "CXP3_X1")
  field(TWVL, "65592")
  field(THST, "CXP5_X1")
  field(THVL, "65600")
  field(FRST, "CXP6_X1")
  field(FRVL, "65608")
  field(FVST, "CXP1_X2")
  field(FVVL, "131112")
  field(SXST, "CXP2_X2")
  field(SXVL, "131120")
  field(SVST, "CXP3_X2")
  field(SVVL, "131128")
  field(EIST, "CXP5_X2")
  field(EIVL, "131136")
  field(NIST, "CXP6_X2")
  field(NIVL, "131144")
  field(TEST, "CXP1_X3")
  field(TEVL, "196648")
  field(ELST, "CXP2_X3")
  field(ELVL, "196656")
  field(TVST, "CXP3_X3")
  field(TVVL, "196664")
  field(TTST, "CXP5_X3")
  field(TTVL, "196672")
  field(FTST, "CXP6_X3")
  field(FTVL, "196680")
  field(FFST, "CXP1_X4")
  field(FFVL, "262184")
  field(ZR1ST, "CXP2_X4")
  field(ZR1VL, "262192")
  field(ON1ST, "CXP3_X4")
  field(ON1VL, "262200")
  field(TW1ST, "CXP5_X4")
  field(TW1VL, "262208")
  field(TH1ST, "CXP6_X4")
  field(TH1VL, "262216")
  field(FR1ST, "CXP1_X8")
  field(FR1VL, "524328")
  field(FV1ST, "CXP2_X8")
  field(FV1VL, "524336")
  field(SX1ST, "CXP3_X8")
  field(SX1VL, "524344")
  field(SV1ST, "CXP5_X8")
  field(SV1VL, "524352")
  field(EI1ST, "CXP6_X8")
  field(EI1VL, "524360")
  field(NI1ST, "Preferred")
  field(NI1VL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Device_CxpLinkConfiguration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpLinkConfiguration")
  field(ZRST, "CXP1_X1")
  field(ZRVL, "65576")
  field(ONST, "CXP2_X1")
  field(ONVL, "65584")
  field(TWST, "CXP3_X1")
  field(TWVL, "65592")
  field(THST, "CXP5_X1")
  field(THVL, "65600")
  field(FRST, "CXP6_X1")
  field(FRVL, "65608")
  field(FVST, "CXP1_X2")
  field(FVVL, "131112")
  field(SXST, "CXP2_X2")
  field(SXVL, "131120")
  field(SVST, "CXP3_X2")
  field(SVVL, "131128")
  field(EIST, "CXP5_X2")
  field(EIVL, "131136")
  field(NIST, "CXP6_X2")
  field(NIVL, "131144")
  field(TEST, "CXP1_X3")
  field(TEVL, "196648")
  field(ELST, "CXP2_X3")
  field(ELVL, "196656")
  field(TVST, "CXP3_X3")
  field(TVVL, "196664")
  field(TTST, "CXP5_X3")
  field(TTVL, "196672")
  field(FTST, "CXP6_X3")
  field(FTVL, "196680")
  field(FFST, "CXP1_X4")
  field(FFVL, "262184")
  field(ZR1ST, "CXP2_X4")
  field(ZR1VL, "262192")
  field(ON1ST, "CXP3_X4")
  field(ON1VL, "262200")
  field(TW1ST, "CXP5_X4")
  field(TW1VL, "262208")
  field(TH1ST, "CXP6_X4")
  field(TH1VL, "262216")
  field(FR1ST, "CXP1_X8")
  field(FR1VL, "524328")
  field(FV1ST, "CXP2_X8")
  field(FV1VL, "524336")
  field(SX1ST, "CXP3_X8")
  field(SX1VL, "524344")
  field(SV1ST, "CXP5_X8")
  field(SV1VL, "524352")
  field(EI1ST, "CXP6_X8")
  field(EI1VL, "524360")
  field(NI1ST, "Preferred")
  field(NI1VL, "0")
  field(DISA, "0")
}

*/

record(mbbi, "$(P)$(R)Device_CxpHostConnectionBase_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpHostConnectionBase")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Device_CxpHostConnectionBase") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpHostConnectionBase")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Device_CxpHostConnectionCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpHostConnectionCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Device_CxpTriggerMessageFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpTriggerMessageFormat")
  field(ZRST, "Pulse")
  field(ZRVL, "1")
  field(ONST, "RisingEdge")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Device_CxpTriggerMessageFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpTriggerMessageFormat")
  field(ZRST, "Pulse")
  field(ZRVL, "1")
  field(ONST, "RisingEdge")
  field(ONVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Device_CxpTriggerAckTimeout_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpTriggerAckTimeout")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Device_CxpTriggerAckTimeout") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpTriggerAckTimeout")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Device_CxpTriggerMaxResendCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpTriggerMaxResendCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_CxpTriggerMaxResendCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpTriggerMaxResendCount")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_CxpPacketArbiterReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_CxpPacketArbiterReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Device_EventSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventSelector")
  field(ZRST, "CameraTriggerRis")
  field(ZRVL, "32833")
  field(ONST, "CameraTriggerFal")
  field(ONVL, "32834")
  field(TWST, "StrobeRisingEdge")
  field(TWVL, "32835")
  field(THST, "StrobeFallingEdg")
  field(THVL, "32836")
  field(FRST, "AllowNextCycle")
  field(FRVL, "32837")
  field(FVST, "DiscardedCicTrig")
  field(FVVL, "32838")
  field(SXST, "PendingCicTrigge")
  field(SXVL, "32839")
  field(SVST, "CxpTriggerAck")
  field(SVVL, "32840")
  field(EIST, "CxpTriggerResend")
  field(EIVL, "32841")
  field(NIST, "Trigger")
  field(NIVL, "32842")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Device_EventSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventSelector")
  field(ZRST, "CameraTriggerRis")
  field(ZRVL, "32833")
  field(ONST, "CameraTriggerFal")
  field(ONVL, "32834")
  field(TWST, "StrobeRisingEdge")
  field(TWVL, "32835")
  field(THST, "StrobeFallingEdg")
  field(THVL, "32836")
  field(FRST, "AllowNextCycle")
  field(FRVL, "32837")
  field(FVST, "DiscardedCicTrig")
  field(FVVL, "32838")
  field(SXST, "PendingCicTrigge")
  field(SXVL, "32839")
  field(SVST, "CxpTriggerAck")
  field(SVVL, "32840")
  field(EIST, "CxpTriggerResend")
  field(EIVL, "32841")
  field(NIST, "Trigger")
  field(NIVL, "32842")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Device_EventNotification_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventNotification")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Device_EventNotification") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventNotification")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Device_EventNotificationContext1_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventNotificationContext1")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Device_EventNotificationContext1") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventNotificationContext1")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbi, "$(P)$(R)Device_EventNotificationContext2_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventNotificationContext2")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Device_EventNotificationContext2") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventNotificationContext2")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbi, "$(P)$(R)Device_EventNotificationContext3_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventNotificationContext3")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Device_EventNotificationContext3") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventNotificationContext3")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(DISA, "0")
}

*/

record(longin, "$(P)$(R)Device_EventCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_EventCountReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_EventCountReset")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Device_ErrorSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ErrorSelector")
  field(ZRST, "All")
  field(ZRVL, "255")
  field(ONST, "StreamPacketSize")
  field(ONVL, "0")
  field(TWST, "StreamPacketFifo")
  field(TWVL, "2")
  field(THST, "CameraTriggerOve")
  field(THVL, "3")
  field(FRST, "DidNotReceiveTri")
  field(FRVL, "4")
  field(FVST, "TriggerPacketRet")
  field(FVVL, "5")
  field(SXST, "InputStreamFifoH")
  field(SXVL, "6")
  field(SVST, "InputStreamFifoF")
  field(SVVL, "7")
  field(EIST, "ImageHeaderError")
  field(EIVL, "8")
  field(NIST, "MigAxiWriteError")
  field(NIVL, "9")
  field(TEST, "MigAxiReadError")
  field(TEVL, "10")
  field(ELST, "PacketWithUnexpe")
  field(ELVL, "11")
  field(TVST, "StreamPacketCrcE")
  field(TVVL, "12")
  field(TTST, "StreamPacketCrcE")
  field(TTVL, "13")
  field(FTST, "StreamPacketCrcE")
  field(FTVL, "14")
  field(FFST, "StreamPacketCrcE")
  field(FFVL, "15")
  field(ZR1ST, "StartOfScanSkipp")
  field(ZR1VL, "16")
  field(ON1ST, "PrematureEndOfSc")
  field(ON1VL, "17")
  field(TW1ST, "ExternalTriggerR")
  field(TW1VL, "18")
  field(TH1ST, "Unknown")
  field(TH1VL, "254")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Device_ErrorSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ErrorSelector")
  field(ZRST, "All")
  field(ZRVL, "255")
  field(ONST, "StreamPacketSize")
  field(ONVL, "0")
  field(TWST, "StreamPacketFifo")
  field(TWVL, "2")
  field(THST, "CameraTriggerOve")
  field(THVL, "3")
  field(FRST, "DidNotReceiveTri")
  field(FRVL, "4")
  field(FVST, "TriggerPacketRet")
  field(FVVL, "5")
  field(SXST, "InputStreamFifoH")
  field(SXVL, "6")
  field(SVST, "InputStreamFifoF")
  field(SVVL, "7")
  field(EIST, "ImageHeaderError")
  field(EIVL, "8")
  field(NIST, "MigAxiWriteError")
  field(NIVL, "9")
  field(TEST, "MigAxiReadError")
  field(TEVL, "10")
  field(ELST, "PacketWithUnexpe")
  field(ELVL, "11")
  field(TVST, "StreamPacketCrcE")
  field(TVVL, "12")
  field(TTST, "StreamPacketCrcE")
  field(TTVL, "13")
  field(FTST, "StreamPacketCrcE")
  field(FTVL, "14")
  field(FFST, "StreamPacketCrcE")
  field(FFVL, "15")
  field(ZR1ST, "StartOfScanSkipp")
  field(ZR1VL, "16")
  field(ON1ST, "PrematureEndOfSc")
  field(ON1VL, "17")
  field(TW1ST, "ExternalTriggerR")
  field(TW1VL, "18")
  field(TH1ST, "Unknown")
  field(TH1VL, "254")
  field(DISA, "0")
}

*/

record(longin, "$(P)$(R)Device_ErrorCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ErrorCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Device_ErrorCountReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Device_ErrorCountReset")
  field(DISA, "0")
}

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, /home/beams/MENGBRET/test/Adimec_Q12A180CXP_1_1_3.edl, P=$(P),R=$(R)

record(longin, "$(P)$(R)Remote_Standard_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Standard")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_Standard") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Standard")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_Revision_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Revision")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_Revision") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Revision")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_XmlManifestSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlManifestSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_XmlManifestSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlManifestSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_XmlManifestSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlManifestSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_XmlManifestSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlManifestSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_XmlVersion_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_XmlVersion") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlVersion")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_XmlSchemeVersion_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlSchemeVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_XmlSchemeVersion") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlSchemeVersion")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_XmlUrlAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlUrlAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_XmlUrlAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_XmlUrlAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_Iidc2Address_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Iidc2Address")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_Iidc2Address") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Iidc2Address")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_ConnectionReset_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConnectionReset")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_ConnectionReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConnectionReset")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_DeviceConnectionID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceConnectionID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DeviceConnectionID") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceConnectionID")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_MasterHostConnectionID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_MasterHostConnectionID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_MasterHostConnectionID") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_MasterHostConnectionID")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_ControlPacketSizeMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ControlPacketSizeMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_ControlPacketSizeMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ControlPacketSizeMax")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_StreamPacketSizeMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_StreamPacketSizeMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_StreamPacketSizeMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_StreamPacketSizeMax")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_ConnectionConfig_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConnectionConfig")
  field(ZRST, "CXP3_X1")
  field(ZRVL, "65592")
  field(ONST, "CXP6_X1")
  field(ONVL, "65608")
  field(TWST, "CXP3_X2")
  field(TWVL, "131128")
  field(THST, "CXP6_X2")
  field(THVL, "131144")
  field(FRST, "CXP3_X4")
  field(FRVL, "262200")
  field(FVST, "CXP6_X4")
  field(FVVL, "262216")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_ConnectionConfig") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConnectionConfig")
  field(ZRST, "CXP3_X1")
  field(ZRVL, "65592")
  field(ONST, "CXP6_X1")
  field(ONVL, "65608")
  field(TWST, "CXP3_X2")
  field(TWVL, "131128")
  field(THST, "CXP6_X2")
  field(THVL, "131144")
  field(FRST, "CXP3_X4")
  field(FRVL, "262200")
  field(FVST, "CXP6_X4")
  field(FVVL, "262216")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_ConnectionConfigDefault_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConnectionConfigDefault")
  field(ZRST, "CXP3_X1")
  field(ZRVL, "65592")
  field(ONST, "CXP6_X1")
  field(ONVL, "65608")
  field(TWST, "CXP3_X2")
  field(TWVL, "131128")
  field(THST, "CXP6_X2")
  field(THVL, "131144")
  field(FRST, "CXP3_X4")
  field(FRVL, "262200")
  field(FVST, "CXP6_X4")
  field(FVVL, "262216")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_ConnectionConfigDefault") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConnectionConfigDefault")
  field(ZRST, "CXP3_X1")
  field(ZRVL, "65592")
  field(ONST, "CXP6_X1")
  field(ONVL, "65608")
  field(TWST, "CXP3_X2")
  field(TWVL, "131128")
  field(THST, "CXP6_X2")
  field(THVL, "131144")
  field(FRST, "CXP3_X4")
  field(FRVL, "262200")
  field(FVST, "CXP6_X4")
  field(FVVL, "262216")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_TestMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_TestMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_TestErrorCountSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestErrorCountSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_TestErrorCountSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestErrorCountSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_TestErrorCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestErrorCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_TestErrorCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestErrorCount")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_TestPacketCountTx_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestPacketCountTx")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_TestPacketCountTx") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestPacketCountTx")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_TestPacketCountRx_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestPacketCountRx")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_TestPacketCountRx") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestPacketCountRx")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_ElectricalCompliancyTest_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ElectricalCompliancyTest")
  field(ZRST, "NormalOperatingM")
  field(ZRVL, "0")
  field(ONST, "CXP3_X1")
  field(ONVL, "65592")
  field(TWST, "CXP6_X1")
  field(TWVL, "65608")
  field(THST, "CXP3_X2")
  field(THVL, "131128")
  field(FRST, "CXP6_X2")
  field(FRVL, "131144")
  field(FVST, "CXP3_X4")
  field(FVVL, "262200")
  field(SXST, "CXP6_X4")
  field(SXVL, "262216")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_ElectricalCompliancyTest") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ElectricalCompliancyTest")
  field(ZRST, "NormalOperatingM")
  field(ZRVL, "0")
  field(ONST, "CXP3_X1")
  field(ONVL, "65592")
  field(TWST, "CXP6_X1")
  field(TWVL, "65608")
  field(THST, "CXP3_X2")
  field(THVL, "131128")
  field(FRST, "CXP6_X2")
  field(FRVL, "131144")
  field(FVST, "CXP3_X4")
  field(FVVL, "262200")
  field(SXST, "CXP6_X4")
  field(SXVL, "262216")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_WidthAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WidthAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_WidthAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WidthAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_HeightAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_HeightAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_HeightAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_HeightAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_AcquisitionModeAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionModeAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AcquisitionModeAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionModeAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_AcquisitionStartAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionStartAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AcquisitionStartAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionStartAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_AcquisitionStopAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionStopAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AcquisitionStopAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionStopAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_PixelFormatAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_PixelFormatAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_PixelFormatAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_PixelFormatAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_DeviceTapGeometryAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceTapGeometryAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DeviceTapGeometryAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceTapGeometryAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_Image1StreamIDAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Image1StreamIDAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_Image1StreamIDAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Image1StreamIDAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_HsUpconnection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_HsUpconnection")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_HsUpconnection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_HsUpconnection")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_DeviceVendorName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceVendorName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_DeviceModelName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceModelName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_DeviceManufacturerInfo_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceManufacturerInfo")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_DeviceVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_DeviceFirmwareVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceFirmwareVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_DeviceSerialNumber_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceSerialNumber")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_DeviceUserID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceUserID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_DeviceIndicatorMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceIndicatorMode")
  field(ZRST, "Inactive")
  field(ZRVL, "0")
  field(ONST, "Active")
  field(ONVL, "1")
  field(TWST, "ErrorStatus")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_DeviceIndicatorMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceIndicatorMode")
  field(ZRST, "Inactive")
  field(ZRVL, "0")
  field(ONST, "Active")
  field(ONVL, "1")
  field(TWST, "ErrorStatus")
  field(TWVL, "2")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_BuiltInTest_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BuiltInTest")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_BuiltInTest") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BuiltInTest")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SensorTemperature_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorTemperature")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorTemperature") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorTemperature")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_Width_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Width")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_Width") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Width")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_Height_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Height")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_Height") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Height")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SensorWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorWidth")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorWidth")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SensorHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorHeight")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_WidthMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WidthMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_WidthMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WidthMax")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_HeightMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_HeightMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_HeightMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_HeightMax")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_OffsetX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_OffsetX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_OffsetX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_OffsetX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_OffsetY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_OffsetY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_OffsetY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_OffsetY")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_ReverseX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ReverseX")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_ReverseX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ReverseX")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_ReverseY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ReverseY")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_ReverseY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ReverseY")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_PixelFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_PixelFormat")
  field(ZRST, "Mono8")
  field(ZRVL, "17301505")
  field(ONST, "Mono10")
  field(ONVL, "17825795")
  field(TWST, "BayerBG8")
  field(TWVL, "17301515")
  field(THST, "BayerBG10")
  field(THVL, "17825807")
  field(FRST, "BayerGB8")
  field(FRVL, "17301514")
  field(FVST, "BayerGB10")
  field(FVVL, "17825806")
  field(SXST, "BayerGR8")
  field(SXVL, "17301512")
  field(SVST, "BayerGR10")
  field(SVVL, "17825804")
  field(EIST, "BayerRG8")
  field(EIVL, "17301513")
  field(NIST, "BayerRG10")
  field(NIVL, "17825805")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_PixelFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_PixelFormat")
  field(ZRST, "Mono8")
  field(ZRVL, "17301505")
  field(ONST, "Mono10")
  field(ONVL, "17825795")
  field(TWST, "BayerBG8")
  field(TWVL, "17301515")
  field(THST, "BayerBG10")
  field(THVL, "17825807")
  field(FRST, "BayerGB8")
  field(FRVL, "17301514")
  field(FVST, "BayerGB10")
  field(FVVL, "17825806")
  field(SXST, "BayerGR8")
  field(SXVL, "17301512")
  field(SVST, "BayerGR10")
  field(SVVL, "17825804")
  field(EIST, "BayerRG8")
  field(EIVL, "17301513")
  field(NIST, "BayerRG10")
  field(NIVL, "17825805")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_TestImageSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestImageSelector")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "AdimecTestPatter")
  field(ONVL, "65536")
  field(TWST, "UniformVideoLeve")
  field(TWVL, "65538")
  field(THST, "DiagonalPattern")
  field(THVL, "65539")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_TestImageSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestImageSelector")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "AdimecTestPatter")
  field(ONVL, "65536")
  field(TWST, "UniformVideoLeve")
  field(TWVL, "65538")
  field(THST, "DiagonalPattern")
  field(THVL, "65539")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_TestImageVideoLevel_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestImageVideoLevel")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_TestImageVideoLevel") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TestImageVideoLevel")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_DeviceTapGeometry_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceTapGeometry")
  field(ZRST, "Geometry_1X_1Y")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_DeviceTapGeometry") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DeviceTapGeometry")
  field(ZRST, "Geometry_1X_1Y")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_Image1StreamID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Image1StreamID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_Image1StreamID") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Image1StreamID")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_CrosshairOverlay_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CrosshairOverlay")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_CrosshairOverlay") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CrosshairOverlay")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_AcquisitionMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionMode")
  field(ZRST, "Continuous")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_AcquisitionMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionMode")
  field(ZRST, "Continuous")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AcquisitionStart") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionStart")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AcquisitionStop") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionStop")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Remote_AcquisitionFrameRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionFrameRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Remote_AcquisitionFrameRate") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionFrameRate")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Remote_AcquisitionFramePeriod_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionFramePeriod")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Remote_AcquisitionFramePeriod") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionFramePeriod")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_AcquisitionFramePeriodRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionFramePeriodRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AcquisitionFramePeriodRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionFramePeriodRaw")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AcquisitionMaxFrameRate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AcquisitionMaxFrameRate")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_TriggerSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TriggerSource")
  field(ZRST, "Trigger")
  field(ZRVL, "16")
  field(ONST, "IO_Connector")
  field(ONVL, "65536")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_TriggerSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TriggerSource")
  field(ZRST, "Trigger")
  field(ZRVL, "16")
  field(ONST, "IO_Connector")
  field(ONVL, "65536")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_TriggerActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TriggerActivation")
  field(ZRST, "FallingEdge")
  field(ZRVL, "0")
  field(ONST, "RisingEdge")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_TriggerActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_TriggerActivation")
  field(ZRST, "FallingEdge")
  field(ZRVL, "0")
  field(ONST, "RisingEdge")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_ExposureMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ExposureMode")
  field(ZRST, "Timed")
  field(ZRVL, "0")
  field(ONST, "TriggerWidth")
  field(ONVL, "1")
  field(TWST, "SyncControlMode")
  field(TWVL, "256")
  field(THST, "TimedTriggerCont")
  field(THVL, "512")
  field(FRST, "TimedSync")
  field(FRVL, "768")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_ExposureMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ExposureMode")
  field(ZRST, "Timed")
  field(ZRVL, "0")
  field(ONST, "TriggerWidth")
  field(ONVL, "1")
  field(TWST, "SyncControlMode")
  field(TWVL, "256")
  field(THST, "TimedTriggerCont")
  field(THVL, "512")
  field(FRST, "TimedSync")
  field(FRVL, "768")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Remote_ExposureTime_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ExposureTime")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Remote_ExposureTime") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ExposureTime")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_ExposureTimeRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ExposureTimeRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_ExposureTimeRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ExposureTimeRaw")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_InterfaceUtilization_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_InterfaceUtilization")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_InterfaceUtilization") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_InterfaceUtilization")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_FlashStrobeMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeMode")
  field(ZRST, "Disabled")
  field(ZRVL, "0")
  field(ONST, "Automatic")
  field(ONVL, "1")
  field(TWST, "Programmed")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_FlashStrobeMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeMode")
  field(ZRST, "Disabled")
  field(ZRVL, "0")
  field(ONST, "Automatic")
  field(ONVL, "1")
  field(TWST, "Programmed")
  field(TWVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Remote_FlashStrobeDuration_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeDuration")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Remote_FlashStrobeDuration") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeDuration")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_FlashStrobeDurationRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeDurationRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_FlashStrobeDurationRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeDurationRaw")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Remote_FlashStrobeDelay_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeDelay")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Remote_FlashStrobeDelay") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeDelay")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_FlashStrobeDelayRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeDelayRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_FlashStrobeDelayRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeDelayRaw")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_FlashStrobeActiveState_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeActiveState")
  field(ZRST, "NonConducting")
  field(ZRVL, "0")
  field(ONST, "Conducting")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_FlashStrobeActiveState") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FlashStrobeActiveState")
  field(ZRST, "NonConducting")
  field(ZRVL, "0")
  field(ONST, "Conducting")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_HDR_Mode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_HDR_Mode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "MultiSlope2Slope")
  field(ONVL, "32")
  field(TWST, "MultiSlope3Slope")
  field(TWVL, "33")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_HDR_Mode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_HDR_Mode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "MultiSlope2Slope")
  field(ONVL, "32")
  field(TWST, "MultiSlope3Slope")
  field(TWVL, "33")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SecondExposureTimeRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SecondExposureTimeRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SecondExposureTimeRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SecondExposureTimeRaw")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Remote_SecondExposureTime_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SecondExposureTime")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Remote_SecondExposureTime") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SecondExposureTime")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_MultiSlopeNodeSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_MultiSlopeNodeSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_MultiSlopeNodeSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_MultiSlopeNodeSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_MultiSlopeLevel_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_MultiSlopeLevel")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_MultiSlopeLevel") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_MultiSlopeLevel")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_MultiSlopeTime_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_MultiSlopeTime")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_MultiSlopeTime") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_MultiSlopeTime")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_GainSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_GainSelector")
  field(ZRST, "All")
  field(ZRVL, "0")
  field(ONST, "Red")
  field(ONVL, "1")
  field(TWST, "Green")
  field(TWVL, "2")
  field(THST, "Blue")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_GainSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_GainSelector")
  field(ZRST, "All")
  field(ZRVL, "0")
  field(ONST, "Red")
  field(ONVL, "1")
  field(TWST, "Green")
  field(TWVL, "2")
  field(THST, "Blue")
  field(THVL, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Remote_Gain_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Gain")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Remote_Gain") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_Gain")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_GainRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_GainRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_GainRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_GainRaw")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Remote_BlackLevel_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BlackLevel")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Remote_BlackLevel") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BlackLevel")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_BlackLevelRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BlackLevelRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_BlackLevelRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BlackLevelRaw")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_WhiteBalanceWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceWidth")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_WhiteBalanceWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceWidth")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_WhiteBalanceHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_WhiteBalanceHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceHeight")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_WhiteBalanceOffsetX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceOffsetX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_WhiteBalanceOffsetX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceOffsetX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_WhiteBalanceOffsetY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceOffsetY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_WhiteBalanceOffsetY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceOffsetY")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_WhiteBalanceCalibrate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceCalibrate")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_WhiteBalanceStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceStatus")
  field(ZRST, "WhiteBalanceIdle")
  field(ZRVL, "0")
  field(ONST, "WhiteBalanceStar")
  field(ONVL, "1")
  field(TWST, "WhiteBalanceCali")
  field(TWVL, "2")
  field(THST, "WhiteBalance_Sen")
  field(THVL, "3")
  field(FRST, "WhiteBalance_Col")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_WhiteBalanceStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_WhiteBalanceStatus")
  field(ZRST, "WhiteBalanceIdle")
  field(ZRVL, "0")
  field(ONST, "WhiteBalanceStar")
  field(ONVL, "1")
  field(TWST, "WhiteBalanceCali")
  field(TWVL, "2")
  field(THST, "WhiteBalance_Sen")
  field(THVL, "3")
  field(FRST, "WhiteBalance_Col")
  field(FRVL, "4")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_SensorBitDepth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorBitDepth")
  field(ZRST, "Resolution_8_Bit")
  field(ZRVL, "0")
  field(ONST, "Resolution_10_Bi")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_SensorBitDepth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorBitDepth")
  field(ZRST, "Resolution_8_Bit")
  field(ZRVL, "0")
  field(ONST, "Resolution_10_Bi")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_ProgrammableGainAmplifier_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ProgrammableGainAmplifier")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_ProgrammableGainAmplifier") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ProgrammableGainAmplifier")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_UserMode_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_UserMode")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_UserModeUpdate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_UserModeUpdate")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_AdvancedParameterSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AdvancedParameterSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AdvancedParameterSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AdvancedParameterSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_AdvancedParameter_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AdvancedParameter")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AdvancedParameter") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AdvancedParameter")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_AdvancedParameterSave") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_AdvancedParameterSave")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_ConfigurationInfo_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConfigurationInfo")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_ConfigurationInfo") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConfigurationInfo")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_ConfigurationFactoryInfo_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConfigurationFactoryInfo")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_ConfigurationFactoryInfo") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_ConfigurationFactoryInfo")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_SensorRegisterReadWriteMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterReadWriteMode")
  field(ZRST, "DirectRegisterAc")
  field(ZRVL, "0")
  field(ONST, "NonVolatileRegis")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_SensorRegisterReadWriteMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterReadWriteMode")
  field(ZRST, "DirectRegisterAc")
  field(ZRVL, "0")
  field(ONST, "NonVolatileRegis")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SensorRegisterNonVolatileReadSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterNonVolatileReadSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorRegisterNonVolatileReadSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterNonVolatileReadSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SensorRegisterNonVolatileListSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterNonVolatileListSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorRegisterNonVolatileListSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterNonVolatileListSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SensorRegisterAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorRegisterAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SensorRegisterSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorRegisterSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_SensorRegisterData_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterData")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorRegisterData") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterData")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorRegisterRead") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterRead")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorRegisterWrite") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterWrite")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_SensorRegisterRemove") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_SensorRegisterRemove")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_FPGA_RegisterAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FPGA_RegisterAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_FPGA_RegisterAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FPGA_RegisterAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_FPGA_RegisterSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FPGA_RegisterSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_FPGA_RegisterSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FPGA_RegisterSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_FPGA_RegisterData_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FPGA_RegisterData")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_FPGA_RegisterData") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FPGA_RegisterData")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_FPGA_RegisterRead") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FPGA_RegisterRead")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_FPGA_RegisterWrite") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_FPGA_RegisterWrite")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)Remote_CustomerSpecialID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CustomerSpecialID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_LUTEnable_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTEnable")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_LUTEnable") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTEnable")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_LUTIndex_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTIndex")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_LUTIndex") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTIndex")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_LUTValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTValue")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_LUTValue") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTValue")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_LUTStart") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTStart")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_LUTEnd") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTEnd")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_LUTStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTStatus")
  field(ZRST, "LUT_Idle")
  field(ZRVL, "0")
  field(ONST, "LUT_Started")
  field(ONVL, "1")
  field(TWST, "LUT_Restarted")
  field(TWVL, "2")
  field(THST, "LUT_TooMuchEntri")
  field(THVL, "3")
  field(FRST, "LUT_NotEnoughEnt")
  field(FRVL, "4")
  field(FVST, "LUT_Stored")
  field(FVVL, "5")
  field(SXST, "LUT_NotStarted")
  field(SXVL, "6")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_LUTStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_LUTStatus")
  field(ZRST, "LUT_Idle")
  field(ZRVL, "0")
  field(ONST, "LUT_Started")
  field(ONVL, "1")
  field(TWST, "LUT_Restarted")
  field(TWVL, "2")
  field(THST, "LUT_TooMuchEntri")
  field(THVL, "3")
  field(FRST, "LUT_NotEnoughEnt")
  field(FRVL, "4")
  field(FVST, "LUT_Stored")
  field(FVVL, "5")
  field(SXST, "LUT_NotStarted")
  field(SXVL, "6")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_PayloadSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_PayloadSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_PayloadSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_PayloadSize")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_DefectPixelCorrectionEnable_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelCorrectionEnable")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_DefectPixelCorrectionEnable") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelCorrectionEnable")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_DefectPixelTestMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "MarkDefectsWhite")
  field(ONVL, "1")
  field(TWST, "MarkDefectsBlack")
  field(TWVL, "2")
  field(THST, "ShowDefectsAsWhi")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_DefectPixelTestMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "MarkDefectsWhite")
  field(ONVL, "1")
  field(TWST, "MarkDefectsBlack")
  field(TWVL, "2")
  field(THST, "ShowDefectsAsWhi")
  field(THVL, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_DefectPixelTotal_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelTotal")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelTotal") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelTotal")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_DefectPixelSelect_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelSelect")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelSelect") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelSelect")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_DefectPixelReadX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelReadX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelReadX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelReadX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_DefectPixelReadY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelReadY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelReadY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelReadY")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_DefectPixelWriteX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelWriteX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelWriteX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelWriteX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_DefectPixelWriteY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelWriteY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelWriteY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelWriteY")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelAdd") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelAdd")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelRemove") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelRemove")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelClearAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelClearAll")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelSave") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelSave")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelRestore") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelRestore")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelRestoreFactory") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelRestoreFactory")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DefectPixelSaveAsFactoryDefault") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DefectPixelSaveAsFactoryDefault")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_DF_BlackClamp_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_BlackClamp")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_DF_BlackClamp") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_BlackClamp")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_DF_ColumnOffsetCorrection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_ColumnOffsetCorrection")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_DF_ColumnOffsetCorrection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_ColumnOffsetCorrection")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DF_Calibrate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_Calibrate")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_DF_Status_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_Status")
  field(ZRST, "DF_CalibrateOK")
  field(ZRVL, "0")
  field(ONST, "DF_CalibrateErro")
  field(ONVL, "1")
  field(TWST, "DF_SensorNotDark")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_DF_Status") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_Status")
  field(ZRST, "DF_CalibrateOK")
  field(ZRVL, "0")
  field(ONST, "DF_CalibrateErro")
  field(ONVL, "1")
  field(TWST, "DF_SensorNotDark")
  field(TWVL, "2")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DF_RestoreFactory") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_RestoreFactory")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_DF_SaveAsFactoryDefault") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_SaveAsFactoryDefault")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_DF_IsUserCalibration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_IsUserCalibration")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_DF_IsUserCalibration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_DF_IsUserCalibration")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_BF_ColumnGainCorrection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_ColumnGainCorrection")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_BF_ColumnGainCorrection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_ColumnGainCorrection")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_BF_AutoLevelAdjust_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_AutoLevelAdjust")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_BF_AutoLevelAdjust") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_AutoLevelAdjust")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Remote_BF_CalibrationVideoLevel_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_CalibrationVideoLevel")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_BF_CalibrationVideoLevel") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_CalibrationVideoLevel")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_BF_OutputImagesDuringCalibration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_OutputImagesDuringCalibration")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_BF_OutputImagesDuringCalibration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_OutputImagesDuringCalibration")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_BF_Calibrate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_Calibrate")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_BF_Status_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_Status")
  field(ZRST, "BF_CalibrateOK")
  field(ZRVL, "0")
  field(ONST, "BF_UnderExposed")
  field(ONVL, "1")
  field(TWST, "BF_OverExposed")
  field(TWVL, "2")
  field(THST, "BF_UnstableExpos")
  field(THVL, "3")
  field(FRST, "BF_CalibrateErro")
  field(FRVL, "4")
  field(FVST, "BF_WrongExposure")
  field(FVVL, "5")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_BF_Status") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_Status")
  field(ZRST, "BF_CalibrateOK")
  field(ZRVL, "0")
  field(ONST, "BF_UnderExposed")
  field(ONVL, "1")
  field(TWST, "BF_OverExposed")
  field(TWVL, "2")
  field(THST, "BF_UnstableExpos")
  field(THVL, "3")
  field(FRST, "BF_CalibrateErro")
  field(FRVL, "4")
  field(FVST, "BF_WrongExposure")
  field(FVVL, "5")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_BF_RestoreFactory") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_RestoreFactory")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_BF_SaveAsFactoryDefault") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_SaveAsFactoryDefault")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_BF_IsUserCalibration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_IsUserCalibration")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_BF_IsUserCalibration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_BF_IsUserCalibration")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_CFG_FACTORY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CFG_FACTORY")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_CFG_FACTORY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CFG_FACTORY")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_CFG_COLOR_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CFG_COLOR")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_CFG_COLOR") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CFG_COLOR")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Remote_CFG_MONO_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CFG_MONO")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Remote_CFG_MONO") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_CFG_MONO")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Remote_UserSetSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_UserSetSelector")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(ONST, "UserSet1")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Remote_UserSetSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_UserSetSelector")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(ONST, "UserSet1")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_UserSetLoad") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_UserSetLoad")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Remote_UserSetSave") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Remote_UserSetSave")
  field(DISA, "0")
}

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, /home/beams/MENGBRET/test/Euresys_Coaxlink_TLDataStream_6_1_1.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)Stream_StreamID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Stream_StreamType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Stream_StreamType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Stream_PixelFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_PixelFormat")
  field(ZRST, "BayerBG10pmsb")
  field(ZRVL, "834")
  field(ONST, "BayerBG12pmsb")
  field(ONVL, "835")
  field(TWST, "BayerBG14pmsb")
  field(TWVL, "836")
  field(THST, "BayerGB10pmsb")
  field(THVL, "818")
  field(FRST, "BayerGB12pmsb")
  field(FRVL, "819")
  field(FVST, "BayerGB14pmsb")
  field(FVVL, "820")
  field(SXST, "BayerGR10pmsb")
  field(SXVL, "786")
  field(SVST, "BayerGR12pmsb")
  field(SVVL, "787")
  field(EIST, "BayerGR14pmsb")
  field(EIVL, "788")
  field(NIST, "BayerRG10pmsb")
  field(NIVL, "802")
  field(TEST, "BayerRG12pmsb")
  field(TEVL, "803")
  field(ELST, "BayerRG14pmsb")
  field(ELVL, "804")
  field(TVST, "Mono10pmsb")
  field(TVVL, "258")
  field(TTST, "Mono12pmsb")
  field(TTVL, "259")
  field(FTST, "Mono14pmsb")
  field(FTVL, "260")
  field(FFST, "RGB10pmsb")
  field(FFVL, "1026")
  field(ZR1ST, "RGB12pmsb")
  field(ZR1VL, "1027")
  field(ON1ST, "RGB14pmsb")
  field(ON1VL, "1028")
  field(TW1ST, "RGBa10pmsb")
  field(TW1VL, "1282")
  field(TH1ST, "RGBa12pmsb")
  field(TH1VL, "1283")
  field(FR1ST, "RGBa14pmsb")
  field(FR1VL, "1284")
  field(FV1ST, "YCbCr601_10pmsb")
  field(FV1VL, "1842")
  field(SX1ST, "YCbCr601_12pmsb")
  field(SX1VL, "1843")
  field(SV1ST, "YCbCr601_14pmsb")
  field(SV1VL, "1844")
  field(EI1ST, "YCbCr601_16")
  field(EI1VL, "1845")
  field(NI1ST, "YCbCr601_411_10p")
  field(NI1VL, "1810")
  field(TE1ST, "YCbCr601_411_12p")
  field(TE1VL, "1811")
  field(EL1ST, "YCbCr601_411_14p")
  field(EL1VL, "1812")
  field(TV1ST, "YCbCr601_411_16")
  field(TV1VL, "1813")
  field(TT1ST, "YCbCr601_411_8")
  field(TT1VL, "1809")
  field(FT1ST, "YCbCr601_422_10p")
  field(FT1VL, "1826")
  field(FF1ST, "YCbCr601_422_12p")
  field(FF1VL, "1827")
  field(ZR2ST, "YCbCr601_422_14p")
  field(ZR2VL, "1828")
  field(ON2ST, "YCbCr601_422_16")
  field(ON2VL, "1829")
  field(TW2ST, "YCbCr601_8")
  field(TW2VL, "1841")
  field(TH2ST, "YCbCr709_10pmsb")
  field(TH2VL, "2098")
  field(FR2ST, "YCbCr709_12pmsb")
  field(FR2VL, "2099")
  field(FV2ST, "YCbCr709_14pmsb")
  field(FV2VL, "2100")
  field(SX2ST, "YCbCr709_16")
  field(SX2VL, "2101")
  field(SV2ST, "YCbCr709_411_10p")
  field(SV2VL, "2066")
  field(EI2ST, "YCbCr709_411_12p")
  field(EI2VL, "2067")
  field(NI2ST, "YCbCr709_411_14p")
  field(NI2VL, "2068")
  field(TE2ST, "YCbCr709_411_16")
  field(TE2VL, "2069")
  field(EL2ST, "YCbCr709_411_8")
  field(EL2VL, "2065")
  field(TV2ST, "YCbCr709_422_10p")
  field(TV2VL, "2082")
  field(TT2ST, "YCbCr709_422_12p")
  field(TT2VL, "2083")
  field(FT2ST, "YCbCr709_422_14p")
  field(FT2VL, "2084")
  field(FF2ST, "YCbCr709_422_16")
  field(FF2VL, "2085")
  field(ZR3ST, "YCbCr709_8")
  field(ZR3VL, "2097")
  field(ON3ST, "YUV10pmsb")
  field(ON3VL, "1586")
  field(TW3ST, "YUV12pmsb")
  field(TW3VL, "1587")
  field(TH3ST, "YUV14pmsb")
  field(TH3VL, "1588")
  field(FR3ST, "YUV16")
  field(FR3VL, "1589")
  field(FV3ST, "YUV411_10pmsb")
  field(FV3VL, "1554")
  field(SX3ST, "YUV411_12pmsb")
  field(SX3VL, "1555")
  field(SV3ST, "YUV411_14pmsb")
  field(SV3VL, "1556")
  field(EI3ST, "YUV411_16")
  field(EI3VL, "1557")
  field(NI3ST, "YUV411_8")
  field(NI3VL, "1553")
  field(TE3ST, "YUV422_10pmsb")
  field(TE3VL, "1570")
  field(EL3ST, "YUV422_12pmsb")
  field(EL3VL, "1571")
  field(TV3ST, "YUV422_14pmsb")
  field(TV3VL, "1572")
  field(TT3ST, "YUV422_16")
  field(TT3VL, "1573")
  field(FT3ST, "YUV8")
  field(FT3VL, "1585")
  field(FF3ST, "BayerBG10")
  field(FF3VL, "17825807")
  field(ZR4ST, "BayerBG10p")
  field(ZR4VL, "17432658")
  field(ON4ST, "BayerBG10Packed")
  field(ON4VL, "17563689")
  field(TW4ST, "BayerBG12")
  field(TW4VL, "17825811")
  field(TH4ST, "BayerBG12p")
  field(TH4VL, "17563731")
  field(FR4ST, "BayerBG12Packed")
  field(FR4VL, "17563693")
  field(FV4ST, "BayerBG14")
  field(FV4VL, "2165309463")
  field(SX4ST, "BayerBG16")
  field(SX4VL, "17825841")
  field(SV4ST, "BayerBG8")
  field(SV4VL, "17301515")
  field(EI4ST, "BayerGB10")
  field(EI4VL, "17825806")
  field(NI4ST, "BayerGB10p")
  field(NI4VL, "17432660")
  field(TE4ST, "BayerGB10Packed")
  field(TE4VL, "17563688")
  field(EL4ST, "BayerGB12")
  field(EL4VL, "17825810")
  field(TV4ST, "BayerGB12p")
  field(TV4VL, "17563733")
  field(TT4ST, "BayerGB12Packed")
  field(TT4VL, "17563692")
  field(FT4ST, "BayerGB14")
  field(FT4VL, "2165309462")
  field(FF4ST, "BayerGB16")
  field(FF4VL, "17825840")
  field(ZR5ST, "BayerGB8")
  field(ZR5VL, "17301514")
  field(ON5ST, "BayerGR10")
  field(ON5VL, "17825804")
  field(TW5ST, "BayerGR10p")
  field(TW5VL, "17432662")
  field(TH5ST, "BayerGR10Packed")
  field(TH5VL, "17563686")
  field(FR5ST, "BayerGR12")
  field(FR5VL, "17825808")
  field(FV5ST, "BayerGR12p")
  field(FV5VL, "17563735")
  field(SX5ST, "BayerGR12Packed")
  field(SX5VL, "17563690")
  field(SV5ST, "BayerGR14")
  field(SV5VL, "2165309460")
  field(EI5ST, "BayerGR16")
  field(EI5VL, "17825838")
  field(NI5ST, "BayerGR8")
  field(NI5VL, "17301512")
  field(TE5ST, "BayerRG10")
  field(TE5VL, "17825805")
  field(EL5ST, "BayerRG10p")
  field(EL5VL, "17432664")
  field(TV5ST, "BayerRG10Packed")
  field(TV5VL, "17563687")
  field(TT5ST, "BayerRG12")
  field(TT5VL, "17825809")
  field(FT5ST, "BayerRG12p")
  field(FT5VL, "17563737")
  field(FF5ST, "BayerRG12Packed")
  field(FF5VL, "17563691")
  field(ZR6ST, "BayerRG14")
  field(ZR6VL, "2165309461")
  field(ON6ST, "BayerRG16")
  field(ON6VL, "17825839")
  field(TW6ST, "BayerRG8")
  field(TW6VL, "17301513")
  field(TH6ST, "BGR10")
  field(TH6VL, "36700185")
  field(FR6ST, "BGR10p")
  field(FR6VL, "35520584")
  field(FV6ST, "BGR12")
  field(FV6VL, "36700187")
  field(SX6ST, "BGR12p")
  field(SX6VL, "35913801")
  field(SV6ST, "BGR14")
  field(SV6VL, "36700234")
  field(EI6ST, "BGR16")
  field(EI6VL, "36700235")
  field(NI6ST, "BGR565p")
  field(NI6VL, "34603062")
  field(TE6ST, "BGR8")
  field(TE6VL, "35127317")
  field(EL6ST, "BGR8a32")
  field(EL6VL, "2183135255")
  field(TV6ST, "BGRa10")
  field(TV6VL, "37748812")
  field(TT6ST, "BGRa10p")
  field(TT6VL, "36175949")
  field(FT6ST, "BGRa12")
  field(FT6VL, "37748814")
  field(FF6ST, "BGRa12p")
  field(FF6VL, "36700239")
  field(ZR7ST, "BGRa14")
  field(ZR7VL, "37748816")
  field(ON7ST, "BGRa16")
  field(ON7VL, "37748817")
  field(TW7ST, "BGRa8")
  field(TW7VL, "35651607")
  field(TH7ST, "BiColorBGRG10")
  field(TH7VL, "35651753")
  field(FR7ST, "BiColorBGRG10p")
  field(FR7VL, "34865322")
  field(FV7ST, "BiColorBGRG12")
  field(FV7VL, "35651757")
  field(SX7ST, "BiColorBGRG12p")
  field(SX7VL, "35127470")
  field(SV7ST, "BiColorBGRG8")
  field(SV7VL, "34603174")
  field(EI7ST, "BiColorRGBG10")
  field(EI7VL, "35651751")
  field(NI7ST, "BiColorRGBG10p")
  field(NI7VL, "34865320")
  field(TE7ST, "BiColorRGBG12")
  field(TE7VL, "35651755")
  field(EL7ST, "BiColorRGBG12p")
  field(EL7VL, "35127468")
  field(TV7ST, "BiColorRGBG8")
  field(TV7VL, "34603173")
  field(TT7ST, "Confidence1")
  field(TT7VL, "17301700")
  field(FT7ST, "Confidence16")
  field(FT7VL, "17825991")
  field(FF7ST, "Confidence1p")
  field(FF7VL, "16842949")
  field(ZR8ST, "Confidence32f")
  field(ZR8VL, "18874568")
  field(ON8ST, "Confidence8")
  field(ON8VL, "17301702")
  field(TW8ST, "Coord3D_A16")
  field(TW8VL, "17825974")
  field(TH8ST, "Coord3D_A32f")
  field(TH8VL, "18874557")
  field(FR8ST, "Coord3D_A8")
  field(FR8VL, "17301679")
  field(FV8ST, "Coord3D_ABC16")
  field(FV8VL, "36700345")
  field(SX8ST, "Coord3D_ABC16_Pl")
  field(SX8VL, "36700346")
  field(SV8ST, "Coord3D_ABC32f")
  field(SV8VL, "39846080")
  field(EI8ST, "Coord3D_ABC32f_P")
  field(EI8VL, "39846081")
  field(NI8ST, "Coord3D_ABC8")
  field(NI8VL, "35127474")
  field(TE8ST, "Coord3D_ABC8_Pla")
  field(TE8VL, "35127475")
  field(EL8ST, "Coord3D_AC16")
  field(EL8VL, "35651771")
  field(TV8ST, "Coord3D_AC16_Pla")
  field(TV8VL, "35651772")
  field(TT8ST, "Coord3D_AC32f")
  field(TT8VL, "37748930")
  field(FT8ST, "Coord3D_AC32f_Pl")
  field(FT8VL, "37748931")
  field(FF8ST, "Coord3D_AC8")
  field(FF8VL, "34603188")
  field(ZR9ST, "Coord3D_AC8_Plan")
  field(ZR9VL, "34603189")
  field(ON9ST, "Coord3D_B16")
  field(ON9VL, "17825975")
  field(TW9ST, "Coord3D_B32f")
  field(TW9VL, "18874558")
  field(TH9ST, "Coord3D_B8")
  field(TH9VL, "17301680")
  field(FR9ST, "Coord3D_C16")
  field(FR9VL, "17825976")
  field(FV9ST, "Coord3D_C32f")
  field(FV9VL, "18874559")
  field(SX9ST, "Coord3D_C8")
  field(SX9VL, "17301681")
  field(SV9ST, "Mono10")
  field(SV9VL, "17825795")
  field(EI9ST, "Mono10p")
  field(EI9VL, "17432646")
  field(NI9ST, "Mono10Packed")
  field(NI9VL, "17563652")
  field(TE9ST, "Mono12")
  field(TE9VL, "17825797")
  field(EL9ST, "Mono12p")
  field(EL9VL, "17563719")
  field(TV9ST, "Mono12Packed")
  field(TV9VL, "17563654")
  field(TT9ST, "Mono14")
  field(TT9VL, "17825829")
  field(FT9ST, "Mono16")
  field(FT9VL, "17825799")
  field(FF9ST, "Mono1p")
  field(FF9VL, "16842807")
  field(ZR10ST, "Mono2p")
  field(ZR10VL, "16908344")
  field(ON10ST, "Mono4p")
  field(ON10VL, "17039417")
  field(TW10ST, "Mono8")
  field(TW10VL, "17301505")
  field(TH10ST, "Mono8s")
  field(TH10VL, "17301506")
  field(FR10ST, "RGB10")
  field(FR10VL, "36700184")
  field(FV10ST, "RGB10_Planar")
  field(FV10VL, "36700194")
  field(SX10ST, "RGB10p")
  field(SX10VL, "35520604")
  field(SV10ST, "RGB10p32")
  field(SV10VL, "35651613")
  field(EI10ST, "RGB10V1Packed")
  field(EI10VL, "35651612")
  field(NI10ST, "RGB12")
  field(NI10VL, "36700186")
  field(TE10ST, "RGB12_Planar")
  field(TE10VL, "36700195")
  field(EL10ST, "RGB12p")
  field(EL10VL, "35913821")
  field(TV10ST, "RGB12V1Packed")
  field(TV10VL, "35913780")
  field(TT10ST, "RGB14")
  field(TT10VL, "36700254")
  field(FT10ST, "RGB16")
  field(FT10VL, "36700211")
  field(FF10ST, "RGB16_Planar")
  field(FF10VL, "36700196")
  field(ZR11ST, "RGB565p")
  field(ZR11VL, "34603061")
  field(ON11ST, "RGB8")
  field(ON11VL, "35127316")
  field(TW11ST, "RGB8_Planar")
  field(TW11VL, "35127329")
  field(TH11ST, "RGB8a32")
  field(TH11VL, "2183135254")
  field(FR11ST, "RGBa10")
  field(FR11VL, "37748831")
  field(FV11ST, "RGBa10p")
  field(FV11VL, "36175968")
  field(SX11ST, "RGBa12")
  field(SX11VL, "37748833")
  field(SV11ST, "RGBa12p")
  field(SV11VL, "36700258")
  field(EI11ST, "RGBa14")
  field(EI11VL, "37748835")
  field(NI11ST, "RGBa16")
  field(NI11VL, "37748836")
  field(TE11ST, "RGBa8")
  field(TE11VL, "35651606")
  field(EL11ST, "SCF1WBWG10")
  field(EL11VL, "17825896")
  field(TV11ST, "SCF1WBWG10p")
  field(TV11VL, "17432681")
  field(TT11ST, "SCF1WBWG12")
  field(TT11VL, "17825898")
  field(FT11ST, "SCF1WBWG12p")
  field(FT11VL, "17563755")
  field(FF11ST, "SCF1WBWG14")
  field(FF11VL, "17825900")
  field(ZR12ST, "SCF1WBWG16")
  field(ZR12VL, "17825901")
  field(ON12ST, "SCF1WBWG8")
  field(ON12VL, "17301607")
  field(TW12ST, "SCF1WGWB10")
  field(TW12VL, "17825903")
  field(TH12ST, "SCF1WGWB10p")
  field(TH12VL, "17432688")
  field(FR12ST, "SCF1WGWB12")
  field(FR12VL, "17825905")
  field(FV12ST, "SCF1WGWB12p")
  field(FV12VL, "17563762")
  field(SX12ST, "SCF1WGWB14")
  field(SX12VL, "17825907")
  field(SV12ST, "SCF1WGWB16")
  field(SV12VL, "17825908")
  field(EI12ST, "SCF1WGWB8")
  field(EI12VL, "17301614")
  field(NI12ST, "SCF1WGWR10")
  field(NI12VL, "17825910")
  field(TE12ST, "SCF1WGWR10p")
  field(TE12VL, "17432695")
  field(EL12ST, "SCF1WGWR12")
  field(EL12VL, "17825912")
  field(TV12ST, "SCF1WGWR12p")
  field(TV12VL, "17563769")
  field(TT12ST, "SCF1WGWR14")
  field(TT12VL, "17825914")
  field(FT12ST, "SCF1WGWR16")
  field(FT12VL, "17825915")
  field(FF12ST, "SCF1WGWR8")
  field(FF12VL, "17301621")
  field(ZR13ST, "SCF1WRWG10")
  field(ZR13VL, "17825917")
  field(ON13ST, "SCF1WRWG10p")
  field(ON13VL, "17432702")
  field(TW13ST, "SCF1WRWG12")
  field(TW13VL, "17825919")
  field(TH13ST, "SCF1WRWG12p")
  field(TH13VL, "17563776")
  field(FR13ST, "SCF1WRWG14")
  field(FR13VL, "17825921")
  field(FV13ST, "SCF1WRWG16")
  field(FV13VL, "17825922")
  field(SX13ST, "SCF1WRWG8")
  field(SX13VL, "17301628")
  field(SV13ST, "YCbCr10_CbYCr")
  field(SV13VL, "36700291")
  field(EI13ST, "YCbCr10p_CbYCr")
  field(EI13VL, "35520644")
  field(NI13ST, "YCbCr12_CbYCr")
  field(NI13VL, "36700293")
  field(TE13ST, "YCbCr12p_CbYCr")
  field(TE13VL, "35913862")
  field(EL13ST, "YCbCr411_8")
  field(EL13VL, "34340954")
  field(TV13ST, "YCbCr411_8_CbYYC")
  field(TV13VL, "34340924")
  field(TT13ST, "YCbCr422_10")
  field(TT13VL, "35651685")
  field(FT13ST, "YCbCr422_10_CbYC")
  field(FT13VL, "35651737")
  field(FF13ST, "YCbCr422_10p")
  field(FF13VL, "34865287")
  field(ZR14ST, "YCbCr422_10p_CbY")
  field(ZR14VL, "34865306")
  field(ON14ST, "YCbCr422_12")
  field(ON14VL, "35651686")
  field(TW14ST, "YCbCr422_12_CbYC")
  field(TW14VL, "35651739")
  field(TH14ST, "YCbCr422_12p")
  field(TH14VL, "35127432")
  field(FR14ST, "YCbCr422_12p_CbY")
  field(FR14VL, "35127452")
  field(FV14ST, "YCbCr422_8")
  field(FV14VL, "34603067")
  field(SX14ST, "YCbCr422_8_CbYCr")
  field(SX14VL, "34603075")
  field(SV14ST, "YCbCr601_10_CbYC")
  field(SV14VL, "36700297")
  field(EI14ST, "YCbCr601_10p_CbY")
  field(EI14VL, "35520650")
  field(NI14ST, "YCbCr601_12_CbYC")
  field(NI14VL, "36700299")
  field(TE14ST, "YCbCr601_12p_CbY")
  field(TE14VL, "35913868")
  field(EL14ST, "YCbCr601_411_8_C")
  field(EL14VL, "34340927")
  field(TV14ST, "YCbCr601_422_10")
  field(TV14VL, "35651725")
  field(TT14ST, "YCbCr601_422_10_")
  field(TT14VL, "35651741")
  field(FT14ST, "YCbCr601_422_10p")
  field(FT14VL, "34865294")
  field(FF14ST, "YCbCr601_422_10p")
  field(FF14VL, "34865310")
  field(ZR15ST, "YCbCr601_422_12")
  field(ZR15VL, "35651727")
  field(ON15ST, "YCbCr601_422_12_")
  field(ON15VL, "35651743")
  field(TW15ST, "YCbCr601_422_12p")
  field(TW15VL, "35127440")
  field(TH15ST, "YCbCr601_422_12p")
  field(TH15VL, "35127456")
  field(FR15ST, "YCbCr601_422_8")
  field(FR15VL, "34603070")
  field(FV15ST, "YCbCr601_422_8_C")
  field(FV15VL, "34603076")
  field(SX15ST, "YCbCr601_8_CbYCr")
  field(SX15VL, "35127357")
  field(SV15ST, "YCbCr709_10_CbYC")
  field(SV15VL, "36700305")
  field(EI15ST, "YCbCr709_10p_CbY")
  field(EI15VL, "35520658")
  field(NI15ST, "YCbCr709_12_CbYC")
  field(NI15VL, "36700307")
  field(TE15ST, "YCbCr709_12p_CbY")
  field(TE15VL, "35913876")
  field(EL15ST, "YCbCr709_411_8_C")
  field(EL15VL, "34340930")
  field(TV15ST, "YCbCr709_422_10")
  field(TV15VL, "35651733")
  field(TT15ST, "YCbCr709_422_10_")
  field(TT15VL, "35651745")
  field(FT15ST, "YCbCr709_422_10p")
  field(FT15VL, "34865302")
  field(FF15ST, "YCbCr709_422_10p")
  field(FF15VL, "34865314")
  field(ZR16ST, "YCbCr709_422_12")
  field(ZR16VL, "35651735")
  field(ON16ST, "YCbCr709_422_12_")
  field(ON16VL, "35651747")
  field(TW16ST, "YCbCr709_422_12p")
  field(TW16VL, "35127448")
  field(TH16ST, "YCbCr709_422_12p")
  field(TH16VL, "35127460")
  field(FR16ST, "YCbCr709_422_8")
  field(FR16VL, "34603073")
  field(FV16ST, "YCbCr709_422_8_C")
  field(FV16VL, "34603077")
  field(SX16ST, "YCbCr709_8_CbYCr")
  field(SX16VL, "35127360")
  field(SV16ST, "YCbCr8")
  field(SV16VL, "35127387")
  field(EI16ST, "YCbCr8_CbYCr")
  field(EI16VL, "35127354")
  field(NI16ST, "YUV411_8_UYYVYY")
  field(NI16VL, "34340894")
  field(TE16ST, "YUV422_8")
  field(TE16VL, "34603058")
  field(EL16ST, "YUV422_8_UYVY")
  field(EL16VL, "34603039")
  field(TV16ST, "YUV8_UYV")
  field(TV16VL, "35127328")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Stream_PixelFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_PixelFormat")
  field(ZRST, "BayerBG10pmsb")
  field(ZRVL, "834")
  field(ONST, "BayerBG12pmsb")
  field(ONVL, "835")
  field(TWST, "BayerBG14pmsb")
  field(TWVL, "836")
  field(THST, "BayerGB10pmsb")
  field(THVL, "818")
  field(FRST, "BayerGB12pmsb")
  field(FRVL, "819")
  field(FVST, "BayerGB14pmsb")
  field(FVVL, "820")
  field(SXST, "BayerGR10pmsb")
  field(SXVL, "786")
  field(SVST, "BayerGR12pmsb")
  field(SVVL, "787")
  field(EIST, "BayerGR14pmsb")
  field(EIVL, "788")
  field(NIST, "BayerRG10pmsb")
  field(NIVL, "802")
  field(TEST, "BayerRG12pmsb")
  field(TEVL, "803")
  field(ELST, "BayerRG14pmsb")
  field(ELVL, "804")
  field(TVST, "Mono10pmsb")
  field(TVVL, "258")
  field(TTST, "Mono12pmsb")
  field(TTVL, "259")
  field(FTST, "Mono14pmsb")
  field(FTVL, "260")
  field(FFST, "RGB10pmsb")
  field(FFVL, "1026")
  field(ZR1ST, "RGB12pmsb")
  field(ZR1VL, "1027")
  field(ON1ST, "RGB14pmsb")
  field(ON1VL, "1028")
  field(TW1ST, "RGBa10pmsb")
  field(TW1VL, "1282")
  field(TH1ST, "RGBa12pmsb")
  field(TH1VL, "1283")
  field(FR1ST, "RGBa14pmsb")
  field(FR1VL, "1284")
  field(FV1ST, "YCbCr601_10pmsb")
  field(FV1VL, "1842")
  field(SX1ST, "YCbCr601_12pmsb")
  field(SX1VL, "1843")
  field(SV1ST, "YCbCr601_14pmsb")
  field(SV1VL, "1844")
  field(EI1ST, "YCbCr601_16")
  field(EI1VL, "1845")
  field(NI1ST, "YCbCr601_411_10p")
  field(NI1VL, "1810")
  field(TE1ST, "YCbCr601_411_12p")
  field(TE1VL, "1811")
  field(EL1ST, "YCbCr601_411_14p")
  field(EL1VL, "1812")
  field(TV1ST, "YCbCr601_411_16")
  field(TV1VL, "1813")
  field(TT1ST, "YCbCr601_411_8")
  field(TT1VL, "1809")
  field(FT1ST, "YCbCr601_422_10p")
  field(FT1VL, "1826")
  field(FF1ST, "YCbCr601_422_12p")
  field(FF1VL, "1827")
  field(ZR2ST, "YCbCr601_422_14p")
  field(ZR2VL, "1828")
  field(ON2ST, "YCbCr601_422_16")
  field(ON2VL, "1829")
  field(TW2ST, "YCbCr601_8")
  field(TW2VL, "1841")
  field(TH2ST, "YCbCr709_10pmsb")
  field(TH2VL, "2098")
  field(FR2ST, "YCbCr709_12pmsb")
  field(FR2VL, "2099")
  field(FV2ST, "YCbCr709_14pmsb")
  field(FV2VL, "2100")
  field(SX2ST, "YCbCr709_16")
  field(SX2VL, "2101")
  field(SV2ST, "YCbCr709_411_10p")
  field(SV2VL, "2066")
  field(EI2ST, "YCbCr709_411_12p")
  field(EI2VL, "2067")
  field(NI2ST, "YCbCr709_411_14p")
  field(NI2VL, "2068")
  field(TE2ST, "YCbCr709_411_16")
  field(TE2VL, "2069")
  field(EL2ST, "YCbCr709_411_8")
  field(EL2VL, "2065")
  field(TV2ST, "YCbCr709_422_10p")
  field(TV2VL, "2082")
  field(TT2ST, "YCbCr709_422_12p")
  field(TT2VL, "2083")
  field(FT2ST, "YCbCr709_422_14p")
  field(FT2VL, "2084")
  field(FF2ST, "YCbCr709_422_16")
  field(FF2VL, "2085")
  field(ZR3ST, "YCbCr709_8")
  field(ZR3VL, "2097")
  field(ON3ST, "YUV10pmsb")
  field(ON3VL, "1586")
  field(TW3ST, "YUV12pmsb")
  field(TW3VL, "1587")
  field(TH3ST, "YUV14pmsb")
  field(TH3VL, "1588")
  field(FR3ST, "YUV16")
  field(FR3VL, "1589")
  field(FV3ST, "YUV411_10pmsb")
  field(FV3VL, "1554")
  field(SX3ST, "YUV411_12pmsb")
  field(SX3VL, "1555")
  field(SV3ST, "YUV411_14pmsb")
  field(SV3VL, "1556")
  field(EI3ST, "YUV411_16")
  field(EI3VL, "1557")
  field(NI3ST, "YUV411_8")
  field(NI3VL, "1553")
  field(TE3ST, "YUV422_10pmsb")
  field(TE3VL, "1570")
  field(EL3ST, "YUV422_12pmsb")
  field(EL3VL, "1571")
  field(TV3ST, "YUV422_14pmsb")
  field(TV3VL, "1572")
  field(TT3ST, "YUV422_16")
  field(TT3VL, "1573")
  field(FT3ST, "YUV8")
  field(FT3VL, "1585")
  field(FF3ST, "BayerBG10")
  field(FF3VL, "17825807")
  field(ZR4ST, "BayerBG10p")
  field(ZR4VL, "17432658")
  field(ON4ST, "BayerBG10Packed")
  field(ON4VL, "17563689")
  field(TW4ST, "BayerBG12")
  field(TW4VL, "17825811")
  field(TH4ST, "BayerBG12p")
  field(TH4VL, "17563731")
  field(FR4ST, "BayerBG12Packed")
  field(FR4VL, "17563693")
  field(FV4ST, "BayerBG14")
  field(FV4VL, "2165309463")
  field(SX4ST, "BayerBG16")
  field(SX4VL, "17825841")
  field(SV4ST, "BayerBG8")
  field(SV4VL, "17301515")
  field(EI4ST, "BayerGB10")
  field(EI4VL, "17825806")
  field(NI4ST, "BayerGB10p")
  field(NI4VL, "17432660")
  field(TE4ST, "BayerGB10Packed")
  field(TE4VL, "17563688")
  field(EL4ST, "BayerGB12")
  field(EL4VL, "17825810")
  field(TV4ST, "BayerGB12p")
  field(TV4VL, "17563733")
  field(TT4ST, "BayerGB12Packed")
  field(TT4VL, "17563692")
  field(FT4ST, "BayerGB14")
  field(FT4VL, "2165309462")
  field(FF4ST, "BayerGB16")
  field(FF4VL, "17825840")
  field(ZR5ST, "BayerGB8")
  field(ZR5VL, "17301514")
  field(ON5ST, "BayerGR10")
  field(ON5VL, "17825804")
  field(TW5ST, "BayerGR10p")
  field(TW5VL, "17432662")
  field(TH5ST, "BayerGR10Packed")
  field(TH5VL, "17563686")
  field(FR5ST, "BayerGR12")
  field(FR5VL, "17825808")
  field(FV5ST, "BayerGR12p")
  field(FV5VL, "17563735")
  field(SX5ST, "BayerGR12Packed")
  field(SX5VL, "17563690")
  field(SV5ST, "BayerGR14")
  field(SV5VL, "2165309460")
  field(EI5ST, "BayerGR16")
  field(EI5VL, "17825838")
  field(NI5ST, "BayerGR8")
  field(NI5VL, "17301512")
  field(TE5ST, "BayerRG10")
  field(TE5VL, "17825805")
  field(EL5ST, "BayerRG10p")
  field(EL5VL, "17432664")
  field(TV5ST, "BayerRG10Packed")
  field(TV5VL, "17563687")
  field(TT5ST, "BayerRG12")
  field(TT5VL, "17825809")
  field(FT5ST, "BayerRG12p")
  field(FT5VL, "17563737")
  field(FF5ST, "BayerRG12Packed")
  field(FF5VL, "17563691")
  field(ZR6ST, "BayerRG14")
  field(ZR6VL, "2165309461")
  field(ON6ST, "BayerRG16")
  field(ON6VL, "17825839")
  field(TW6ST, "BayerRG8")
  field(TW6VL, "17301513")
  field(TH6ST, "BGR10")
  field(TH6VL, "36700185")
  field(FR6ST, "BGR10p")
  field(FR6VL, "35520584")
  field(FV6ST, "BGR12")
  field(FV6VL, "36700187")
  field(SX6ST, "BGR12p")
  field(SX6VL, "35913801")
  field(SV6ST, "BGR14")
  field(SV6VL, "36700234")
  field(EI6ST, "BGR16")
  field(EI6VL, "36700235")
  field(NI6ST, "BGR565p")
  field(NI6VL, "34603062")
  field(TE6ST, "BGR8")
  field(TE6VL, "35127317")
  field(EL6ST, "BGR8a32")
  field(EL6VL, "2183135255")
  field(TV6ST, "BGRa10")
  field(TV6VL, "37748812")
  field(TT6ST, "BGRa10p")
  field(TT6VL, "36175949")
  field(FT6ST, "BGRa12")
  field(FT6VL, "37748814")
  field(FF6ST, "BGRa12p")
  field(FF6VL, "36700239")
  field(ZR7ST, "BGRa14")
  field(ZR7VL, "37748816")
  field(ON7ST, "BGRa16")
  field(ON7VL, "37748817")
  field(TW7ST, "BGRa8")
  field(TW7VL, "35651607")
  field(TH7ST, "BiColorBGRG10")
  field(TH7VL, "35651753")
  field(FR7ST, "BiColorBGRG10p")
  field(FR7VL, "34865322")
  field(FV7ST, "BiColorBGRG12")
  field(FV7VL, "35651757")
  field(SX7ST, "BiColorBGRG12p")
  field(SX7VL, "35127470")
  field(SV7ST, "BiColorBGRG8")
  field(SV7VL, "34603174")
  field(EI7ST, "BiColorRGBG10")
  field(EI7VL, "35651751")
  field(NI7ST, "BiColorRGBG10p")
  field(NI7VL, "34865320")
  field(TE7ST, "BiColorRGBG12")
  field(TE7VL, "35651755")
  field(EL7ST, "BiColorRGBG12p")
  field(EL7VL, "35127468")
  field(TV7ST, "BiColorRGBG8")
  field(TV7VL, "34603173")
  field(TT7ST, "Confidence1")
  field(TT7VL, "17301700")
  field(FT7ST, "Confidence16")
  field(FT7VL, "17825991")
  field(FF7ST, "Confidence1p")
  field(FF7VL, "16842949")
  field(ZR8ST, "Confidence32f")
  field(ZR8VL, "18874568")
  field(ON8ST, "Confidence8")
  field(ON8VL, "17301702")
  field(TW8ST, "Coord3D_A16")
  field(TW8VL, "17825974")
  field(TH8ST, "Coord3D_A32f")
  field(TH8VL, "18874557")
  field(FR8ST, "Coord3D_A8")
  field(FR8VL, "17301679")
  field(FV8ST, "Coord3D_ABC16")
  field(FV8VL, "36700345")
  field(SX8ST, "Coord3D_ABC16_Pl")
  field(SX8VL, "36700346")
  field(SV8ST, "Coord3D_ABC32f")
  field(SV8VL, "39846080")
  field(EI8ST, "Coord3D_ABC32f_P")
  field(EI8VL, "39846081")
  field(NI8ST, "Coord3D_ABC8")
  field(NI8VL, "35127474")
  field(TE8ST, "Coord3D_ABC8_Pla")
  field(TE8VL, "35127475")
  field(EL8ST, "Coord3D_AC16")
  field(EL8VL, "35651771")
  field(TV8ST, "Coord3D_AC16_Pla")
  field(TV8VL, "35651772")
  field(TT8ST, "Coord3D_AC32f")
  field(TT8VL, "37748930")
  field(FT8ST, "Coord3D_AC32f_Pl")
  field(FT8VL, "37748931")
  field(FF8ST, "Coord3D_AC8")
  field(FF8VL, "34603188")
  field(ZR9ST, "Coord3D_AC8_Plan")
  field(ZR9VL, "34603189")
  field(ON9ST, "Coord3D_B16")
  field(ON9VL, "17825975")
  field(TW9ST, "Coord3D_B32f")
  field(TW9VL, "18874558")
  field(TH9ST, "Coord3D_B8")
  field(TH9VL, "17301680")
  field(FR9ST, "Coord3D_C16")
  field(FR9VL, "17825976")
  field(FV9ST, "Coord3D_C32f")
  field(FV9VL, "18874559")
  field(SX9ST, "Coord3D_C8")
  field(SX9VL, "17301681")
  field(SV9ST, "Mono10")
  field(SV9VL, "17825795")
  field(EI9ST, "Mono10p")
  field(EI9VL, "17432646")
  field(NI9ST, "Mono10Packed")
  field(NI9VL, "17563652")
  field(TE9ST, "Mono12")
  field(TE9VL, "17825797")
  field(EL9ST, "Mono12p")
  field(EL9VL, "17563719")
  field(TV9ST, "Mono12Packed")
  field(TV9VL, "17563654")
  field(TT9ST, "Mono14")
  field(TT9VL, "17825829")
  field(FT9ST, "Mono16")
  field(FT9VL, "17825799")
  field(FF9ST, "Mono1p")
  field(FF9VL, "16842807")
  field(ZR10ST, "Mono2p")
  field(ZR10VL, "16908344")
  field(ON10ST, "Mono4p")
  field(ON10VL, "17039417")
  field(TW10ST, "Mono8")
  field(TW10VL, "17301505")
  field(TH10ST, "Mono8s")
  field(TH10VL, "17301506")
  field(FR10ST, "RGB10")
  field(FR10VL, "36700184")
  field(FV10ST, "RGB10_Planar")
  field(FV10VL, "36700194")
  field(SX10ST, "RGB10p")
  field(SX10VL, "35520604")
  field(SV10ST, "RGB10p32")
  field(SV10VL, "35651613")
  field(EI10ST, "RGB10V1Packed")
  field(EI10VL, "35651612")
  field(NI10ST, "RGB12")
  field(NI10VL, "36700186")
  field(TE10ST, "RGB12_Planar")
  field(TE10VL, "36700195")
  field(EL10ST, "RGB12p")
  field(EL10VL, "35913821")
  field(TV10ST, "RGB12V1Packed")
  field(TV10VL, "35913780")
  field(TT10ST, "RGB14")
  field(TT10VL, "36700254")
  field(FT10ST, "RGB16")
  field(FT10VL, "36700211")
  field(FF10ST, "RGB16_Planar")
  field(FF10VL, "36700196")
  field(ZR11ST, "RGB565p")
  field(ZR11VL, "34603061")
  field(ON11ST, "RGB8")
  field(ON11VL, "35127316")
  field(TW11ST, "RGB8_Planar")
  field(TW11VL, "35127329")
  field(TH11ST, "RGB8a32")
  field(TH11VL, "2183135254")
  field(FR11ST, "RGBa10")
  field(FR11VL, "37748831")
  field(FV11ST, "RGBa10p")
  field(FV11VL, "36175968")
  field(SX11ST, "RGBa12")
  field(SX11VL, "37748833")
  field(SV11ST, "RGBa12p")
  field(SV11VL, "36700258")
  field(EI11ST, "RGBa14")
  field(EI11VL, "37748835")
  field(NI11ST, "RGBa16")
  field(NI11VL, "37748836")
  field(TE11ST, "RGBa8")
  field(TE11VL, "35651606")
  field(EL11ST, "SCF1WBWG10")
  field(EL11VL, "17825896")
  field(TV11ST, "SCF1WBWG10p")
  field(TV11VL, "17432681")
  field(TT11ST, "SCF1WBWG12")
  field(TT11VL, "17825898")
  field(FT11ST, "SCF1WBWG12p")
  field(FT11VL, "17563755")
  field(FF11ST, "SCF1WBWG14")
  field(FF11VL, "17825900")
  field(ZR12ST, "SCF1WBWG16")
  field(ZR12VL, "17825901")
  field(ON12ST, "SCF1WBWG8")
  field(ON12VL, "17301607")
  field(TW12ST, "SCF1WGWB10")
  field(TW12VL, "17825903")
  field(TH12ST, "SCF1WGWB10p")
  field(TH12VL, "17432688")
  field(FR12ST, "SCF1WGWB12")
  field(FR12VL, "17825905")
  field(FV12ST, "SCF1WGWB12p")
  field(FV12VL, "17563762")
  field(SX12ST, "SCF1WGWB14")
  field(SX12VL, "17825907")
  field(SV12ST, "SCF1WGWB16")
  field(SV12VL, "17825908")
  field(EI12ST, "SCF1WGWB8")
  field(EI12VL, "17301614")
  field(NI12ST, "SCF1WGWR10")
  field(NI12VL, "17825910")
  field(TE12ST, "SCF1WGWR10p")
  field(TE12VL, "17432695")
  field(EL12ST, "SCF1WGWR12")
  field(EL12VL, "17825912")
  field(TV12ST, "SCF1WGWR12p")
  field(TV12VL, "17563769")
  field(TT12ST, "SCF1WGWR14")
  field(TT12VL, "17825914")
  field(FT12ST, "SCF1WGWR16")
  field(FT12VL, "17825915")
  field(FF12ST, "SCF1WGWR8")
  field(FF12VL, "17301621")
  field(ZR13ST, "SCF1WRWG10")
  field(ZR13VL, "17825917")
  field(ON13ST, "SCF1WRWG10p")
  field(ON13VL, "17432702")
  field(TW13ST, "SCF1WRWG12")
  field(TW13VL, "17825919")
  field(TH13ST, "SCF1WRWG12p")
  field(TH13VL, "17563776")
  field(FR13ST, "SCF1WRWG14")
  field(FR13VL, "17825921")
  field(FV13ST, "SCF1WRWG16")
  field(FV13VL, "17825922")
  field(SX13ST, "SCF1WRWG8")
  field(SX13VL, "17301628")
  field(SV13ST, "YCbCr10_CbYCr")
  field(SV13VL, "36700291")
  field(EI13ST, "YCbCr10p_CbYCr")
  field(EI13VL, "35520644")
  field(NI13ST, "YCbCr12_CbYCr")
  field(NI13VL, "36700293")
  field(TE13ST, "YCbCr12p_CbYCr")
  field(TE13VL, "35913862")
  field(EL13ST, "YCbCr411_8")
  field(EL13VL, "34340954")
  field(TV13ST, "YCbCr411_8_CbYYC")
  field(TV13VL, "34340924")
  field(TT13ST, "YCbCr422_10")
  field(TT13VL, "35651685")
  field(FT13ST, "YCbCr422_10_CbYC")
  field(FT13VL, "35651737")
  field(FF13ST, "YCbCr422_10p")
  field(FF13VL, "34865287")
  field(ZR14ST, "YCbCr422_10p_CbY")
  field(ZR14VL, "34865306")
  field(ON14ST, "YCbCr422_12")
  field(ON14VL, "35651686")
  field(TW14ST, "YCbCr422_12_CbYC")
  field(TW14VL, "35651739")
  field(TH14ST, "YCbCr422_12p")
  field(TH14VL, "35127432")
  field(FR14ST, "YCbCr422_12p_CbY")
  field(FR14VL, "35127452")
  field(FV14ST, "YCbCr422_8")
  field(FV14VL, "34603067")
  field(SX14ST, "YCbCr422_8_CbYCr")
  field(SX14VL, "34603075")
  field(SV14ST, "YCbCr601_10_CbYC")
  field(SV14VL, "36700297")
  field(EI14ST, "YCbCr601_10p_CbY")
  field(EI14VL, "35520650")
  field(NI14ST, "YCbCr601_12_CbYC")
  field(NI14VL, "36700299")
  field(TE14ST, "YCbCr601_12p_CbY")
  field(TE14VL, "35913868")
  field(EL14ST, "YCbCr601_411_8_C")
  field(EL14VL, "34340927")
  field(TV14ST, "YCbCr601_422_10")
  field(TV14VL, "35651725")
  field(TT14ST, "YCbCr601_422_10_")
  field(TT14VL, "35651741")
  field(FT14ST, "YCbCr601_422_10p")
  field(FT14VL, "34865294")
  field(FF14ST, "YCbCr601_422_10p")
  field(FF14VL, "34865310")
  field(ZR15ST, "YCbCr601_422_12")
  field(ZR15VL, "35651727")
  field(ON15ST, "YCbCr601_422_12_")
  field(ON15VL, "35651743")
  field(TW15ST, "YCbCr601_422_12p")
  field(TW15VL, "35127440")
  field(TH15ST, "YCbCr601_422_12p")
  field(TH15VL, "35127456")
  field(FR15ST, "YCbCr601_422_8")
  field(FR15VL, "34603070")
  field(FV15ST, "YCbCr601_422_8_C")
  field(FV15VL, "34603076")
  field(SX15ST, "YCbCr601_8_CbYCr")
  field(SX15VL, "35127357")
  field(SV15ST, "YCbCr709_10_CbYC")
  field(SV15VL, "36700305")
  field(EI15ST, "YCbCr709_10p_CbY")
  field(EI15VL, "35520658")
  field(NI15ST, "YCbCr709_12_CbYC")
  field(NI15VL, "36700307")
  field(TE15ST, "YCbCr709_12p_CbY")
  field(TE15VL, "35913876")
  field(EL15ST, "YCbCr709_411_8_C")
  field(EL15VL, "34340930")
  field(TV15ST, "YCbCr709_422_10")
  field(TV15VL, "35651733")
  field(TT15ST, "YCbCr709_422_10_")
  field(TT15VL, "35651745")
  field(FT15ST, "YCbCr709_422_10p")
  field(FT15VL, "34865302")
  field(FF15ST, "YCbCr709_422_10p")
  field(FF15VL, "34865314")
  field(ZR16ST, "YCbCr709_422_12")
  field(ZR16VL, "35651735")
  field(ON16ST, "YCbCr709_422_12_")
  field(ON16VL, "35651747")
  field(TW16ST, "YCbCr709_422_12p")
  field(TW16VL, "35127448")
  field(TH16ST, "YCbCr709_422_12p")
  field(TH16VL, "35127460")
  field(FR16ST, "YCbCr709_422_8")
  field(FR16VL, "34603073")
  field(FV16ST, "YCbCr709_422_8_C")
  field(FV16VL, "34603077")
  field(SX16ST, "YCbCr709_8_CbYCr")
  field(SX16VL, "35127360")
  field(SV16ST, "YCbCr8")
  field(SV16VL, "35127387")
  field(EI16ST, "YCbCr8_CbYCr")
  field(EI16VL, "35127354")
  field(NI16ST, "YUV411_8_UYYVYY")
  field(NI16VL, "34340894")
  field(TE16ST, "YUV422_8")
  field(TE16VL, "34603058")
  field(EL16ST, "YUV422_8_UYVY")
  field(EL16VL, "34603039")
  field(TV16ST, "YUV8_UYV")
  field(TV16VL, "35127328")
  field(DISA, "0")
}

*/

record(mbbi, "$(P)$(R)Stream_PixelFormatNamespace_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_PixelFormatNamespace")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "GEV")
  field(ONVL, "1")
  field(TWST, "IIDC")
  field(TWVL, "2")
  field(THST, "PFNC_16BIT")
  field(THVL, "3")
  field(FRST, "PFNC_32BIT")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Stream_PixelFormatNamespace") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_PixelFormatNamespace")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "GEV")
  field(ONVL, "1")
  field(TWST, "IIDC")
  field(TWVL, "2")
  field(THST, "PFNC_16BIT")
  field(THVL, "3")
  field(FRST, "PFNC_32BIT")
  field(FRVL, "4")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Stream_PixelSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_PixelSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Stream_Width_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_Width")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_Width") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_Width")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Stream_Height_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_Height")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_Height") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_Height")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Stream_UnpackingMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_UnpackingMode")
  field(ZRST, "Lsb")
  field(ZRVL, "0")
  field(ONST, "Msb")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Stream_UnpackingMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_UnpackingMode")
  field(ZRST, "Lsb")
  field(ZRVL, "0")
  field(ONST, "Msb")
  field(ONVL, "1")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Stream_RedBlueSwap_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_RedBlueSwap")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Stream_RedBlueSwap") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_RedBlueSwap")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Stream_PayloadSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_PayloadSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Stream_StreamAnnouncedBufferCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamAnnouncedBufferCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_StreamAnnouncedBufferCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamAnnouncedBufferCount")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Stream_StreamBufferHandlingMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamBufferHandlingMode")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Stream_StreamBufferHandlingMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamBufferHandlingMode")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Stream_StreamAnnounceBufferMinimum_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamAnnounceBufferMinimum")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_StreamAnnounceBufferMinimum") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamAnnounceBufferMinimum")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Stream_StreamAcquisitionModeSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamAcquisitionModeSelector")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Stream_StreamAcquisitionModeSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamAcquisitionModeSelector")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Stream_StartOfScanTriggerSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StartOfScanTriggerSource")
  field(ZRST, "Immediate")
  field(ZRVL, "253")
  field(ONST, "StartScan")
  field(ONVL, "0")
  field(TWST, "LIN1")
  field(TWVL, "1")
  field(THST, "LIN2")
  field(THVL, "2")
  field(FRST, "LIN3")
  field(FRVL, "3")
  field(FVST, "LIN4")
  field(FVVL, "4")
  field(SXST, "LIN5")
  field(SXVL, "5")
  field(SVST, "LIN6")
  field(SVVL, "6")
  field(EIST, "LIN7")
  field(EIVL, "7")
  field(NIST, "LIN8")
  field(NIVL, "8")
  field(TEST, "QDC1")
  field(TEVL, "9")
  field(ELST, "QDC2")
  field(ELVL, "10")
  field(TVST, "MDV1")
  field(TVVL, "11")
  field(TTST, "MDV2")
  field(TTVL, "12")
  field(FTST, "DIV1")
  field(FTVL, "13")
  field(FFST, "DIV2")
  field(FFVL, "14")
  field(ZR1ST, "DEL1_1")
  field(ZR1VL, "15")
  field(ON1ST, "DEL1_2")
  field(ON1VL, "16")
  field(TW1ST, "DEL2_1")
  field(TW1VL, "17")
  field(TH1ST, "DEL2_2")
  field(TH1VL, "18")
  field(FR1ST, "EIN1")
  field(FR1VL, "19")
  field(FV1ST, "EIN2")
  field(FV1VL, "20")
  field(SX1ST, "UserEvent1")
  field(SX1VL, "21")
  field(SV1ST, "UserEvent2")
  field(SV1VL, "22")
  field(EI1ST, "UserEvent3")
  field(EI1VL, "23")
  field(NI1ST, "UserEvent4")
  field(NI1VL, "24")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Stream_StartOfScanTriggerSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StartOfScanTriggerSource")
  field(ZRST, "Immediate")
  field(ZRVL, "253")
  field(ONST, "StartScan")
  field(ONVL, "0")
  field(TWST, "LIN1")
  field(TWVL, "1")
  field(THST, "LIN2")
  field(THVL, "2")
  field(FRST, "LIN3")
  field(FRVL, "3")
  field(FVST, "LIN4")
  field(FVVL, "4")
  field(SXST, "LIN5")
  field(SXVL, "5")
  field(SVST, "LIN6")
  field(SVVL, "6")
  field(EIST, "LIN7")
  field(EIVL, "7")
  field(NIST, "LIN8")
  field(NIVL, "8")
  field(TEST, "QDC1")
  field(TEVL, "9")
  field(ELST, "QDC2")
  field(ELVL, "10")
  field(TVST, "MDV1")
  field(TVVL, "11")
  field(TTST, "MDV2")
  field(TTVL, "12")
  field(FTST, "DIV1")
  field(FTVL, "13")
  field(FFST, "DIV2")
  field(FFVL, "14")
  field(ZR1ST, "DEL1_1")
  field(ZR1VL, "15")
  field(ON1ST, "DEL1_2")
  field(ON1VL, "16")
  field(TW1ST, "DEL2_1")
  field(TW1VL, "17")
  field(TH1ST, "DEL2_2")
  field(TH1VL, "18")
  field(FR1ST, "EIN1")
  field(FR1VL, "19")
  field(FV1ST, "EIN2")
  field(FV1VL, "20")
  field(SX1ST, "UserEvent1")
  field(SX1VL, "21")
  field(SV1ST, "UserEvent2")
  field(SV1VL, "22")
  field(EI1ST, "UserEvent3")
  field(EI1VL, "23")
  field(NI1ST, "UserEvent4")
  field(NI1VL, "24")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbi, "$(P)$(R)Stream_EndOfScanTriggerSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EndOfScanTriggerSource")
  field(ZRST, "ScanLength")
  field(ZRVL, "254")
  field(ONST, "StopScan")
  field(ONVL, "0")
  field(TWST, "LIN1")
  field(TWVL, "1")
  field(THST, "LIN2")
  field(THVL, "2")
  field(FRST, "LIN3")
  field(FRVL, "3")
  field(FVST, "LIN4")
  field(FVVL, "4")
  field(SXST, "LIN5")
  field(SXVL, "5")
  field(SVST, "LIN6")
  field(SVVL, "6")
  field(EIST, "LIN7")
  field(EIVL, "7")
  field(NIST, "LIN8")
  field(NIVL, "8")
  field(TEST, "QDC1")
  field(TEVL, "9")
  field(ELST, "QDC2")
  field(ELVL, "10")
  field(TVST, "MDV1")
  field(TVVL, "11")
  field(TTST, "MDV2")
  field(TTVL, "12")
  field(FTST, "DIV1")
  field(FTVL, "13")
  field(FFST, "DIV2")
  field(FFVL, "14")
  field(ZR1ST, "DEL1_1")
  field(ZR1VL, "15")
  field(ON1ST, "DEL1_2")
  field(ON1VL, "16")
  field(TW1ST, "DEL2_1")
  field(TW1VL, "17")
  field(TH1ST, "DEL2_2")
  field(TH1VL, "18")
  field(FR1ST, "EIN1")
  field(FR1VL, "19")
  field(FV1ST, "EIN2")
  field(FV1VL, "20")
  field(SX1ST, "UserEvent1")
  field(SX1VL, "21")
  field(SV1ST, "UserEvent2")
  field(SV1VL, "22")
  field(EI1ST, "UserEvent3")
  field(EI1VL, "23")
  field(NI1ST, "UserEvent4")
  field(NI1VL, "24")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Stream_EndOfScanTriggerSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EndOfScanTriggerSource")
  field(ZRST, "ScanLength")
  field(ZRVL, "254")
  field(ONST, "StopScan")
  field(ONVL, "0")
  field(TWST, "LIN1")
  field(TWVL, "1")
  field(THST, "LIN2")
  field(THVL, "2")
  field(FRST, "LIN3")
  field(FRVL, "3")
  field(FVST, "LIN4")
  field(FVVL, "4")
  field(SXST, "LIN5")
  field(SXVL, "5")
  field(SVST, "LIN6")
  field(SVVL, "6")
  field(EIST, "LIN7")
  field(EIVL, "7")
  field(NIST, "LIN8")
  field(NIVL, "8")
  field(TEST, "QDC1")
  field(TEVL, "9")
  field(ELST, "QDC2")
  field(ELVL, "10")
  field(TVST, "MDV1")
  field(TVVL, "11")
  field(TTST, "MDV2")
  field(TTVL, "12")
  field(FTST, "DIV1")
  field(FTVL, "13")
  field(FFST, "DIV2")
  field(FFVL, "14")
  field(ZR1ST, "DEL1_1")
  field(ZR1VL, "15")
  field(ON1ST, "DEL1_2")
  field(ON1VL, "16")
  field(TW1ST, "DEL2_1")
  field(TW1VL, "17")
  field(TH1ST, "DEL2_2")
  field(TH1VL, "18")
  field(FR1ST, "EIN1")
  field(FR1VL, "19")
  field(FV1ST, "EIN2")
  field(FV1VL, "20")
  field(SX1ST, "UserEvent1")
  field(SX1VL, "21")
  field(SV1ST, "UserEvent2")
  field(SV1VL, "22")
  field(EI1ST, "UserEvent3")
  field(EI1VL, "23")
  field(NI1ST, "UserEvent4")
  field(NI1VL, "24")
  field(DISA, "0")
}

*/

record(longin, "$(P)$(R)Stream_ScanLength_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_ScanLength")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_ScanLength") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_ScanLength")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Stream_BufferHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_BufferHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_BufferHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_BufferHeight")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_StartScan") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StartScan")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_StopScan") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StopScan")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_StreamReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StreamReset")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Stream_ErrorSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_ErrorSelector")
  field(ZRST, "All")
  field(ZRVL, "255")
  field(ONST, "StreamPacketSize")
  field(ONVL, "0")
  field(TWST, "StreamPacketFifo")
  field(TWVL, "2")
  field(THST, "CameraTriggerOve")
  field(THVL, "3")
  field(FRST, "DidNotReceiveTri")
  field(FRVL, "4")
  field(FVST, "TriggerPacketRet")
  field(FVVL, "5")
  field(SXST, "InputStreamFifoH")
  field(SXVL, "6")
  field(SVST, "InputStreamFifoF")
  field(SVVL, "7")
  field(EIST, "ImageHeaderError")
  field(EIVL, "8")
  field(NIST, "MigAxiWriteError")
  field(NIVL, "9")
  field(TEST, "MigAxiReadError")
  field(TEVL, "10")
  field(ELST, "PacketWithUnexpe")
  field(ELVL, "11")
  field(TVST, "StreamPacketCrcE")
  field(TVVL, "12")
  field(TTST, "StreamPacketCrcE")
  field(TTVL, "13")
  field(FTST, "StreamPacketCrcE")
  field(FTVL, "14")
  field(FFST, "StreamPacketCrcE")
  field(FFVL, "15")
  field(ZR1ST, "StartOfScanSkipp")
  field(ZR1VL, "16")
  field(ON1ST, "PrematureEndOfSc")
  field(ON1VL, "17")
  field(TW1ST, "ExternalTriggerR")
  field(TW1VL, "18")
  field(TH1ST, "Unknown")
  field(TH1VL, "254")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Stream_ErrorSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_ErrorSelector")
  field(ZRST, "All")
  field(ZRVL, "255")
  field(ONST, "StreamPacketSize")
  field(ONVL, "0")
  field(TWST, "StreamPacketFifo")
  field(TWVL, "2")
  field(THST, "CameraTriggerOve")
  field(THVL, "3")
  field(FRST, "DidNotReceiveTri")
  field(FRVL, "4")
  field(FVST, "TriggerPacketRet")
  field(FVVL, "5")
  field(SXST, "InputStreamFifoH")
  field(SXVL, "6")
  field(SVST, "InputStreamFifoF")
  field(SVVL, "7")
  field(EIST, "ImageHeaderError")
  field(EIVL, "8")
  field(NIST, "MigAxiWriteError")
  field(NIVL, "9")
  field(TEST, "MigAxiReadError")
  field(TEVL, "10")
  field(ELST, "PacketWithUnexpe")
  field(ELVL, "11")
  field(TVST, "StreamPacketCrcE")
  field(TVVL, "12")
  field(TTST, "StreamPacketCrcE")
  field(TTVL, "13")
  field(FTST, "StreamPacketCrcE")
  field(FTVL, "14")
  field(FFST, "StreamPacketCrcE")
  field(FFVL, "15")
  field(ZR1ST, "StartOfScanSkipp")
  field(ZR1VL, "16")
  field(ON1ST, "PrematureEndOfSc")
  field(ON1VL, "17")
  field(TW1ST, "ExternalTriggerR")
  field(TW1VL, "18")
  field(TH1ST, "Unknown")
  field(TH1VL, "254")
  field(DISA, "0")
}

*/

record(longin, "$(P)$(R)Stream_ErrorCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_ErrorCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_ErrorCountReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_ErrorCountReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Stream_StatisticsSamplingSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StatisticsSamplingSelector")
  field(ZRST, "LastSecond")
  field(ZRVL, "1")
  field(ONST, "LastTenSeconds")
  field(ONVL, "3")
  field(TWST, "Last2Buffers")
  field(TWVL, "4")
  field(THST, "Last10Buffers")
  field(THVL, "5")
  field(FRST, "Last100Buffers")
  field(FRVL, "6")
  field(FVST, "Last1000Buffers")
  field(FVVL, "7")
  field(SXST, "LastAcquisition")
  field(SXVL, "8")
  field(SVST, "Custom")
  field(SVVL, "9")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Stream_StatisticsSamplingSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StatisticsSamplingSelector")
  field(ZRST, "LastSecond")
  field(ZRVL, "1")
  field(ONST, "LastTenSeconds")
  field(ONVL, "3")
  field(TWST, "Last2Buffers")
  field(TWVL, "4")
  field(THST, "Last10Buffers")
  field(THVL, "5")
  field(FRST, "Last100Buffers")
  field(FRVL, "6")
  field(FVST, "Last1000Buffers")
  field(FVVL, "7")
  field(SXST, "LastAcquisition")
  field(SXVL, "8")
  field(SVST, "Custom")
  field(SVVL, "9")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Stream_StatisticsFrameRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StatisticsFrameRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Stream_StatisticsLineRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StatisticsLineRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Stream_StatisticsDataRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StatisticsDataRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_StatisticsStartSampling") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StatisticsStartSampling")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_StatisticsStopSampling") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_StatisticsStopSampling")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)Stream_EventSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventSelector")
  field(ZRST, "StartOfCameraRea")
  field(ZRVL, "32865")
  field(ONST, "EndOfCameraReado")
  field(ONVL, "32866")
  field(TWST, "StartOfScan")
  field(TWVL, "32867")
  field(THST, "EndOfScan")
  field(THVL, "32868")
  field(FRST, "RejectedFrame")
  field(FRVL, "32869")
  field(FVST, "RejectedScan")
  field(FVVL, "32870")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)Stream_EventSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventSelector")
  field(ZRST, "StartOfCameraRea")
  field(ZRVL, "32865")
  field(ONST, "EndOfCameraReado")
  field(ONVL, "32866")
  field(TWST, "StartOfScan")
  field(TWVL, "32867")
  field(THST, "EndOfScan")
  field(THVL, "32868")
  field(FRST, "RejectedFrame")
  field(FRVL, "32869")
  field(FVST, "RejectedScan")
  field(FVVL, "32870")
  field(DISA, "0")
}

record(bi, "$(P)$(R)Stream_EventNotification_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventNotification")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)Stream_EventNotification") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventNotification")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

// Illegal enums
/*

record(mbbi, "$(P)$(R)Stream_EventNotificationContext1_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventNotificationContext1")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Stream_EventNotificationContext1") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventNotificationContext1")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbi, "$(P)$(R)Stream_EventNotificationContext2_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventNotificationContext2")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Stream_EventNotificationContext2") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventNotificationContext2")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbi, "$(P)$(R)Stream_EventNotificationContext3_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventNotificationContext3")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

*/

// Illegal enums
/*

record(mbbo, "$(P)$(R)Stream_EventNotificationContext3") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventNotificationContext3")
  field(ZRST, "EventSpecific")
  field(ZRVL, "0")
  field(ONST, "LineStatusAll")
  field(ONVL, "1")
  field(TWST, "PendingCicTrigge")
  field(TWVL, "2")
  field(THST, "LIN1EventCount")
  field(THVL, "32768")
  field(FRST, "LIN2EventCount")
  field(FRVL, "32769")
  field(FVST, "LIN3EventCount")
  field(FVVL, "32770")
  field(SXST, "LIN4EventCount")
  field(SXVL, "32771")
  field(SVST, "LIN5EventCount")
  field(SVVL, "32772")
  field(EIST, "LIN6EventCount")
  field(EIVL, "32773")
  field(NIST, "LIN7EventCount")
  field(NIVL, "32774")
  field(TEST, "LIN8EventCount")
  field(TEVL, "32775")
  field(ELST, "QDC1EventCount")
  field(ELVL, "32896")
  field(TVST, "QDC1DirEventCoun")
  field(TVVL, "32897")
  field(TTST, "QDC2EventCount")
  field(TTVL, "32898")
  field(FTST, "QDC2DirEventCoun")
  field(FTVL, "32899")
  field(FFST, "DIV1EventCount")
  field(FFVL, "33024")
  field(ZR1ST, "DIV2EventCount")
  field(ZR1VL, "33025")
  field(ON1ST, "MDV1EventCount")
  field(ON1VL, "33152")
  field(TW1ST, "MDV2EventCount")
  field(TW1VL, "33153")
  field(TH1ST, "DEL11EventCount")
  field(TH1VL, "33280")
  field(FR1ST, "DEL12EventCount")
  field(FR1VL, "33281")
  field(FV1ST, "DEL21EventCount")
  field(FV1VL, "33282")
  field(SX1ST, "DEL22EventCount")
  field(SX1VL, "33283")
  field(SV1ST, "UserEvent1EventC")
  field(SV1VL, "33536")
  field(EI1ST, "UserEvent2EventC")
  field(EI1VL, "33537")
  field(NI1ST, "UserEvent3EventC")
  field(NI1VL, "33538")
  field(TE1ST, "UserEvent4EventC")
  field(TE1VL, "33539")
  field(EL1ST, "EIN1EventCount")
  field(EL1VL, "33664")
  field(TV1ST, "EIN2EventCount")
  field(TV1VL, "33665")
  field(TT1ST, "CrcErrorCxpAEven")
  field(TT1VL, "33408")
  field(FT1ST, "CrcErrorCxpBEven")
  field(FT1VL, "33409")
  field(FF1ST, "CrcErrorCxpCEven")
  field(FF1VL, "33410")
  field(ZR2ST, "CrcErrorCxpDEven")
  field(ZR2VL, "33411")
  field(ON2ST, "CameraTriggerRis")
  field(ON2VL, "32833")
  field(TW2ST, "CameraTriggerFal")
  field(TW2VL, "32834")
  field(TH2ST, "StrobeRisingEdge")
  field(TH2VL, "32835")
  field(FR2ST, "StrobeFallingEdg")
  field(FR2VL, "32836")
  field(FV2ST, "AllowNextCycleEv")
  field(FV2VL, "32837")
  field(SX2ST, "DiscardedCicTrig")
  field(SX2VL, "32838")
  field(SV2ST, "PendingCicTrigge")
  field(SV2VL, "32839")
  field(EI2ST, "CxpTriggerAckEve")
  field(EI2VL, "32840")
  field(NI2ST, "CxpTriggerResend")
  field(NI2VL, "32841")
  field(TE2ST, "TriggerEventCoun")
  field(TE2VL, "32842")
  field(EL2ST, "StartOfCameraRea")
  field(EL2VL, "32865")
  field(TV2ST, "EndOfCameraReado")
  field(TV2VL, "32866")
  field(TT2ST, "StartOfScanEvent")
  field(TT2VL, "32867")
  field(FT2ST, "EndOfScanEventCo")
  field(FT2VL, "32868")
  field(FF2ST, "RejectedFrameEve")
  field(FF2VL, "32869")
  field(ZR3ST, "RejectedScanEven")
  field(ZR3VL, "32870")
  field(DISA, "0")
}

*/

record(longin, "$(P)$(R)Stream_EventCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Stream_EventCountReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Stream_EventCountReset")
  field(DISA, "0")
}










