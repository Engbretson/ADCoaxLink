include "ADBase.template"

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, ./Euresys_Coaxlink_TLSystem_6_2_4.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)TLVendorName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLVendorName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)TLModelName_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLModelName")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)TLID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)TLVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)TLPath_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLPath")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TLType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TLType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TLType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longin, "$(P)$(R)GenTLVersionMajor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GenTLVersionMajor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)GenTLVersionMajor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GenTLVersionMajor")
  field(DISA, "0")
}

record(longin, "$(P)$(R)GenTLVersionMinor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GenTLVersionMinor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)GenTLVersionMinor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GenTLVersionMinor")
  field(DISA, "0")
}

record(longout, "$(P)$(R)InterfaceUpdateList") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceUpdateList")
  field(DISA, "0")
}

record(longin, "$(P)$(R)InterfaceSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)InterfaceSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceSelector")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)InterfaceID+S_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceID+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, ./Euresys_Coaxlink_TLInterface_6_2_4.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)InterfaceID+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceID+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)InterfaceType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)InterfaceType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)SerialNumber_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SerialNumber")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)PartNumber_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PartNumber")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FirmwareRevision_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareRevision")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FirmwareVariant_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareVariant")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)FirmwareStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "TooRecent")
  field(ONVL, "1")
  field(TWST, "TooOld")
  field(TWVL, "2")
  field(THST, "RecoveryMode")
  field(THVL, "3")
  field(FRST, "PCIeGen1NotSuppo")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)FirmwareStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "TooRecent")
  field(ONVL, "1")
  field(TWST, "TooOld")
  field(TWVL, "2")
  field(THST, "RecoveryMode")
  field(THVL, "3")
  field(FRST, "PCIeGen1NotSuppo")
  field(FRVL, "4")
  field(DISA, "0")
}

record(bi, "$(P)$(R)FirmwareRecoverySwitch_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareRecoverySwitch")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)FirmwareRecoverySwitch") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareRecoverySwitch")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceUpdateList") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceUpdateList")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DeviceSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceSelector")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceID+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceID+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceVendorName+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceVendorName+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceModelName+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceModelName+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceAccessStatus+I_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceAccessStatus+I")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceAccessStatus+I") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceAccessStatus+I")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpPoCxpHostConnectionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpHostConnectionSelector")
  field(ZRST, "All")
  field(ZRVL, "15")
  field(ONST, "A")
  field(ONVL, "1")
  field(TWST, "B")
  field(TWVL, "2")
  field(THST, "C")
  field(THVL, "4")
  field(FRST, "D")
  field(FRVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpPoCxpHostConnectionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpHostConnectionSelector")
  field(ZRST, "All")
  field(ZRVL, "15")
  field(ONST, "A")
  field(ONVL, "1")
  field(TWST, "B")
  field(TWVL, "2")
  field(THST, "C")
  field(THVL, "4")
  field(FRST, "D")
  field(FRVL, "8")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpPoCxpAuto") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpAuto")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpPoCxpTurnOff") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpTurnOff")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpPoCxpTripReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpTripReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpPoCxpConfigurationStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpConfigurationStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "Auto")
  field(ONVL, "2")
  field(TWST, "Unknown")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpPoCxpConfigurationStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpConfigurationStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "Auto")
  field(ONVL, "2")
  field(TWST, "Unknown")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpPoCxpStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "On")
  field(ONVL, "2")
  field(TWST, "Tripped")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpPoCxpStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpStatus")
  field(ZRST, "Off")
  field(ZRVL, "1")
  field(ONST, "On")
  field(ONVL, "2")
  field(TWST, "Tripped")
  field(TWVL, "4")
  field(THST, "Compound")
  field(THVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)CxpPoCxpCurrent_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpCurrent")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)CxpPoCxpCurrent") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpCurrent")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)CxpPoCxpVoltage_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpVoltage")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)CxpPoCxpVoltage") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpVoltage")
  field(PREC, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpPoCxpPowerInputStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpPowerInputStatus")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpPoCxpPowerInputStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPoCxpPowerInputStatus")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CxpHostConnectionCount+I_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionCount+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpHostConnectionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionSelector")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpHostConnectionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionSelector")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpConnectionState_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpConnectionState")
  field(ZRST, "Undetected")
  field(ZRVL, "0")
  field(ONST, "Detected")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpConnectionState") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpConnectionState")
  field(ZRST, "Undetected")
  field(ZRVL, "0")
  field(ONST, "Detected")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpDownConnectionSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDownConnectionSpeed")
  field(ZRST, "CXP1")
  field(ZRVL, "0")
  field(ONST, "CXP2")
  field(ONVL, "1")
  field(TWST, "CXP3")
  field(TWVL, "2")
  field(THST, "CXP5")
  field(THVL, "3")
  field(FRST, "CXP6")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpDownConnectionSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDownConnectionSpeed")
  field(ZRST, "CXP1")
  field(ZRVL, "0")
  field(ONST, "CXP2")
  field(ONVL, "1")
  field(TWST, "CXP3")
  field(TWVL, "2")
  field(THST, "CXP5")
  field(THVL, "3")
  field(FRST, "CXP6")
  field(FRVL, "4")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)CxpDeviceConnectionID_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDeviceConnectionID")
#  field(ZRST, "CameraW_Master")
#  field(ZRVL, "0")
#  field(ONST, "CameraW_Extensio")
#  field(ONVL, "1")
#  field(TWST, "CameraW_Extensio")
#  field(TWVL, "2")
#  field(THST, "CameraW_Extensio")
#  field(THVL, "3")
#  field(FRST, "CameraW_Extensio")
#  field(FRVL, "4")
#  field(FVST, "CameraW_Extensio")
#  field(FVVL, "5")
#  field(SXST, "CameraW_Extensio")
#  field(SXVL, "6")
#  field(SVST, "CameraW_Extensio")
#  field(SVVL, "7")
#  field(EIST, "CameraX_Master")
#  field(EIVL, "65536")
#  field(NIST, "CameraX_Extensio")
#  field(NIVL, "65537")
#  field(TEST, "CameraX_Extensio")
#  field(TEVL, "65538")
#  field(ELST, "CameraX_Extensio")
#  field(ELVL, "65539")
#  field(TVST, "CameraX_Extensio")
#  field(TVVL, "65540")
#  field(TTST, "CameraX_Extensio")
#  field(TTVL, "65541")
#  field(FTST, "CameraX_Extensio")
#  field(FTVL, "65542")
#  field(FFST, "CameraX_Extensio")
#  field(FFVL, "65543")
#  field(ZR1ST, "CameraY_Master")
#  field(ZR1VL, "131072")
#  field(ON1ST, "CameraY_Extensio")
#  field(ON1VL, "131073")
#  field(TW1ST, "CameraY_Extensio")
#  field(TW1VL, "131074")
#  field(TH1ST, "CameraY_Extensio")
#  field(TH1VL, "131075")
#  field(FR1ST, "CameraY_Extensio")
#  field(FR1VL, "131076")
#  field(FV1ST, "CameraY_Extensio")
#  field(FV1VL, "131077")
#  field(SX1ST, "CameraY_Extensio")
#  field(SX1VL, "131078")
#  field(SV1ST, "CameraY_Extensio")
#  field(SV1VL, "131079")
#  field(EI1ST, "CameraZ_Master")
#  field(EI1VL, "196608")
#  field(NI1ST, "CameraZ_Extensio")
#  field(NI1VL, "196609")
#  field(TE1ST, "CameraZ_Extensio")
#  field(TE1VL, "196610")
#  field(EL1ST, "CameraZ_Extensio")
#  field(EL1VL, "196611")
#  field(TV1ST, "CameraZ_Extensio")
#  field(TV1VL, "196612")
#  field(TT1ST, "CameraZ_Extensio")
#  field(TT1VL, "196613")
#  field(FT1ST, "CameraZ_Extensio")
#  field(FT1VL, "196614")
#  field(FF1ST, "CameraZ_Extensio")
#  field(FF1VL, "196615")
#  field(ZR2ST, "SubLink_Extensio")
#  field(ZR2VL, "4294901761")
#  field(ON2ST, "SubLink_Extensio")
#  field(ON2VL, "4294901762")
#  field(TW2ST, "SubLink_Extensio")
#  field(TW2VL, "4294901763")
#  field(TH2ST, "SubLink_Extensio")
#  field(TH2VL, "4294901764")
#  field(FR2ST, "SubLink_Extensio")
#  field(FR2VL, "4294901765")
#  field(FV2ST, "SubLink_Extensio")
#  field(FV2VL, "4294901766")
#  field(SX2ST, "SubLink_Extensio")
#  field(SX2VL, "4294901767")
#  field(SV2ST, "NotReady")
#  field(SV2VL, "128")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)CxpDeviceConnectionID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDeviceConnectionID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)CxpDeviceConnectionID") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpDeviceConnectionID")
#  field(ZRST, "CameraW_Master")
#  field(ZRVL, "0")
#  field(ONST, "CameraW_Extensio")
#  field(ONVL, "1")
#  field(TWST, "CameraW_Extensio")
#  field(TWVL, "2")
#  field(THST, "CameraW_Extensio")
#  field(THVL, "3")
#  field(FRST, "CameraW_Extensio")
#  field(FRVL, "4")
#  field(FVST, "CameraW_Extensio")
#  field(FVVL, "5")
#  field(SXST, "CameraW_Extensio")
#  field(SXVL, "6")
#  field(SVST, "CameraW_Extensio")
#  field(SVVL, "7")
#  field(EIST, "CameraX_Master")
#  field(EIVL, "65536")
#  field(NIST, "CameraX_Extensio")
#  field(NIVL, "65537")
#  field(TEST, "CameraX_Extensio")
#  field(TEVL, "65538")
#  field(ELST, "CameraX_Extensio")
#  field(ELVL, "65539")
#  field(TVST, "CameraX_Extensio")
#  field(TVVL, "65540")
#  field(TTST, "CameraX_Extensio")
#  field(TTVL, "65541")
#  field(FTST, "CameraX_Extensio")
#  field(FTVL, "65542")
#  field(FFST, "CameraX_Extensio")
#  field(FFVL, "65543")
#  field(ZR1ST, "CameraY_Master")
#  field(ZR1VL, "131072")
#  field(ON1ST, "CameraY_Extensio")
#  field(ON1VL, "131073")
#  field(TW1ST, "CameraY_Extensio")
#  field(TW1VL, "131074")
#  field(TH1ST, "CameraY_Extensio")
#  field(TH1VL, "131075")
#  field(FR1ST, "CameraY_Extensio")
#  field(FR1VL, "131076")
#  field(FV1ST, "CameraY_Extensio")
#  field(FV1VL, "131077")
#  field(SX1ST, "CameraY_Extensio")
#  field(SX1VL, "131078")
#  field(SV1ST, "CameraY_Extensio")
#  field(SV1VL, "131079")
#  field(EI1ST, "CameraZ_Master")
#  field(EI1VL, "196608")
#  field(NI1ST, "CameraZ_Extensio")
#  field(NI1VL, "196609")
#  field(TE1ST, "CameraZ_Extensio")
#  field(TE1VL, "196610")
#  field(EL1ST, "CameraZ_Extensio")
#  field(EL1VL, "196611")
#  field(TV1ST, "CameraZ_Extensio")
#  field(TV1VL, "196612")
#  field(TT1ST, "CameraZ_Extensio")
#  field(TT1VL, "196613")
#  field(FT1ST, "CameraZ_Extensio")
#  field(FT1VL, "196614")
#  field(FF1ST, "CameraZ_Extensio")
#  field(FF1VL, "196615")
#  field(ZR2ST, "SubLink_Extensio")
#  field(ZR2VL, "4294901761")
#  field(ON2ST, "SubLink_Extensio")
#  field(ON2VL, "4294901762")
#  field(TW2ST, "SubLink_Extensio")
#  field(TW2VL, "4294901763")
#  field(TH2ST, "SubLink_Extensio")
#  field(TH2VL, "4294901764")
#  field(FR2ST, "SubLink_Extensio")
#  field(FR2VL, "4294901765")
#  field(FV2ST, "SubLink_Extensio")
#  field(FV2VL, "4294901766")
#  field(SX2ST, "SubLink_Extensio")
#  field(SX2VL, "4294901767")
#  field(SV2ST, "NotReady")
#  field(SV2VL, "128")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)CxpHostConnectionTestMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpHostConnectionTestMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CxpHostConnectionTestErrorCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestErrorCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpHostConnectionTestErrorCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestErrorCount")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CxpHostConnectionTestPacketCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestPacketCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpHostConnectionTestPacketCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestPacketCount")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpHostConnectionTestInjectError") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionTestInjectError")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpRevisionSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpRevisionSelector")
  field(ZRST, "CXP_1_0")
  field(ZRVL, "0")
  field(ONST, "CXP_1_1")
  field(ONVL, "2")
  field(TWST, "CXP_1_1_1")
  field(TWVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpRevisionSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpRevisionSelector")
  field(ZRST, "CXP_1_0")
  field(ZRVL, "0")
  field(ONST, "CXP_1_1")
  field(ONVL, "2")
  field(TWST, "CXP_1_1_1")
  field(TWVL, "4")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpRevisionSupport_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpRevisionSupport")
  field(ZRST, "NotSupported")
  field(ZRVL, "0")
  field(ONST, "PartiallySupport")
  field(ONVL, "1")
  field(TWST, "Supported")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpRevisionSupport") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpRevisionSupport")
  field(ZRST, "NotSupported")
  field(ZRVL, "0")
  field(ONST, "PartiallySupport")
  field(ONVL, "1")
  field(TWST, "Supported")
  field(TWVL, "2")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)LineSelector_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
#  field(ZRST, "DIN11")
#  field(ZRVL, "0")
#  field(ONST, "DIN12")
#  field(ONVL, "1")
#  field(TWST, "DIN21")
#  field(TWVL, "2")
#  field(THST, "DIN22")
#  field(THVL, "3")
#  field(FRST, "IIN11")
#  field(FRVL, "4")
#  field(FVST, "IIN12")
#  field(FVVL, "5")
#  field(SXST, "IIN13")
#  field(SXVL, "6")
#  field(SVST, "IIN14")
#  field(SVVL, "7")
#  field(EIST, "IIN21")
#  field(EIVL, "8")
#  field(NIST, "IIN22")
#  field(NIVL, "9")
#  field(TEST, "IIN23")
#  field(TEVL, "10")
#  field(ELST, "IIN24")
#  field(ELVL, "11")
#  field(TVST, "IOUT11")
#  field(TVVL, "12")
#  field(TTST, "IOUT12")
#  field(TTVL, "13")
#  field(FTST, "IOUT21")
#  field(FTVL, "14")
#  field(FFST, "IOUT22")
#  field(FFVL, "15")
#  field(ZR1ST, "TTLIO11")
#  field(ZR1VL, "16")
#  field(ON1ST, "TTLIO12")
#  field(ON1VL, "17")
#  field(TW1ST, "TTLIO21")
#  field(TW1VL, "18")
#  field(TH1ST, "TTLIO22")
#  field(TH1VL, "19")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)LineSelector_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)LineSelector") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSelector")
#  field(ZRST, "DIN11")
#  field(ZRVL, "0")
#  field(ONST, "DIN12")
#  field(ONVL, "1")
#  field(TWST, "DIN21")
#  field(TWVL, "2")
#  field(THST, "DIN22")
#  field(THVL, "3")
#  field(FRST, "IIN11")
#  field(FRVL, "4")
#  field(FVST, "IIN12")
#  field(FVVL, "5")
#  field(SXST, "IIN13")
#  field(SXVL, "6")
#  field(SVST, "IIN14")
#  field(SVVL, "7")
#  field(EIST, "IIN21")
#  field(EIVL, "8")
#  field(NIST, "IIN22")
#  field(NIVL, "9")
#  field(TEST, "IIN23")
#  field(TEVL, "10")
#  field(ELST, "IIN24")
#  field(ELVL, "11")
#  field(TVST, "IOUT11")
#  field(TVVL, "12")
#  field(TTST, "IOUT12")
#  field(TTVL, "13")
#  field(FTST, "IOUT21")
#  field(FTVL, "14")
#  field(FFST, "IOUT22")
#  field(FFVL, "15")
#  field(ZR1ST, "TTLIO11")
#  field(ZR1VL, "16")
#  field(ON1ST, "TTLIO12")
#  field(ON1VL, "17")
#  field(TW1ST, "TTLIO21")
#  field(TW1VL, "18")
#  field(TH1ST, "TTLIO22")
#  field(TH1VL, "19")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)LineFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFormat")
  field(ZRST, "ISO")
  field(ZRVL, "0")
  field(ONST, "DIFF")
  field(ONVL, "1")
  field(TWST, "TTL")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFormat")
  field(ZRST, "ISO")
  field(ZRVL, "0")
  field(ONST, "DIFF")
  field(ONVL, "1")
  field(TWST, "TTL")
  field(TWVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineMode")
  field(ZRST, "Input")
  field(ZRVL, "1")
  field(ONST, "Output")
  field(ONVL, "2")
  field(TWST, "DriveLow")
  field(TWVL, "3")
  field(THST, "DriveHigh")
  field(THVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineMode")
  field(ZRST, "Input")
  field(ZRVL, "1")
  field(ONST, "Output")
  field(ONVL, "2")
  field(TWST, "DriveLow")
  field(TWVL, "3")
  field(THST, "DriveHigh")
  field(THVL, "4")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LineInverter_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInverter")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LineInverter") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInverter")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineFilterStrength_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFilterStrength")
  field(ZRST, "Lowest")
  field(ZRVL, "1")
  field(ONST, "Low")
  field(ONVL, "2")
  field(TWST, "Medium")
  field(TWVL, "3")
  field(THST, "High")
  field(THVL, "4")
  field(FRST, "Highest")
  field(FRVL, "5")
  field(FVST, "NotAvailable")
  field(FVVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineFilterStrength") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFilterStrength")
  field(ZRST, "Lowest")
  field(ZRVL, "1")
  field(ONST, "Low")
  field(ONVL, "2")
  field(TWST, "Medium")
  field(TWVL, "3")
  field(THST, "High")
  field(THVL, "4")
  field(FRST, "Highest")
  field(FRVL, "5")
  field(FVST, "NotAvailable")
  field(FVVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)LineFilterDelay_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFilterDelay")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)LineFilterDelay") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineFilterDelay")
  field(PREC, "3")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LineStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatus")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LineStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatus")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LineStatusAll_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatusAll")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LineStatusAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineStatusAll")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)LineSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
#  field(ZRST, "UserOutput0")
#  field(ZRVL, "1")
#  field(ONST, "UserOutput1")
#  field(ONVL, "2")
#  field(TWST, "UserOutput2")
#  field(TWVL, "3")
#  field(THST, "UserOutput3")
#  field(THVL, "4")
#  field(FRST, "UserOutput4")
#  field(FRVL, "5")
#  field(FVST, "UserOutput5")
#  field(FVVL, "6")
#  field(SXST, "UserOutput6")
#  field(SXVL, "7")
#  field(SVST, "UserOutput7")
#  field(SVVL, "8")
#  field(EIST, "Device0Strobe")
#  field(EIVL, "9")
#  field(NIST, "Device1Strobe")
#  field(NIVL, "10")
#  field(TEST, "Device2Strobe")
#  field(TEVL, "11")
#  field(ELST, "Device3Strobe")
#  field(ELVL, "12")
#  field(TVST, "Device0CameraTri")
#  field(TVVL, "13")
#  field(TTST, "Device1CameraTri")
#  field(TTVL, "14")
#  field(FTST, "Device2CameraTri")
#  field(FTVL, "15")
#  field(FFST, "Device3CameraTri")
#  field(FFVL, "16")
#  field(ZR1ST, "Device0Stream0St")
#  field(ZR1VL, "25")
#  field(ON1ST, "Device1Stream0St")
#  field(ON1VL, "26")
#  field(TW1ST, "Device2Stream0St")
#  field(TW1VL, "27")
#  field(TH1ST, "Device3Stream0St")
#  field(TH1VL, "28")
#  field(FR1ST, "Low")
#  field(FR1VL, "255")
#  field(FV1ST, "NotAvailable")
#  field(FV1VL, "0")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)LineSource_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)LineSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineSource")
#  field(ZRST, "UserOutput0")
#  field(ZRVL, "1")
#  field(ONST, "UserOutput1")
#  field(ONVL, "2")
#  field(TWST, "UserOutput2")
#  field(TWVL, "3")
#  field(THST, "UserOutput3")
#  field(THVL, "4")
#  field(FRST, "UserOutput4")
#  field(FRVL, "5")
#  field(FVST, "UserOutput5")
#  field(FVVL, "6")
#  field(SXST, "UserOutput6")
#  field(SXVL, "7")
#  field(SVST, "UserOutput7")
#  field(SVVL, "8")
#  field(EIST, "Device0Strobe")
#  field(EIVL, "9")
#  field(NIST, "Device1Strobe")
#  field(NIVL, "10")
#  field(TEST, "Device2Strobe")
#  field(TEVL, "11")
#  field(ELST, "Device3Strobe")
#  field(ELVL, "12")
#  field(TVST, "Device0CameraTri")
#  field(TVVL, "13")
#  field(TTST, "Device1CameraTri")
#  field(TTVL, "14")
#  field(FTST, "Device2CameraTri")
#  field(FTVL, "15")
#  field(FFST, "Device3CameraTri")
#  field(FFVL, "16")
#  field(ZR1ST, "Device0Stream0St")
#  field(ZR1VL, "25")
#  field(ON1ST, "Device1Stream0St")
#  field(ON1VL, "26")
#  field(TW1ST, "Device2Stream0St")
#  field(TW1VL, "27")
#  field(TH1ST, "Device3Stream0St")
#  field(TH1VL, "28")
#  field(FR1ST, "Low")
#  field(FR1VL, "255")
#  field(FV1ST, "NotAvailable")
#  field(FV1VL, "0")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)UserOutputValueAll_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputValueAll")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)UserOutputValueAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserOutputValueAll")
  field(DISA, "0")
}

record(longin, "$(P)$(R)UserActions_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserActions")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)UserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserActions")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)AddUserAction_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AddUserAction")
#  field(ZRST, "UserEvent1")
#  field(ZRVL, "1048576")
#  field(ONST, "UserEvent2")
#  field(ONVL, "2097152")
#  field(TWST, "UserEvent3")
#  field(TWVL, "4194304")
#  field(THST, "UserEvent4")
#  field(THVL, "8388608")
#  field(FRST, "UserOutput0_High")
#  field(FRVL, "1")
#  field(FVST, "UserOutput0_Low")
#  field(FVVL, "2")
#  field(SXST, "UserOutput0_Togg")
#  field(SXVL, "3")
#  field(SVST, "UserOutput1_High")
#  field(SVVL, "4")
#  field(EIST, "UserOutput1_Low")
#  field(EIVL, "8")
#  field(NIST, "UserOutput1_Togg")
#  field(NIVL, "12")
#  field(TEST, "UserOutput2_High")
#  field(TEVL, "16")
#  field(ELST, "UserOutput2_Low")
#  field(ELVL, "32")
#  field(TVST, "UserOutput2_Togg")
#  field(TVVL, "48")
#  field(TTST, "UserOutput3_High")
#  field(TTVL, "64")
#  field(FTST, "UserOutput3_Low")
#  field(FTVL, "128")
#  field(FFST, "UserOutput3_Togg")
#  field(FFVL, "192")
#  field(ZR1ST, "UserOutput4_High")
#  field(ZR1VL, "256")
#  field(ON1ST, "UserOutput4_Low")
#  field(ON1VL, "512")
#  field(TW1ST, "UserOutput4_Togg")
#  field(TW1VL, "768")
#  field(TH1ST, "UserOutput5_High")
#  field(TH1VL, "1024")
#  field(FR1ST, "UserOutput5_Low")
#  field(FR1VL, "2048")
#  field(FV1ST, "UserOutput5_Togg")
#  field(FV1VL, "3072")
#  field(SX1ST, "UserOutput6_High")
#  field(SX1VL, "4096")
#  field(SV1ST, "UserOutput6_Low")
#  field(SV1VL, "8192")
#  field(EI1ST, "UserOutput6_Togg")
#  field(EI1VL, "12288")
#  field(NI1ST, "UserOutput7_High")
#  field(NI1VL, "16384")
#  field(TE1ST, "UserOutput7_Low")
#  field(TE1VL, "32768")
#  field(EL1ST, "UserOutput7_Togg")
#  field(EL1VL, "49152")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)AddUserAction_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AddUserAction")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)AddUserAction") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AddUserAction")
#  field(ZRST, "UserEvent1")
#  field(ZRVL, "1048576")
#  field(ONST, "UserEvent2")
#  field(ONVL, "2097152")
#  field(TWST, "UserEvent3")
#  field(TWVL, "4194304")
#  field(THST, "UserEvent4")
#  field(THVL, "8388608")
#  field(FRST, "UserOutput0_High")
#  field(FRVL, "1")
#  field(FVST, "UserOutput0_Low")
#  field(FVVL, "2")
#  field(SXST, "UserOutput0_Togg")
#  field(SXVL, "3")
#  field(SVST, "UserOutput1_High")
#  field(SVVL, "4")
#  field(EIST, "UserOutput1_Low")
#  field(EIVL, "8")
#  field(NIST, "UserOutput1_Togg")
#  field(NIVL, "12")
#  field(TEST, "UserOutput2_High")
#  field(TEVL, "16")
#  field(ELST, "UserOutput2_Low")
#  field(ELVL, "32")
#  field(TVST, "UserOutput2_Togg")
#  field(TVVL, "48")
#  field(TTST, "UserOutput3_High")
#  field(TTVL, "64")
#  field(FTST, "UserOutput3_Low")
#  field(FTVL, "128")
#  field(FFST, "UserOutput3_Togg")
#  field(FFVL, "192")
#  field(ZR1ST, "UserOutput4_High")
#  field(ZR1VL, "256")
#  field(ON1ST, "UserOutput4_Low")
#  field(ON1VL, "512")
#  field(TW1ST, "UserOutput4_Togg")
#  field(TW1VL, "768")
#  field(TH1ST, "UserOutput5_High")
#  field(TH1VL, "1024")
#  field(FR1ST, "UserOutput5_Low")
#  field(FR1VL, "2048")
#  field(FV1ST, "UserOutput5_Togg")
#  field(FV1VL, "3072")
#  field(SX1ST, "UserOutput6_High")
#  field(SX1VL, "4096")
#  field(SV1ST, "UserOutput6_Low")
#  field(SV1VL, "8192")
#  field(EI1ST, "UserOutput6_Togg")
#  field(EI1VL, "12288")
#  field(NI1ST, "UserOutput7_High")
#  field(NI1VL, "16384")
#  field(TE1ST, "UserOutput7_Low")
#  field(TE1VL, "32768")
#  field(EL1ST, "UserOutput7_Togg")
#  field(EL1VL, "49152")
#  field(DISA, "0")
#}

record(longout, "$(P)$(R)ClearUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ClearUserActions")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ExecuteUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExecuteUserActions")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ScheduleUserActions_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScheduleUserActions")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ScheduleUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScheduleUserActions")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)UserActionsSchedulerReference_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserActionsSchedulerReference")
  field(ZRST, "InternalTime")
  field(ZRVL, "1")
  field(ONST, "QDC1Position")
  field(ONVL, "2")
  field(TWST, "QDC2Position")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)UserActionsSchedulerReference") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserActionsSchedulerReference")
  field(ZRST, "InternalTime")
  field(ZRVL, "1")
  field(ONST, "QDC1Position")
  field(ONVL, "2")
  field(TWST, "QDC2Position")
  field(TWVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)ScheduledUserActionsPoolStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScheduledUserActionsPoolStatus")
  field(ZRST, "Empty")
  field(ZRVL, "1")
  field(ONST, "PartiallyFilled")
  field(ONVL, "2")
  field(TWST, "AlmostFull")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)ScheduledUserActionsPoolStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScheduledUserActionsPoolStatus")
  field(ZRST, "Empty")
  field(ZRVL, "1")
  field(ONST, "PartiallyFilled")
  field(ONVL, "2")
  field(TWST, "AlmostFull")
  field(TWVL, "3")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DiscardScheduledUserActions") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DiscardScheduledUserActions")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LineInputToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSelector")
  field(ZRST, "LIN1")
  field(ZRVL, "1")
  field(ONST, "LIN2")
  field(ONVL, "2")
  field(TWST, "LIN3")
  field(TWVL, "3")
  field(THST, "LIN4")
  field(THVL, "4")
  field(FRST, "LIN5")
  field(FRVL, "5")
  field(FVST, "LIN6")
  field(FVVL, "6")
  field(SXST, "LIN7")
  field(SXVL, "7")
  field(SVST, "LIN8")
  field(SVVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineInputToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSelector")
  field(ZRST, "LIN1")
  field(ZRVL, "1")
  field(ONST, "LIN2")
  field(ONVL, "2")
  field(TWST, "LIN3")
  field(TWVL, "3")
  field(THST, "LIN4")
  field(THVL, "4")
  field(FRST, "LIN5")
  field(FRVL, "5")
  field(FVST, "LIN6")
  field(FVVL, "6")
  field(SXST, "LIN7")
  field(SXVL, "7")
  field(SVST, "LIN8")
  field(SVVL, "8")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)LineInputToolSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSource")
#  field(ZRST, "DIN11")
#  field(ZRVL, "0")
#  field(ONST, "DIN12")
#  field(ONVL, "1")
#  field(TWST, "DIN21")
#  field(TWVL, "2")
#  field(THST, "DIN22")
#  field(THVL, "3")
#  field(FRST, "IIN11")
#  field(FRVL, "4")
#  field(FVST, "IIN12")
#  field(FVVL, "5")
#  field(SXST, "IIN13")
#  field(SXVL, "6")
#  field(SVST, "IIN14")
#  field(SVVL, "7")
#  field(EIST, "IIN21")
#  field(EIVL, "8")
#  field(NIST, "IIN22")
#  field(NIVL, "9")
#  field(TEST, "IIN23")
#  field(TEVL, "10")
#  field(ELST, "IIN24")
#  field(ELVL, "11")
#  field(TVST, "IOUT11")
#  field(TVVL, "12")
#  field(TTST, "IOUT12")
#  field(TTVL, "13")
#  field(FTST, "IOUT21")
#  field(FTVL, "14")
#  field(FFST, "IOUT22")
#  field(FFVL, "15")
#  field(ZR1ST, "TTLIO11")
#  field(ZR1VL, "16")
#  field(ON1ST, "TTLIO12")
#  field(ON1VL, "17")
#  field(TW1ST, "TTLIO21")
#  field(TW1VL, "18")
#  field(TH1ST, "TTLIO22")
#  field(TH1VL, "19")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)LineInputToolSource_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSource")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)LineInputToolSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolSource")
#  field(ZRST, "DIN11")
#  field(ZRVL, "0")
#  field(ONST, "DIN12")
#  field(ONVL, "1")
#  field(TWST, "DIN21")
#  field(TWVL, "2")
#  field(THST, "DIN22")
#  field(THVL, "3")
#  field(FRST, "IIN11")
#  field(FRVL, "4")
#  field(FVST, "IIN12")
#  field(FVVL, "5")
#  field(SXST, "IIN13")
#  field(SXVL, "6")
#  field(SVST, "IIN14")
#  field(SVVL, "7")
#  field(EIST, "IIN21")
#  field(EIVL, "8")
#  field(NIST, "IIN22")
#  field(NIVL, "9")
#  field(TEST, "IIN23")
#  field(TEVL, "10")
#  field(ELST, "IIN24")
#  field(ELVL, "11")
#  field(TVST, "IOUT11")
#  field(TVVL, "12")
#  field(TTST, "IOUT12")
#  field(TTVL, "13")
#  field(FTST, "IOUT21")
#  field(FTVL, "14")
#  field(FFST, "IOUT22")
#  field(FFVL, "15")
#  field(ZR1ST, "TTLIO11")
#  field(ZR1VL, "16")
#  field(ON1ST, "TTLIO12")
#  field(ON1VL, "17")
#  field(TW1ST, "TTLIO21")
#  field(TW1VL, "18")
#  field(TH1ST, "TTLIO22")
#  field(TH1VL, "19")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)LineInputToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolActivation")
  field(ZRST, "RisingEdge")
  field(ZRVL, "1")
  field(ONST, "FallingEdge")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LineInputToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineInputToolActivation")
  field(ZRST, "RisingEdge")
  field(ZRVL, "1")
  field(ONST, "FallingEdge")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)MultiplierDividerToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSelector")
  field(ZRST, "MDV1")
  field(ZRVL, "1")
  field(ONST, "MDV2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)MultiplierDividerToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSelector")
  field(ZRST, "MDV1")
  field(ZRVL, "1")
  field(ONST, "MDV2")
  field(ONVL, "2")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)MultiplierDividerToolSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSource")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)MultiplierDividerToolSource_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSource")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)MultiplierDividerToolSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolSource")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)MultiplierDividerToolOutputControl_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolOutputControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)MultiplierDividerToolOutputControl") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolOutputControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)MultiplierDividerToolMultiplicationFactor_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolMultiplicationFactor")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)MultiplierDividerToolMultiplicationFactor") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolMultiplicationFactor")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)MultiplierDividerToolDivisionFactor_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolDivisionFactor")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)MultiplierDividerToolDivisionFactor") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolDivisionFactor")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MultiplierDividerToolEffectiveMultiplicationFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolEffectiveMultiplicationFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)MultiplierDividerToolEffectiveMultiplicationFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolEffectiveMultiplicationFactor")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MultiplierDividerToolEffectiveDivisionFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolEffectiveDivisionFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)MultiplierDividerToolEffectiveDivisionFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiplierDividerToolEffectiveDivisionFactor")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolSelector")
  field(ZRST, "QDC1")
  field(ZRVL, "1")
  field(ONST, "QDC2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolSelector")
  field(ZRST, "QDC1")
  field(ZRVL, "1")
  field(ONST, "QDC2")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolSources_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolSources")
  field(ZRST, "DIN11_DIN12")
  field(ZRVL, "1")
  field(ONST, "DIN21_DIN22")
  field(ONVL, "2")
  field(TWST, "IIN11_IIN12")
  field(TWVL, "3")
  field(THST, "IIN13_IIN14")
  field(THVL, "4")
  field(FRST, "IIN21_IIN22")
  field(FRVL, "5")
  field(FVST, "IIN23_IIN24")
  field(FVVL, "6")
  field(SXST, "TTLIO11_TTLIO12")
  field(SXVL, "7")
  field(SVST, "TTLIO21_TTLIO22")
  field(SVVL, "8")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolSources") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolSources")
  field(ZRST, "DIN11_DIN12")
  field(ZRVL, "1")
  field(ONST, "DIN21_DIN22")
  field(ONVL, "2")
  field(TWST, "IIN11_IIN12")
  field(TWVL, "3")
  field(THST, "IIN13_IIN14")
  field(THVL, "4")
  field(FRST, "IIN21_IIN22")
  field(FRVL, "5")
  field(FVST, "IIN23_IIN24")
  field(FVVL, "6")
  field(SXST, "TTLIO11_TTLIO12")
  field(SXVL, "7")
  field(SVST, "TTLIO21_TTLIO22")
  field(SVVL, "8")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolActivation")
  field(ZRST, "RisingEdgeA")
  field(ZRVL, "1")
  field(ONST, "FallingEdgeA")
  field(ONVL, "2")
  field(TWST, "AllEdgesA")
  field(TWVL, "3")
  field(THST, "AllEdgesAB")
  field(THVL, "4")
  field(FRST, "None")
  field(FRVL, "5")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolActivation")
  field(ZRST, "RisingEdgeA")
  field(ZRVL, "1")
  field(ONST, "FallingEdgeA")
  field(ONVL, "2")
  field(TWST, "AllEdgesA")
  field(TWVL, "3")
  field(THST, "AllEdgesAB")
  field(THVL, "4")
  field(FRST, "None")
  field(FRVL, "5")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolForwardDirection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolForwardDirection")
  field(ZRST, "A_Leads_B")
  field(ZRVL, "1")
  field(ONST, "B_Leads_A")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolForwardDirection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolForwardDirection")
  field(ZRST, "A_Leads_B")
  field(ZRVL, "1")
  field(ONST, "B_Leads_A")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolOutputMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolOutputMode")
  field(ZRST, "Unfiltered")
  field(ZRVL, "1")
  field(ONST, "ForwardOnly")
  field(ONVL, "2")
  field(TWST, "FirstPassForward")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolOutputMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolOutputMode")
  field(ZRST, "Unfiltered")
  field(ZRVL, "1")
  field(ONST, "ForwardOnly")
  field(ONVL, "2")
  field(TWST, "FirstPassForward")
  field(TWVL, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)QuadratureDecoderToolPosition_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolPosition")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)QuadratureDecoderToolDirection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolDirection")
  field(ZRST, "Forward")
  field(ZRVL, "0")
  field(ONST, "Backward")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)QuadratureDecoderToolDirection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolDirection")
  field(ZRST, "Forward")
  field(ZRVL, "0")
  field(ONST, "Backward")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longout, "$(P)$(R)QuadratureDecoderToolPositionReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QuadratureDecoderToolPositionReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DividerToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSelector")
  field(ZRST, "DIV1")
  field(ZRVL, "1")
  field(ONST, "DIV2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DividerToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSelector")
  field(ZRST, "DIV1")
  field(ZRVL, "1")
  field(ONST, "DIV2")
  field(ONVL, "2")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)DividerToolSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSource")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)DividerToolSource_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSource")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)DividerToolSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolSource")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)DividerToolEnableControl_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolEnableControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DividerToolEnableControl") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolEnableControl")
  field(ZRST, "Enable")
  field(ZRVL, "1")
  field(ONST, "Disable")
  field(ONVL, "2")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DividerToolDivisionFactor_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolDivisionFactor")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DividerToolDivisionFactor") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolDivisionFactor")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DividerToolInitialOffset_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolInitialOffset")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DividerToolInitialOffset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DividerToolInitialOffset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DelayToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSelector")
  field(ZRST, "DEL1")
  field(ZRVL, "1")
  field(ONST, "DEL2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DelayToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSelector")
  field(ZRST, "DEL1")
  field(ZRVL, "1")
  field(ONST, "DEL2")
  field(ONVL, "2")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)DelayToolSource1_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource1")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)DelayToolSource1_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)DelayToolSource1") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource1")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)DelayToolSource2_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource2")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)DelayToolSource2_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)DelayToolSource2") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolSource2")
#  field(ZRST, "NONE")
#  field(ZRVL, "0")
#  field(ONST, "LIN1")
#  field(ONVL, "1")
#  field(TWST, "LIN2")
#  field(TWVL, "2")
#  field(THST, "LIN3")
#  field(THVL, "3")
#  field(FRST, "LIN4")
#  field(FRVL, "4")
#  field(FVST, "LIN5")
#  field(FVVL, "5")
#  field(SXST, "LIN6")
#  field(SXVL, "6")
#  field(SVST, "LIN7")
#  field(SVVL, "7")
#  field(EIST, "LIN8")
#  field(EIVL, "8")
#  field(NIST, "QDC1")
#  field(NIVL, "9")
#  field(TEST, "QDC2")
#  field(TEVL, "10")
#  field(ELST, "MDV1")
#  field(ELVL, "11")
#  field(TVST, "MDV2")
#  field(TVVL, "12")
#  field(TTST, "DIV1")
#  field(TTVL, "13")
#  field(FTST, "DIV2")
#  field(FTVL, "14")
#  field(FFST, "DEL1_1")
#  field(FFVL, "15")
#  field(ZR1ST, "DEL1_2")
#  field(ZR1VL, "16")
#  field(ON1ST, "DEL2_1")
#  field(ON1VL, "17")
#  field(TW1ST, "DEL2_2")
#  field(TW1VL, "18")
#  field(TH1ST, "EIN1")
#  field(TH1VL, "19")
#  field(FR1ST, "EIN2")
#  field(FR1VL, "20")
#  field(FV1ST, "UserEvent1")
#  field(FV1VL, "21")
#  field(SX1ST, "UserEvent2")
#  field(SX1VL, "22")
#  field(SV1ST, "UserEvent3")
#  field(SV1VL, "23")
#  field(EI1ST, "UserEvent4")
#  field(EI1VL, "24")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)DelayToolClockSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolClockSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "TIME8NS")
  field(ONVL, "1")
  field(TWST, "TIME200NS")
  field(TWVL, "2")
  field(THST, "TIME1US")
  field(THVL, "3")
  field(FRST, "LIN1")
  field(FRVL, "4")
  field(FVST, "LIN2")
  field(FVVL, "5")
  field(SXST, "LIN3")
  field(SXVL, "6")
  field(SVST, "LIN4")
  field(SVVL, "7")
  field(EIST, "LIN5")
  field(EIVL, "8")
  field(NIST, "LIN6")
  field(NIVL, "9")
  field(TEST, "LIN7")
  field(TEVL, "10")
  field(ELST, "LIN8")
  field(ELVL, "11")
  field(TVST, "QDC1")
  field(TVVL, "12")
  field(TTST, "QDC2")
  field(TTVL, "13")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DelayToolClockSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolClockSource")
  field(ZRST, "NONE")
  field(ZRVL, "0")
  field(ONST, "TIME8NS")
  field(ONVL, "1")
  field(TWST, "TIME200NS")
  field(TWVL, "2")
  field(THST, "TIME1US")
  field(THVL, "3")
  field(FRST, "LIN1")
  field(FRVL, "4")
  field(FVST, "LIN2")
  field(FVVL, "5")
  field(SXST, "LIN3")
  field(SXVL, "6")
  field(SVST, "LIN4")
  field(SVVL, "7")
  field(EIST, "LIN5")
  field(EIVL, "8")
  field(NIST, "LIN6")
  field(NIVL, "9")
  field(TEST, "LIN7")
  field(TEVL, "10")
  field(ELST, "LIN8")
  field(ELVL, "11")
  field(TVST, "QDC1")
  field(TVVL, "12")
  field(TTST, "QDC2")
  field(TTVL, "13")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DelayToolDelayValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolDelayValue")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DelayToolDelayValue") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DelayToolDelayValue")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)EventInputToolSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolSelector")
  field(ZRST, "EIN1")
  field(ZRVL, "1")
  field(ONST, "EIN2")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)EventInputToolSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolSelector")
  field(ZRST, "EIN1")
  field(ZRVL, "1")
  field(ONST, "EIN2")
  field(ONVL, "2")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)EventInputToolSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolSource")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)EventInputToolSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolSource")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)EventInputToolActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolActivation")
  field(ZRST, "StartOfScan")
  field(ZRVL, "129")
  field(ONST, "EndOfScan")
  field(ONVL, "128")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)EventInputToolActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventInputToolActivation")
  field(ZRST, "StartOfScan")
  field(ZRVL, "129")
  field(ONST, "EndOfScan")
  field(ONVL, "128")
  field(DISA, "0")
}

record(longin, "$(P)$(R)InternalTime_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InternalTime")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PCIeMaxPayloadSizeSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxPayloadSizeSupported")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PCIeMaxPayloadSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxPayloadSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PCIeMaxReadRequestSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxReadRequestSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PCIeMaxLinkSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PCIeMaxLinkSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaxLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PCIeCurrentLinkSpeed_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeCurrentLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PCIeCurrentLinkSpeed") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeCurrentLinkSpeed")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "PCIeLinkSpeed250")
  field(ONVL, "1")
  field(TWST, "PCIeLinkSpeed500")
  field(TWVL, "2")
  field(THST, "PCIeLinkSpeed800")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PCIeMaximumLinkWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaximumLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PCIeMaximumLinkWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeMaximumLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PCIeNegotiatedLinkWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeNegotiatedLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PCIeNegotiatedLinkWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeNegotiatedLinkWidth")
  field(ZRST, "NotAvailable")
  field(ZRVL, "0")
  field(ONST, "x1")
  field(ONVL, "1")
  field(TWST, "x2")
  field(TWVL, "2")
  field(THST, "x4")
  field(THVL, "4")
  field(FRST, "x8")
  field(FRVL, "8")
  field(FVST, "x12")
  field(FVVL, "12")
  field(SXST, "x16")
  field(SXVL, "16")
  field(SVST, "x32")
  field(SVVL, "32")
  field(DISA, "0")
}

record(bi, "$(P)$(R)PCIeLinkSpeed2500MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed2500MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)PCIeLinkSpeed2500MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed2500MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)PCIeLinkSpeed5000MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed5000MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)PCIeLinkSpeed5000MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed5000MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)PCIeLinkSpeed8000MTpsSupported_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed8000MTpsSupported")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)PCIeLinkSpeed8000MTpsSupported") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PCIeLinkSpeed8000MTpsSupported")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)FanStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FanStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "NotOK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)FanStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FanStatus")
  field(ZRST, "OK")
  field(ZRVL, "0")
  field(ONST, "NotOK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TemperatureSensorSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TemperatureSensorSelector")
  field(ZRST, "Grabber")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TemperatureSensorSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TemperatureSensorSelector")
  field(ZRST, "Grabber")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Temperature+I_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Temperature+I")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Temperature+I") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Temperature+I")
  field(PREC, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AuxiliaryPowerInput_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AuxiliaryPowerInput")
  field(ZRST, "Unconnected")
  field(ZRVL, "0")
  field(ONST, "Connected")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AuxiliaryPowerInput") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AuxiliaryPowerInput")
  field(ZRST, "Unconnected")
  field(ZRVL, "0")
  field(ONST, "Connected")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AuxiliaryPower12VInput_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AuxiliaryPower12VInput")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AuxiliaryPower12VInput") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AuxiliaryPower12VInput")
  field(ZRST, "NotOK")
  field(ZRVL, "0")
  field(ONST, "OK")
  field(ONVL, "1")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)BoardCapabilities_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BoardCapabilities")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FirmwareBoardID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FirmwareBoardID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CPLDRevision_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CPLDRevision")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CPLDRevision") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CPLDRevision")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PreviousBootBank_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PreviousBootBank")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)PreviousBootBank") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PreviousBootBank")
  field(DISA, "0")
}

record(longin, "$(P)$(R)NextBootBank_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NextBootBank")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)NextBootBank") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NextBootBank")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CurrentBankSelect_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CurrentBankSelect")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CurrentBankSelect") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CurrentBankSelect")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CurrentBankSelectReadback_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CurrentBankSelectReadback")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CurrentBankSelectReadback") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CurrentBankSelectReadback")
  field(DISA, "0")
}

record(longin, "$(P)$(R)NextBankSelect_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NextBankSelect")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)NextBankSelect") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NextBankSelect")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SpiBankStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SpiBankStatus")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PotBankStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PotBankStatus")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)EventSelector+I_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+I")
#  field(ZRST, "LIN1")
#  field(ZRVL, "32768")
#  field(ONST, "LIN2")
#  field(ONVL, "32769")
#  field(TWST, "LIN3")
#  field(TWVL, "32770")
#  field(THST, "LIN4")
#  field(THVL, "32771")
#  field(FRST, "LIN5")
#  field(FRVL, "32772")
#  field(FVST, "LIN6")
#  field(FVVL, "32773")
#  field(SXST, "LIN7")
#  field(SXVL, "32774")
#  field(SVST, "LIN8")
#  field(SVVL, "32775")
#  field(EIST, "QDC1")
#  field(EIVL, "32896")
#  field(NIST, "QDC1Dir")
#  field(NIVL, "32897")
#  field(TEST, "QDC2")
#  field(TEVL, "32898")
#  field(ELST, "QDC2Dir")
#  field(ELVL, "32899")
#  field(TVST, "DIV1")
#  field(TVVL, "33024")
#  field(TTST, "DIV2")
#  field(TTVL, "33025")
#  field(FTST, "MDV1")
#  field(FTVL, "33152")
#  field(FFST, "MDV2")
#  field(FFVL, "33153")
#  field(ZR1ST, "DEL11")
#  field(ZR1VL, "33280")
#  field(ON1ST, "DEL12")
#  field(ON1VL, "33281")
#  field(TW1ST, "DEL21")
#  field(TW1VL, "33282")
#  field(TH1ST, "DEL22")
#  field(TH1VL, "33283")
#  field(FR1ST, "UserEvent1")
#  field(FR1VL, "33536")
#  field(FV1ST, "UserEvent2")
#  field(FV1VL, "33537")
#  field(SX1ST, "UserEvent3")
#  field(SX1VL, "33538")
#  field(SV1ST, "UserEvent4")
#  field(SV1VL, "33539")
#  field(EI1ST, "EIN1")
#  field(EI1VL, "33664")
#  field(NI1ST, "EIN2")
#  field(NI1VL, "33665")
#  field(TE1ST, "CrcErrorCxpA")
#  field(TE1VL, "33408")
#  field(EL1ST, "CrcErrorCxpB")
#  field(EL1VL, "33409")
#  field(TV1ST, "CrcErrorCxpC")
#  field(TV1VL, "33410")
#  field(TT1ST, "CrcErrorCxpD")
#  field(TT1VL, "33411")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventSelector+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventSelector+I") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+I")
#  field(ZRST, "LIN1")
#  field(ZRVL, "32768")
#  field(ONST, "LIN2")
#  field(ONVL, "32769")
#  field(TWST, "LIN3")
#  field(TWVL, "32770")
#  field(THST, "LIN4")
#  field(THVL, "32771")
#  field(FRST, "LIN5")
#  field(FRVL, "32772")
#  field(FVST, "LIN6")
#  field(FVVL, "32773")
#  field(SXST, "LIN7")
#  field(SXVL, "32774")
#  field(SVST, "LIN8")
#  field(SVVL, "32775")
#  field(EIST, "QDC1")
#  field(EIVL, "32896")
#  field(NIST, "QDC1Dir")
#  field(NIVL, "32897")
#  field(TEST, "QDC2")
#  field(TEVL, "32898")
#  field(ELST, "QDC2Dir")
#  field(ELVL, "32899")
#  field(TVST, "DIV1")
#  field(TVVL, "33024")
#  field(TTST, "DIV2")
#  field(TTVL, "33025")
#  field(FTST, "MDV1")
#  field(FTVL, "33152")
#  field(FFST, "MDV2")
#  field(FFVL, "33153")
#  field(ZR1ST, "DEL11")
#  field(ZR1VL, "33280")
#  field(ON1ST, "DEL12")
#  field(ON1VL, "33281")
#  field(TW1ST, "DEL21")
#  field(TW1VL, "33282")
#  field(TH1ST, "DEL22")
#  field(TH1VL, "33283")
#  field(FR1ST, "UserEvent1")
#  field(FR1VL, "33536")
#  field(FV1ST, "UserEvent2")
#  field(FV1VL, "33537")
#  field(SX1ST, "UserEvent3")
#  field(SX1VL, "33538")
#  field(SV1ST, "UserEvent4")
#  field(SV1VL, "33539")
#  field(EI1ST, "EIN1")
#  field(EI1VL, "33664")
#  field(NI1ST, "EIN2")
#  field(NI1VL, "33665")
#  field(TE1ST, "CrcErrorCxpA")
#  field(TE1VL, "33408")
#  field(EL1ST, "CrcErrorCxpB")
#  field(EL1VL, "33409")
#  field(TV1ST, "CrcErrorCxpC")
#  field(TV1VL, "33410")
#  field(TT1ST, "CrcErrorCxpD")
#  field(TT1VL, "33411")
#  field(DISA, "0")
#}

record(bi, "$(P)$(R)EventNotification+I_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotification+I")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)EventNotification+I") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotification+I")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)EventNotificationContext1+I_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext1+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext1+I") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EventNotificationContext2+I_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext2+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext2+I") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EventNotificationContext3+I_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext3+I_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext3+I") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+I")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "LIN1EventCount")
#  field(TWVL, "32768")
#  field(THST, "LIN2EventCount")
#  field(THVL, "32769")
#  field(FRST, "LIN3EventCount")
#  field(FRVL, "32770")
#  field(FVST, "LIN4EventCount")
#  field(FVVL, "32771")
#  field(SXST, "LIN5EventCount")
#  field(SXVL, "32772")
#  field(SVST, "LIN6EventCount")
#  field(SVVL, "32773")
#  field(EIST, "LIN7EventCount")
#  field(EIVL, "32774")
#  field(NIST, "LIN8EventCount")
#  field(NIVL, "32775")
#  field(TEST, "QDC1EventCount")
#  field(TEVL, "32896")
#  field(ELST, "QDC1DirEventCoun")
#  field(ELVL, "32897")
#  field(TVST, "QDC2EventCount")
#  field(TVVL, "32898")
#  field(TTST, "QDC2DirEventCoun")
#  field(TTVL, "32899")
#  field(FTST, "DIV1EventCount")
#  field(FTVL, "33024")
#  field(FFST, "DIV2EventCount")
#  field(FFVL, "33025")
#  field(ZR1ST, "MDV1EventCount")
#  field(ZR1VL, "33152")
#  field(ON1ST, "MDV2EventCount")
#  field(ON1VL, "33153")
#  field(TW1ST, "DEL11EventCount")
#  field(TW1VL, "33280")
#  field(TH1ST, "DEL12EventCount")
#  field(TH1VL, "33281")
#  field(FR1ST, "DEL21EventCount")
#  field(FR1VL, "33282")
#  field(FV1ST, "DEL22EventCount")
#  field(FV1VL, "33283")
#  field(SX1ST, "UserEvent1EventC")
#  field(SX1VL, "33536")
#  field(SV1ST, "UserEvent2EventC")
#  field(SV1VL, "33537")
#  field(EI1ST, "UserEvent3EventC")
#  field(EI1VL, "33538")
#  field(NI1ST, "UserEvent4EventC")
#  field(NI1VL, "33539")
#  field(TE1ST, "EIN1EventCount")
#  field(TE1VL, "33664")
#  field(EL1ST, "EIN2EventCount")
#  field(EL1VL, "33665")
#  field(TV1ST, "CrcErrorCxpAEven")
#  field(TV1VL, "33408")
#  field(TT1ST, "CrcErrorCxpBEven")
#  field(TT1VL, "33409")
#  field(FT1ST, "CrcErrorCxpCEven")
#  field(FT1VL, "33410")
#  field(FF1ST, "CrcErrorCxpDEven")
#  field(FF1VL, "33411")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)EventCount+I_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventCount+I")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)EventCountReset+I") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventCountReset+I")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)OemSafetyKeyVerification_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OemSafetyKeyVerification")
  field(ZRST, "ProgrammingKey")
  field(ZRVL, "1")
  field(ONST, "EncryptedKey")
  field(ONVL, "2")
  field(TWST, "ProgrammingKeyOr")
  field(TWVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)OemSafetyKeyVerification") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OemSafetyKeyVerification")
  field(ZRST, "ProgrammingKey")
  field(ZRVL, "1")
  field(ONST, "EncryptedKey")
  field(ONVL, "2")
  field(TWST, "ProgrammingKeyOr")
  field(TWVL, "3")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)CheckOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CheckOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)ProgramOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ProgramOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)EncryptedOemSafetyKey_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EncryptedOemSafetyKey")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, ./Euresys_Coaxlink_TLDevice_6_2_4.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)DeviceID+D_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceID+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceVendorName+D_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceVendorName+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceModelName+D_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceModelName+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceAccessStatus+D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceAccessStatus+D")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceAccessStatus+D") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceAccessStatus+D")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "ReadWrite")
  field(ONVL, "1")
  field(TWST, "ReadOnly")
  field(TWVL, "2")
  field(THST, "NoAccess")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StreamSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamSelector")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)StreamID+D_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamID+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CameraControlMethod_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CameraControlMethod")
  field(ZRST, "NC")
  field(ZRVL, "0")
  field(ONST, "RC")
  field(ONVL, "1")
  field(TWST, "RG")
  field(TWVL, "2")
  field(THST, "EXTERNAL")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CameraControlMethod") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CameraControlMethod")
  field(ZRST, "NC")
  field(ZRVL, "0")
  field(ONST, "RC")
  field(ONVL, "1")
  field(TWST, "RG")
  field(TWVL, "2")
  field(THST, "EXTERNAL")
  field(THVL, "3")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)C2CLinkConfiguration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))C2CLinkConfiguration")
  field(ZRST, "Disconnected")
  field(ZRVL, "3")
  field(ONST, "Master")
  field(ONVL, "1")
  field(TWST, "Slave")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)C2CLinkConfiguration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))C2CLinkConfiguration")
  field(ZRST, "Disconnected")
  field(ZRVL, "3")
  field(ONST, "Master")
  field(ONVL, "1")
  field(TWST, "Slave")
  field(TWVL, "2")
  field(DISA, "0")
}

record(bi, "$(P)$(R)ExposureReadoutOverlap_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureReadoutOverlap")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)ExposureReadoutOverlap") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureReadoutOverlap")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(ai, "$(P)$(R)ExposureRecoveryTime_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureRecoveryTime")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)ExposureRecoveryTime") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureRecoveryTime")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)ExposureTime+D_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTime+D")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)ExposureTime+D") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTime+D")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)StrobeDelay_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StrobeDelay")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)StrobeDelay") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StrobeDelay")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)StrobeDuration_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StrobeDuration")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)StrobeDuration") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StrobeDuration")
  field(PREC, "3")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)CycleTriggerSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CycleTriggerSource")
#  field(ZRST, "Immediate")
#  field(ZRVL, "254")
#  field(ONST, "StartCycle")
#  field(ONVL, "0")
#  field(TWST, "C2C")
#  field(TWVL, "255")
#  field(THST, "LIN1")
#  field(THVL, "1")
#  field(FRST, "LIN2")
#  field(FRVL, "2")
#  field(FVST, "LIN3")
#  field(FVVL, "3")
#  field(SXST, "LIN4")
#  field(SXVL, "4")
#  field(SVST, "LIN5")
#  field(SVVL, "5")
#  field(EIST, "LIN6")
#  field(EIVL, "6")
#  field(NIST, "LIN7")
#  field(NIVL, "7")
#  field(TEST, "LIN8")
#  field(TEVL, "8")
#  field(ELST, "QDC1")
#  field(ELVL, "9")
#  field(TVST, "QDC2")
#  field(TVVL, "10")
#  field(TTST, "MDV1")
#  field(TTVL, "11")
#  field(FTST, "MDV2")
#  field(FTVL, "12")
#  field(FFST, "DIV1")
#  field(FFVL, "13")
#  field(ZR1ST, "DIV2")
#  field(ZR1VL, "14")
#  field(ON1ST, "DEL1_1")
#  field(ON1VL, "15")
#  field(TW1ST, "DEL1_2")
#  field(TW1VL, "16")
#  field(TH1ST, "DEL2_1")
#  field(TH1VL, "17")
#  field(FR1ST, "DEL2_2")
#  field(FR1VL, "18")
#  field(FV1ST, "EIN1")
#  field(FV1VL, "19")
#  field(SX1ST, "EIN2")
#  field(SX1VL, "20")
#  field(SV1ST, "UserEvent1")
#  field(SV1VL, "21")
#  field(EI1ST, "UserEvent2")
#  field(EI1VL, "22")
#  field(NI1ST, "UserEvent3")
#  field(NI1VL, "23")
#  field(TE1ST, "UserEvent4")
#  field(TE1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)CycleTriggerSource_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CycleTriggerSource")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)CycleTriggerSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CycleTriggerSource")
#  field(ZRST, "Immediate")
#  field(ZRVL, "254")
#  field(ONST, "StartCycle")
#  field(ONVL, "0")
#  field(TWST, "C2C")
#  field(TWVL, "255")
#  field(THST, "LIN1")
#  field(THVL, "1")
#  field(FRST, "LIN2")
#  field(FRVL, "2")
#  field(FVST, "LIN3")
#  field(FVVL, "3")
#  field(SXST, "LIN4")
#  field(SXVL, "4")
#  field(SVST, "LIN5")
#  field(SVVL, "5")
#  field(EIST, "LIN6")
#  field(EIVL, "6")
#  field(NIST, "LIN7")
#  field(NIVL, "7")
#  field(TEST, "LIN8")
#  field(TEVL, "8")
#  field(ELST, "QDC1")
#  field(ELVL, "9")
#  field(TVST, "QDC2")
#  field(TVVL, "10")
#  field(TTST, "MDV1")
#  field(TTVL, "11")
#  field(FTST, "MDV2")
#  field(FTVL, "12")
#  field(FFST, "DIV1")
#  field(FFVL, "13")
#  field(ZR1ST, "DIV2")
#  field(ZR1VL, "14")
#  field(ON1ST, "DEL1_1")
#  field(ON1VL, "15")
#  field(TW1ST, "DEL1_2")
#  field(TW1VL, "16")
#  field(TH1ST, "DEL2_1")
#  field(TH1VL, "17")
#  field(FR1ST, "DEL2_2")
#  field(FR1VL, "18")
#  field(FV1ST, "EIN1")
#  field(FV1VL, "19")
#  field(SX1ST, "EIN2")
#  field(SX1VL, "20")
#  field(SV1ST, "UserEvent1")
#  field(SV1VL, "21")
#  field(EI1ST, "UserEvent2")
#  field(EI1VL, "22")
#  field(NI1ST, "UserEvent3")
#  field(NI1VL, "23")
#  field(TE1ST, "UserEvent4")
#  field(TE1VL, "24")
#  field(DISA, "0")
#}

record(ai, "$(P)$(R)CycleTargetPeriod_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CycleTargetPeriod")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)CycleTargetPeriod") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CycleTargetPeriod")
  field(PREC, "3")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StartCycle") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartCycle")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CycleLostTriggerCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CycleLostTriggerCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CycleLostTriggerCountReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CycleLostTriggerCountReset")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)StartOfSequenceTriggerSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartOfSequenceTriggerSource")
#  field(ZRST, "Immediate")
#  field(ZRVL, "254")
#  field(ONST, "StartSequence")
#  field(ONVL, "0")
#  field(TWST, "LIN1")
#  field(TWVL, "1")
#  field(THST, "LIN2")
#  field(THVL, "2")
#  field(FRST, "LIN3")
#  field(FRVL, "3")
#  field(FVST, "LIN4")
#  field(FVVL, "4")
#  field(SXST, "LIN5")
#  field(SXVL, "5")
#  field(SVST, "LIN6")
#  field(SVVL, "6")
#  field(EIST, "LIN7")
#  field(EIVL, "7")
#  field(NIST, "LIN8")
#  field(NIVL, "8")
#  field(TEST, "QDC1")
#  field(TEVL, "9")
#  field(ELST, "QDC2")
#  field(ELVL, "10")
#  field(TVST, "MDV1")
#  field(TVVL, "11")
#  field(TTST, "MDV2")
#  field(TTVL, "12")
#  field(FTST, "DIV1")
#  field(FTVL, "13")
#  field(FFST, "DIV2")
#  field(FFVL, "14")
#  field(ZR1ST, "DEL1_1")
#  field(ZR1VL, "15")
#  field(ON1ST, "DEL1_2")
#  field(ON1VL, "16")
#  field(TW1ST, "DEL2_1")
#  field(TW1VL, "17")
#  field(TH1ST, "DEL2_2")
#  field(TH1VL, "18")
#  field(FR1ST, "EIN1")
#  field(FR1VL, "19")
#  field(FV1ST, "EIN2")
#  field(FV1VL, "20")
#  field(SX1ST, "UserEvent1")
#  field(SX1VL, "21")
#  field(SV1ST, "UserEvent2")
#  field(SV1VL, "22")
#  field(EI1ST, "UserEvent3")
#  field(EI1VL, "23")
#  field(NI1ST, "UserEvent4")
#  field(NI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)StartOfSequenceTriggerSource_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartOfSequenceTriggerSource")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)StartOfSequenceTriggerSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartOfSequenceTriggerSource")
#  field(ZRST, "Immediate")
#  field(ZRVL, "254")
#  field(ONST, "StartSequence")
#  field(ONVL, "0")
#  field(TWST, "LIN1")
#  field(TWVL, "1")
#  field(THST, "LIN2")
#  field(THVL, "2")
#  field(FRST, "LIN3")
#  field(FRVL, "3")
#  field(FVST, "LIN4")
#  field(FVVL, "4")
#  field(SXST, "LIN5")
#  field(SXVL, "5")
#  field(SVST, "LIN6")
#  field(SVVL, "6")
#  field(EIST, "LIN7")
#  field(EIVL, "7")
#  field(NIST, "LIN8")
#  field(NIVL, "8")
#  field(TEST, "QDC1")
#  field(TEVL, "9")
#  field(ELST, "QDC2")
#  field(ELVL, "10")
#  field(TVST, "MDV1")
#  field(TVVL, "11")
#  field(TTST, "MDV2")
#  field(TTVL, "12")
#  field(FTST, "DIV1")
#  field(FTVL, "13")
#  field(FFST, "DIV2")
#  field(FFVL, "14")
#  field(ZR1ST, "DEL1_1")
#  field(ZR1VL, "15")
#  field(ON1ST, "DEL1_2")
#  field(ON1VL, "16")
#  field(TW1ST, "DEL2_1")
#  field(TW1VL, "17")
#  field(TH1ST, "DEL2_2")
#  field(TH1VL, "18")
#  field(FR1ST, "EIN1")
#  field(FR1VL, "19")
#  field(FV1ST, "EIN2")
#  field(FV1VL, "20")
#  field(SX1ST, "UserEvent1")
#  field(SX1VL, "21")
#  field(SV1ST, "UserEvent2")
#  field(SV1VL, "22")
#  field(EI1ST, "UserEvent3")
#  field(EI1VL, "23")
#  field(NI1ST, "UserEvent4")
#  field(NI1VL, "24")
#  field(DISA, "0")
#}

record(longout, "$(P)$(R)StartSequence") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartSequence")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AbortSequence") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AbortSequence")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)CxpLinkConfiguration_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpLinkConfiguration")
#  field(ZRST, "CXP1_X1")
#  field(ZRVL, "65576")
#  field(ONST, "CXP2_X1")
#  field(ONVL, "65584")
#  field(TWST, "CXP3_X1")
#  field(TWVL, "65592")
#  field(THST, "CXP5_X1")
#  field(THVL, "65600")
#  field(FRST, "CXP6_X1")
#  field(FRVL, "65608")
#  field(FVST, "CXP1_X2")
#  field(FVVL, "131112")
#  field(SXST, "CXP2_X2")
#  field(SXVL, "131120")
#  field(SVST, "CXP3_X2")
#  field(SVVL, "131128")
#  field(EIST, "CXP5_X2")
#  field(EIVL, "131136")
#  field(NIST, "CXP6_X2")
#  field(NIVL, "131144")
#  field(TEST, "CXP1_X3")
#  field(TEVL, "196648")
#  field(ELST, "CXP2_X3")
#  field(ELVL, "196656")
#  field(TVST, "CXP3_X3")
#  field(TVVL, "196664")
#  field(TTST, "CXP5_X3")
#  field(TTVL, "196672")
#  field(FTST, "CXP6_X3")
#  field(FTVL, "196680")
#  field(FFST, "CXP1_X4")
#  field(FFVL, "262184")
#  field(ZR1ST, "CXP2_X4")
#  field(ZR1VL, "262192")
#  field(ON1ST, "CXP3_X4")
#  field(ON1VL, "262200")
#  field(TW1ST, "CXP5_X4")
#  field(TW1VL, "262208")
#  field(TH1ST, "CXP6_X4")
#  field(TH1VL, "262216")
#  field(FR1ST, "CXP1_X8")
#  field(FR1VL, "524328")
#  field(FV1ST, "CXP2_X8")
#  field(FV1VL, "524336")
#  field(SX1ST, "CXP3_X8")
#  field(SX1VL, "524344")
#  field(SV1ST, "CXP5_X8")
#  field(SV1VL, "524352")
#  field(EI1ST, "CXP6_X8")
#  field(EI1VL, "524360")
#  field(NI1ST, "Preferred")
#  field(NI1VL, "0")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)CxpLinkConfiguration_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpLinkConfiguration")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)CxpLinkConfiguration") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpLinkConfiguration")
#  field(ZRST, "CXP1_X1")
#  field(ZRVL, "65576")
#  field(ONST, "CXP2_X1")
#  field(ONVL, "65584")
#  field(TWST, "CXP3_X1")
#  field(TWVL, "65592")
#  field(THST, "CXP5_X1")
#  field(THVL, "65600")
#  field(FRST, "CXP6_X1")
#  field(FRVL, "65608")
#  field(FVST, "CXP1_X2")
#  field(FVVL, "131112")
#  field(SXST, "CXP2_X2")
#  field(SXVL, "131120")
#  field(SVST, "CXP3_X2")
#  field(SVVL, "131128")
#  field(EIST, "CXP5_X2")
#  field(EIVL, "131136")
#  field(NIST, "CXP6_X2")
#  field(NIVL, "131144")
#  field(TEST, "CXP1_X3")
#  field(TEVL, "196648")
#  field(ELST, "CXP2_X3")
#  field(ELVL, "196656")
#  field(TVST, "CXP3_X3")
#  field(TVVL, "196664")
#  field(TTST, "CXP5_X3")
#  field(TTVL, "196672")
#  field(FTST, "CXP6_X3")
#  field(FTVL, "196680")
#  field(FFST, "CXP1_X4")
#  field(FFVL, "262184")
#  field(ZR1ST, "CXP2_X4")
#  field(ZR1VL, "262192")
#  field(ON1ST, "CXP3_X4")
#  field(ON1VL, "262200")
#  field(TW1ST, "CXP5_X4")
#  field(TW1VL, "262208")
#  field(TH1ST, "CXP6_X4")
#  field(TH1VL, "262216")
#  field(FR1ST, "CXP1_X8")
#  field(FR1VL, "524328")
#  field(FV1ST, "CXP2_X8")
#  field(FV1VL, "524336")
#  field(SX1ST, "CXP3_X8")
#  field(SX1VL, "524344")
#  field(SV1ST, "CXP5_X8")
#  field(SV1VL, "524352")
#  field(EI1ST, "CXP6_X8")
#  field(EI1VL, "524360")
#  field(NI1ST, "Preferred")
#  field(NI1VL, "0")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)CxpLinkConfigurationOption_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpLinkConfigurationOption")
  field(ZRST, "AlwaysWrite")
  field(ZRVL, "0")
  field(ONST, "WriteIfDifferent")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpLinkConfigurationOption") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpLinkConfigurationOption")
  field(ZRST, "AlwaysWrite")
  field(ZRVL, "0")
  field(ONST, "WriteIfDifferent")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpHostConnectionBase_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionBase")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpHostConnectionBase") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionBase")
  field(ZRST, "A")
  field(ZRVL, "0")
  field(ONST, "B")
  field(ONVL, "1")
  field(TWST, "C")
  field(TWVL, "2")
  field(THST, "D")
  field(THVL, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CxpHostConnectionCount+D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpHostConnectionCount+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)CxpTriggerMessageFormat_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpTriggerMessageFormat")
  field(ZRST, "Pulse")
  field(ZRVL, "1")
  field(ONST, "RisingEdge")
  field(ONVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)CxpTriggerMessageFormat") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpTriggerMessageFormat")
  field(ZRST, "Pulse")
  field(ZRVL, "1")
  field(ONST, "RisingEdge")
  field(ONVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)CxpTriggerAckTimeout_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpTriggerAckTimeout")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)CxpTriggerAckTimeout") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpTriggerAckTimeout")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CxpTriggerMaxResendCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpTriggerMaxResendCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpTriggerMaxResendCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpTriggerMaxResendCount")
  field(DISA, "0")
}

record(longout, "$(P)$(R)CxpPacketArbiterReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CxpPacketArbiterReset")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)EventSelector+D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+D")
  field(ZRST, "CameraTriggerRis")
  field(ZRVL, "32833")
  field(ONST, "CameraTriggerFal")
  field(ONVL, "32834")
  field(TWST, "StrobeRisingEdge")
  field(TWVL, "32835")
  field(THST, "StrobeFallingEdg")
  field(THVL, "32836")
  field(FRST, "AllowNextCycle")
  field(FRVL, "32837")
  field(FVST, "DiscardedCicTrig")
  field(FVVL, "32838")
  field(SXST, "PendingCicTrigge")
  field(SXVL, "32839")
  field(SVST, "CxpTriggerAck")
  field(SVVL, "32840")
  field(EIST, "CxpTriggerResend")
  field(EIVL, "32841")
  field(NIST, "Trigger")
  field(NIVL, "32842")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)EventSelector+D") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+D")
  field(ZRST, "CameraTriggerRis")
  field(ZRVL, "32833")
  field(ONST, "CameraTriggerFal")
  field(ONVL, "32834")
  field(TWST, "StrobeRisingEdge")
  field(TWVL, "32835")
  field(THST, "StrobeFallingEdg")
  field(THVL, "32836")
  field(FRST, "AllowNextCycle")
  field(FRVL, "32837")
  field(FVST, "DiscardedCicTrig")
  field(FVVL, "32838")
  field(SXST, "PendingCicTrigge")
  field(SXVL, "32839")
  field(SVST, "CxpTriggerAck")
  field(SVVL, "32840")
  field(EIST, "CxpTriggerResend")
  field(EIVL, "32841")
  field(NIST, "Trigger")
  field(NIVL, "32842")
  field(DISA, "0")
}

record(bi, "$(P)$(R)EventNotification+D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotification+D")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)EventNotification+D") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotification+D")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)EventNotificationContext1+D_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+D")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext1+D_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext1+D") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+D")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EventNotificationContext2+D_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+D")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext2+D_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext2+D") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+D")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EventNotificationContext3+D_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+D")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext3+D_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext3+D") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+D")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)EventCount+D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventCount+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)EventCountReset+D") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventCountReset+D")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)ErrorSelector+D_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorSelector+D")
#  field(ZRST, "All")
#  field(ZRVL, "255")
#  field(ONST, "StreamPacketSize")
#  field(ONVL, "0")
#  field(TWST, "StreamPacketFifo")
#  field(TWVL, "2")
#  field(THST, "CameraTriggerOve")
#  field(THVL, "3")
#  field(FRST, "DidNotReceiveTri")
#  field(FRVL, "4")
#  field(FVST, "TriggerPacketRet")
#  field(FVVL, "5")
#  field(SXST, "InputStreamFifoH")
#  field(SXVL, "6")
#  field(SVST, "InputStreamFifoF")
#  field(SVVL, "7")
#  field(EIST, "ImageHeaderError")
#  field(EIVL, "8")
#  field(NIST, "MigAxiWriteError")
#  field(NIVL, "9")
#  field(TEST, "MigAxiReadError")
#  field(TEVL, "10")
#  field(ELST, "PacketWithUnexpe")
#  field(ELVL, "11")
#  field(TVST, "StreamPacketCrcE")
#  field(TVVL, "12")
#  field(TTST, "StreamPacketCrcE")
#  field(TTVL, "13")
#  field(FTST, "StreamPacketCrcE")
#  field(FTVL, "14")
#  field(FFST, "StreamPacketCrcE")
#  field(FFVL, "15")
#  field(ZR1ST, "StartOfScanSkipp")
#  field(ZR1VL, "16")
#  field(ON1ST, "PrematureEndOfSc")
#  field(ON1VL, "17")
#  field(TW1ST, "ExternalTriggerR")
#  field(TW1VL, "18")
#  field(TH1ST, "Unknown")
#  field(TH1VL, "254")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)ErrorSelector+D_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorSelector+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)ErrorSelector+D") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorSelector+D")
#  field(ZRST, "All")
#  field(ZRVL, "255")
#  field(ONST, "StreamPacketSize")
#  field(ONVL, "0")
#  field(TWST, "StreamPacketFifo")
#  field(TWVL, "2")
#  field(THST, "CameraTriggerOve")
#  field(THVL, "3")
#  field(FRST, "DidNotReceiveTri")
#  field(FRVL, "4")
#  field(FVST, "TriggerPacketRet")
#  field(FVVL, "5")
#  field(SXST, "InputStreamFifoH")
#  field(SXVL, "6")
#  field(SVST, "InputStreamFifoF")
#  field(SVVL, "7")
#  field(EIST, "ImageHeaderError")
#  field(EIVL, "8")
#  field(NIST, "MigAxiWriteError")
#  field(NIVL, "9")
#  field(TEST, "MigAxiReadError")
#  field(TEVL, "10")
#  field(ELST, "PacketWithUnexpe")
#  field(ELVL, "11")
#  field(TVST, "StreamPacketCrcE")
#  field(TVVL, "12")
#  field(TTST, "StreamPacketCrcE")
#  field(TTVL, "13")
#  field(FTST, "StreamPacketCrcE")
#  field(FTVL, "14")
#  field(FFST, "StreamPacketCrcE")
#  field(FFVL, "15")
#  field(ZR1ST, "StartOfScanSkipp")
#  field(ZR1VL, "16")
#  field(ON1ST, "PrematureEndOfSc")
#  field(ON1VL, "17")
#  field(TW1ST, "ExternalTriggerR")
#  field(TW1VL, "18")
#  field(TH1ST, "Unknown")
#  field(TH1VL, "254")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)ErrorCount+D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorCount+D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ErrorCountReset+D") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorCountReset+D")
  field(DISA, "0")
}

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, ./Adimec_Q12A180CXP_1_1_3.edl, P=$(P),R=$(R)

record(longin, "$(P)$(R)Standard_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Standard")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Standard") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Standard")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Revision_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Revision")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Revision") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Revision")
  field(DISA, "0")
}

record(longin, "$(P)$(R)XmlManifestSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlManifestSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)XmlManifestSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlManifestSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)XmlManifestSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlManifestSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)XmlManifestSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlManifestSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)XmlVersion_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)XmlVersion") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlVersion")
  field(DISA, "0")
}

record(longin, "$(P)$(R)XmlSchemeVersion_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlSchemeVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)XmlSchemeVersion") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlSchemeVersion")
  field(DISA, "0")
}

record(longin, "$(P)$(R)XmlUrlAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlUrlAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)XmlUrlAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))XmlUrlAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Iidc2Address_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Iidc2Address")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Iidc2Address") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Iidc2Address")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ConnectionReset_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConnectionReset")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ConnectionReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConnectionReset")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DeviceConnectionID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceConnectionID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceConnectionID") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceConnectionID")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MasterHostConnectionID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MasterHostConnectionID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)MasterHostConnectionID") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MasterHostConnectionID")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ControlPacketSizeMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ControlPacketSizeMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ControlPacketSizeMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ControlPacketSizeMax")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamPacketSizeMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamPacketSizeMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StreamPacketSizeMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamPacketSizeMax")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)ConnectionConfig_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConnectionConfig")
  field(ZRST, "CXP3_X1")
  field(ZRVL, "65592")
  field(ONST, "CXP6_X1")
  field(ONVL, "65608")
  field(TWST, "CXP3_X2")
  field(TWVL, "131128")
  field(THST, "CXP6_X2")
  field(THVL, "131144")
  field(FRST, "CXP3_X4")
  field(FRVL, "262200")
  field(FVST, "CXP6_X4")
  field(FVVL, "262216")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)ConnectionConfig") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConnectionConfig")
  field(ZRST, "CXP3_X1")
  field(ZRVL, "65592")
  field(ONST, "CXP6_X1")
  field(ONVL, "65608")
  field(TWST, "CXP3_X2")
  field(TWVL, "131128")
  field(THST, "CXP6_X2")
  field(THVL, "131144")
  field(FRST, "CXP3_X4")
  field(FRVL, "262200")
  field(FVST, "CXP6_X4")
  field(FVVL, "262216")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)ConnectionConfigDefault_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConnectionConfigDefault")
  field(ZRST, "CXP3_X1")
  field(ZRVL, "65592")
  field(ONST, "CXP6_X1")
  field(ONVL, "65608")
  field(TWST, "CXP3_X2")
  field(TWVL, "131128")
  field(THST, "CXP6_X2")
  field(THVL, "131144")
  field(FRST, "CXP3_X4")
  field(FRVL, "262200")
  field(FVST, "CXP6_X4")
  field(FVVL, "262216")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)ConnectionConfigDefault") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConnectionConfigDefault")
  field(ZRST, "CXP3_X1")
  field(ZRVL, "65592")
  field(ONST, "CXP6_X1")
  field(ONVL, "65608")
  field(TWST, "CXP3_X2")
  field(TWVL, "131128")
  field(THST, "CXP6_X2")
  field(THVL, "131144")
  field(FRST, "CXP3_X4")
  field(FRVL, "262200")
  field(FVST, "CXP6_X4")
  field(FVVL, "262216")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TestMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TestMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "Mode1")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)TestErrorCountSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestErrorCountSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TestErrorCountSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestErrorCountSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)TestErrorCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestErrorCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TestErrorCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestErrorCount")
  field(DISA, "0")
}

record(longin, "$(P)$(R)TestPacketCountTx_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestPacketCountTx")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TestPacketCountTx") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestPacketCountTx")
  field(DISA, "0")
}

record(longin, "$(P)$(R)TestPacketCountRx_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestPacketCountRx")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TestPacketCountRx") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestPacketCountRx")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)ElectricalCompliancyTest_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ElectricalCompliancyTest")
  field(ZRST, "NormalOperatingM")
  field(ZRVL, "0")
  field(ONST, "CXP3_X1")
  field(ONVL, "65592")
  field(TWST, "CXP6_X1")
  field(TWVL, "65608")
  field(THST, "CXP3_X2")
  field(THVL, "131128")
  field(FRST, "CXP6_X2")
  field(FRVL, "131144")
  field(FVST, "CXP3_X4")
  field(FVVL, "262200")
  field(SXST, "CXP6_X4")
  field(SXVL, "262216")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)ElectricalCompliancyTest") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ElectricalCompliancyTest")
  field(ZRST, "NormalOperatingM")
  field(ZRVL, "0")
  field(ONST, "CXP3_X1")
  field(ONVL, "65592")
  field(TWST, "CXP6_X1")
  field(TWVL, "65608")
  field(THST, "CXP3_X2")
  field(THVL, "131128")
  field(FRST, "CXP6_X2")
  field(FRVL, "131144")
  field(FVST, "CXP3_X4")
  field(FVVL, "262200")
  field(SXST, "CXP6_X4")
  field(SXVL, "262216")
  field(DISA, "0")
}

record(longin, "$(P)$(R)WidthAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WidthAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)WidthAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WidthAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)HeightAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HeightAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)HeightAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HeightAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionModeAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionModeAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionModeAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionModeAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionStartAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStartAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionStartAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStartAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionStopAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStopAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionStopAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStopAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PixelFormatAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormatAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)PixelFormatAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormatAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DeviceTapGeometryAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTapGeometryAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DeviceTapGeometryAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTapGeometryAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Image1StreamIDAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Image1StreamIDAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Image1StreamIDAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Image1StreamIDAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)HsUpconnection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HsUpconnection")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)HsUpconnection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HsUpconnection")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceVendorName+R_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceVendorName+R")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceModelName+R_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceModelName+R")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceManufacturerInfo_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceManufacturerInfo")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceFirmwareVersion_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceFirmwareVersion")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceSerialNumber_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceSerialNumber")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)DeviceUserID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceUserID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceIndicatorMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceIndicatorMode")
  field(ZRST, "Inactive")
  field(ZRVL, "0")
  field(ONST, "Active")
  field(ONVL, "1")
  field(TWST, "ErrorStatus")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceIndicatorMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceIndicatorMode")
  field(ZRST, "Inactive")
  field(ZRVL, "0")
  field(ONST, "Active")
  field(ONVL, "1")
  field(TWST, "ErrorStatus")
  field(TWVL, "2")
  field(DISA, "0")
}

record(longin, "$(P)$(R)BuiltInTest_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BuiltInTest")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BuiltInTest") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BuiltInTest")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorTemperature_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorTemperature")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorTemperature") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorTemperature")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Width+R_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Width+R")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Width+R") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Width+R")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Height+R_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Height+R")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Height+R") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Height+R")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorWidth")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorWidth")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorHeight")
  field(DISA, "0")
}

record(longin, "$(P)$(R)WidthMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WidthMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)WidthMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WidthMax")
  field(DISA, "0")
}

record(longin, "$(P)$(R)HeightMax_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HeightMax")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)HeightMax") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HeightMax")
  field(DISA, "0")
}

record(longin, "$(P)$(R)OffsetX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)OffsetX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)OffsetY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)OffsetY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OffsetY")
  field(DISA, "0")
}

record(bi, "$(P)$(R)ReverseX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ReverseX")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)ReverseX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ReverseX")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)ReverseY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ReverseY")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)ReverseY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ReverseY")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)PixelFormat+R_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat+R")
  field(ZRST, "Mono8")
  field(ZRVL, "17301505")
  field(ONST, "Mono10")
  field(ONVL, "17825795")
  field(TWST, "BayerBG8")
  field(TWVL, "17301515")
  field(THST, "BayerBG10")
  field(THVL, "17825807")
  field(FRST, "BayerGB8")
  field(FRVL, "17301514")
  field(FVST, "BayerGB10")
  field(FVVL, "17825806")
  field(SXST, "BayerGR8")
  field(SXVL, "17301512")
  field(SVST, "BayerGR10")
  field(SVVL, "17825804")
  field(EIST, "BayerRG8")
  field(EIVL, "17301513")
  field(NIST, "BayerRG10")
  field(NIVL, "17825805")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PixelFormat+R") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat+R")
  field(ZRST, "Mono8")
  field(ZRVL, "17301505")
  field(ONST, "Mono10")
  field(ONVL, "17825795")
  field(TWST, "BayerBG8")
  field(TWVL, "17301515")
  field(THST, "BayerBG10")
  field(THVL, "17825807")
  field(FRST, "BayerGB8")
  field(FRVL, "17301514")
  field(FVST, "BayerGB10")
  field(FVVL, "17825806")
  field(SXST, "BayerGR8")
  field(SXVL, "17301512")
  field(SVST, "BayerGR10")
  field(SVVL, "17825804")
  field(EIST, "BayerRG8")
  field(EIVL, "17301513")
  field(NIST, "BayerRG10")
  field(NIVL, "17825805")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TestImageSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestImageSelector")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "AdimecTestPatter")
  field(ONVL, "65536")
  field(TWST, "UniformVideoLeve")
  field(TWVL, "65538")
  field(THST, "DiagonalPattern")
  field(THVL, "65539")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TestImageSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestImageSelector")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "AdimecTestPatter")
  field(ONVL, "65536")
  field(TWST, "UniformVideoLeve")
  field(TWVL, "65538")
  field(THST, "DiagonalPattern")
  field(THVL, "65539")
  field(DISA, "0")
}

record(longin, "$(P)$(R)TestImageVideoLevel_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestImageVideoLevel")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)TestImageVideoLevel") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TestImageVideoLevel")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DeviceTapGeometry_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTapGeometry")
  field(ZRST, "Geometry_1X_1Y")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DeviceTapGeometry") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DeviceTapGeometry")
  field(ZRST, "Geometry_1X_1Y")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Image1StreamID_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Image1StreamID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Image1StreamID") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Image1StreamID")
  field(DISA, "0")
}

record(bi, "$(P)$(R)CrosshairOverlay_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CrosshairOverlay")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)CrosshairOverlay") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CrosshairOverlay")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)AcquisitionMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionMode")
  field(ZRST, "Continuous")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)AcquisitionMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionMode")
  field(ZRST, "Continuous")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionStart") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStart")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionStop") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionStop")
  field(DISA, "0")
}

record(ai, "$(P)$(R)AcquisitionFrameRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFrameRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)AcquisitionFrameRate") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFrameRate")
  field(PREC, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)AcquisitionFramePeriod_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFramePeriod")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)AcquisitionFramePeriod") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFramePeriod")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AcquisitionFramePeriodRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFramePeriodRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionFramePeriodRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionFramePeriodRaw")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AcquisitionMaxFrameRate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquisitionMaxFrameRate")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerSource_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSource")
  field(ZRST, "Trigger")
  field(ZRVL, "16")
  field(ONST, "IO_Connector")
  field(ONVL, "65536")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerSource") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerSource")
  field(ZRST, "Trigger")
  field(ZRVL, "16")
  field(ONST, "IO_Connector")
  field(ONVL, "65536")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)TriggerActivation_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerActivation")
  field(ZRST, "FallingEdge")
  field(ZRVL, "0")
  field(ONST, "RisingEdge")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)TriggerActivation") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerActivation")
  field(ZRST, "FallingEdge")
  field(ZRVL, "0")
  field(ONST, "RisingEdge")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)ExposureMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureMode")
  field(ZRST, "Timed")
  field(ZRVL, "0")
  field(ONST, "TriggerWidth")
  field(ONVL, "1")
  field(TWST, "SyncControlMode")
  field(TWVL, "256")
  field(THST, "TimedTriggerCont")
  field(THVL, "512")
  field(FRST, "TimedSync")
  field(FRVL, "768")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)ExposureMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureMode")
  field(ZRST, "Timed")
  field(ZRVL, "0")
  field(ONST, "TriggerWidth")
  field(ONVL, "1")
  field(TWST, "SyncControlMode")
  field(TWVL, "256")
  field(THST, "TimedTriggerCont")
  field(THVL, "512")
  field(FRST, "TimedSync")
  field(FRVL, "768")
  field(DISA, "0")
}

record(ai, "$(P)$(R)ExposureTime+R_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTime+R")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)ExposureTime+R") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTime+R")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ExposureTimeRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTimeRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ExposureTimeRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExposureTimeRaw")
  field(DISA, "0")
}

record(longin, "$(P)$(R)InterfaceUtilization_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceUtilization")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)InterfaceUtilization") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InterfaceUtilization")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)FlashStrobeMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeMode")
  field(ZRST, "Disabled")
  field(ZRVL, "0")
  field(ONST, "Automatic")
  field(ONVL, "1")
  field(TWST, "Programmed")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)FlashStrobeMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeMode")
  field(ZRST, "Disabled")
  field(ZRVL, "0")
  field(ONST, "Automatic")
  field(ONVL, "1")
  field(TWST, "Programmed")
  field(TWVL, "2")
  field(DISA, "0")
}

record(ai, "$(P)$(R)FlashStrobeDuration_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeDuration")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)FlashStrobeDuration") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeDuration")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FlashStrobeDurationRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeDurationRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)FlashStrobeDurationRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeDurationRaw")
  field(DISA, "0")
}

record(ai, "$(P)$(R)FlashStrobeDelay_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeDelay")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)FlashStrobeDelay") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeDelay")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FlashStrobeDelayRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeDelayRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)FlashStrobeDelayRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeDelayRaw")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)FlashStrobeActiveState_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeActiveState")
  field(ZRST, "NonConducting")
  field(ZRVL, "0")
  field(ONST, "Conducting")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)FlashStrobeActiveState") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FlashStrobeActiveState")
  field(ZRST, "NonConducting")
  field(ZRVL, "0")
  field(ONST, "Conducting")
  field(ONVL, "1")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)HDR_Mode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HDR_Mode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "MultiSlope2Slope")
  field(ONVL, "32")
  field(TWST, "MultiSlope3Slope")
  field(TWVL, "33")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)HDR_Mode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HDR_Mode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "MultiSlope2Slope")
  field(ONVL, "32")
  field(TWST, "MultiSlope3Slope")
  field(TWVL, "33")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SecondExposureTimeRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SecondExposureTimeRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SecondExposureTimeRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SecondExposureTimeRaw")
  field(DISA, "0")
}

record(ai, "$(P)$(R)SecondExposureTime_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SecondExposureTime")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)SecondExposureTime") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SecondExposureTime")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MultiSlopeNodeSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiSlopeNodeSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)MultiSlopeNodeSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiSlopeNodeSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MultiSlopeLevel_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiSlopeLevel")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)MultiSlopeLevel") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiSlopeLevel")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MultiSlopeTime_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiSlopeTime")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)MultiSlopeTime") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MultiSlopeTime")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)GainSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GainSelector")
  field(ZRST, "All")
  field(ZRVL, "0")
  field(ONST, "Red")
  field(ONVL, "1")
  field(TWST, "Green")
  field(TWVL, "2")
  field(THST, "Blue")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)GainSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GainSelector")
  field(ZRST, "All")
  field(ZRVL, "0")
  field(ONST, "Red")
  field(ONVL, "1")
  field(TWST, "Green")
  field(TWVL, "2")
  field(THST, "Blue")
  field(THVL, "3")
  field(DISA, "0")
}

record(ai, "$(P)$(R)Gain+R_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Gain+R")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)Gain+R") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Gain+R")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)GainRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GainRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)GainRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GainRaw")
  field(DISA, "0")
}

record(ai, "$(P)$(R)BlackLevel_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BlackLevel")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ao, "$(P)$(R)BlackLevel") {
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BlackLevel")
  field(PREC, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)BlackLevelRaw_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BlackLevelRaw")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BlackLevelRaw") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BlackLevelRaw")
  field(DISA, "0")
}

record(longin, "$(P)$(R)WhiteBalanceWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceWidth")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)WhiteBalanceWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceWidth")
  field(DISA, "0")
}

record(longin, "$(P)$(R)WhiteBalanceHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)WhiteBalanceHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceHeight")
  field(DISA, "0")
}

record(longin, "$(P)$(R)WhiteBalanceOffsetX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceOffsetX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)WhiteBalanceOffsetX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceOffsetX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)WhiteBalanceOffsetY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceOffsetY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)WhiteBalanceOffsetY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceOffsetY")
  field(DISA, "0")
}

record(longout, "$(P)$(R)WhiteBalanceCalibrate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceCalibrate")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)WhiteBalanceStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceStatus")
  field(ZRST, "WhiteBalanceIdle")
  field(ZRVL, "0")
  field(ONST, "WhiteBalanceStar")
  field(ONVL, "1")
  field(TWST, "WhiteBalanceCali")
  field(TWVL, "2")
  field(THST, "WhiteBalance_Sen")
  field(THVL, "3")
  field(FRST, "WhiteBalance_Col")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)WhiteBalanceStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WhiteBalanceStatus")
  field(ZRST, "WhiteBalanceIdle")
  field(ZRVL, "0")
  field(ONST, "WhiteBalanceStar")
  field(ONVL, "1")
  field(TWST, "WhiteBalanceCali")
  field(TWVL, "2")
  field(THST, "WhiteBalance_Sen")
  field(THVL, "3")
  field(FRST, "WhiteBalance_Col")
  field(FRVL, "4")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)SensorBitDepth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorBitDepth")
  field(ZRST, "Resolution_8_Bit")
  field(ZRVL, "0")
  field(ONST, "Resolution_10_Bi")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)SensorBitDepth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorBitDepth")
  field(ZRST, "Resolution_8_Bit")
  field(ZRVL, "0")
  field(ONST, "Resolution_10_Bi")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ProgrammableGainAmplifier_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ProgrammableGainAmplifier")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ProgrammableGainAmplifier") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ProgrammableGainAmplifier")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)UserMode_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserMode")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)UserModeUpdate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserModeUpdate")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AdvancedParameterSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AdvancedParameterSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AdvancedParameterSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AdvancedParameterSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)AdvancedParameter_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AdvancedParameter")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AdvancedParameter") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AdvancedParameter")
  field(DISA, "0")
}

record(longout, "$(P)$(R)AdvancedParameterSave") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AdvancedParameterSave")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ConfigurationInfo_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConfigurationInfo")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ConfigurationInfo") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConfigurationInfo")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ConfigurationFactoryInfo_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConfigurationFactoryInfo")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ConfigurationFactoryInfo") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ConfigurationFactoryInfo")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)SensorRegisterReadWriteMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterReadWriteMode")
  field(ZRST, "DirectRegisterAc")
  field(ZRVL, "0")
  field(ONST, "NonVolatileRegis")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)SensorRegisterReadWriteMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterReadWriteMode")
  field(ZRST, "DirectRegisterAc")
  field(ZRVL, "0")
  field(ONST, "NonVolatileRegis")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorRegisterNonVolatileReadSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterNonVolatileReadSelector")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorRegisterNonVolatileReadSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterNonVolatileReadSelector")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorRegisterNonVolatileListSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterNonVolatileListSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorRegisterNonVolatileListSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterNonVolatileListSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorRegisterAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorRegisterAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorRegisterSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorRegisterSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)SensorRegisterData_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterData")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorRegisterData") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterData")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorRegisterRead") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterRead")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorRegisterWrite") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterWrite")
  field(DISA, "0")
}

record(longout, "$(P)$(R)SensorRegisterRemove") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SensorRegisterRemove")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FPGA_RegisterAddress_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_RegisterAddress")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)FPGA_RegisterAddress") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_RegisterAddress")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FPGA_RegisterSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_RegisterSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)FPGA_RegisterSize") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_RegisterSize")
  field(DISA, "0")
}

record(longin, "$(P)$(R)FPGA_RegisterData_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_RegisterData")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)FPGA_RegisterData") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_RegisterData")
  field(DISA, "0")
}

record(longout, "$(P)$(R)FPGA_RegisterRead") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_RegisterRead")
  field(DISA, "0")
}

record(longout, "$(P)$(R)FPGA_RegisterWrite") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_RegisterWrite")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)CustomerSpecialID_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CustomerSpecialID")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(bi, "$(P)$(R)LUTEnable_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTEnable")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)LUTEnable") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTEnable")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LUTIndex_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTIndex")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LUTIndex") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTIndex")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LUTValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTValue")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LUTValue") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTValue")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LUTStart") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTStart")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LUTEnd") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTEnd")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LUTStatus_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTStatus")
  field(ZRST, "LUT_Idle")
  field(ZRVL, "0")
  field(ONST, "LUT_Started")
  field(ONVL, "1")
  field(TWST, "LUT_Restarted")
  field(TWVL, "2")
  field(THST, "LUT_TooMuchEntri")
  field(THVL, "3")
  field(FRST, "LUT_NotEnoughEnt")
  field(FRVL, "4")
  field(FVST, "LUT_Stored")
  field(FVVL, "5")
  field(SXST, "LUT_NotStarted")
  field(SXVL, "6")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LUTStatus") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTStatus")
  field(ZRST, "LUT_Idle")
  field(ZRVL, "0")
  field(ONST, "LUT_Started")
  field(ONVL, "1")
  field(TWST, "LUT_Restarted")
  field(TWVL, "2")
  field(THST, "LUT_TooMuchEntri")
  field(THVL, "3")
  field(FRST, "LUT_NotEnoughEnt")
  field(FRVL, "4")
  field(FVST, "LUT_Stored")
  field(FVVL, "5")
  field(SXST, "LUT_NotStarted")
  field(SXVL, "6")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PayloadSize+R_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PayloadSize+R")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)PayloadSize+R") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PayloadSize+R")
  field(DISA, "0")
}

record(bi, "$(P)$(R)DefectPixelCorrectionEnable_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelCorrectionEnable")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)DefectPixelCorrectionEnable") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelCorrectionEnable")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DefectPixelTestMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "MarkDefectsWhite")
  field(ONVL, "1")
  field(TWST, "MarkDefectsBlack")
  field(TWVL, "2")
  field(THST, "ShowDefectsAsWhi")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DefectPixelTestMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelTestMode")
  field(ZRST, "Off")
  field(ZRVL, "0")
  field(ONST, "MarkDefectsWhite")
  field(ONVL, "1")
  field(TWST, "MarkDefectsBlack")
  field(TWVL, "2")
  field(THST, "ShowDefectsAsWhi")
  field(THVL, "3")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DefectPixelTotal_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelTotal")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelTotal") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelTotal")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DefectPixelSelect_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelSelect")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelSelect") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelSelect")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DefectPixelReadX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelReadX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelReadX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelReadX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DefectPixelReadY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelReadY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelReadY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelReadY")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DefectPixelWriteX_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelWriteX")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelWriteX") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelWriteX")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DefectPixelWriteY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelWriteY")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelWriteY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelWriteY")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelAdd") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelAdd")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelRemove") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelRemove")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelClearAll") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelClearAll")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelSave") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelSave")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelRestore") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelRestore")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelRestoreFactory") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelRestoreFactory")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DefectPixelSaveAsFactoryDefault") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DefectPixelSaveAsFactoryDefault")
  field(DISA, "0")
}

record(bi, "$(P)$(R)DF_BlackClamp_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_BlackClamp")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)DF_BlackClamp") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_BlackClamp")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)DF_ColumnOffsetCorrection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_ColumnOffsetCorrection")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)DF_ColumnOffsetCorrection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_ColumnOffsetCorrection")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DF_Calibrate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_Calibrate")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)DF_Status_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_Status")
  field(ZRST, "DF_CalibrateOK")
  field(ZRVL, "0")
  field(ONST, "DF_CalibrateErro")
  field(ONVL, "1")
  field(TWST, "DF_SensorNotDark")
  field(TWVL, "2")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)DF_Status") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_Status")
  field(ZRST, "DF_CalibrateOK")
  field(ZRVL, "0")
  field(ONST, "DF_CalibrateErro")
  field(ONVL, "1")
  field(TWST, "DF_SensorNotDark")
  field(TWVL, "2")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DF_RestoreFactory") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_RestoreFactory")
  field(DISA, "0")
}

record(longout, "$(P)$(R)DF_SaveAsFactoryDefault") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_SaveAsFactoryDefault")
  field(DISA, "0")
}

record(bi, "$(P)$(R)DF_IsUserCalibration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_IsUserCalibration")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)DF_IsUserCalibration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DF_IsUserCalibration")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)BF_ColumnGainCorrection_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_ColumnGainCorrection")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)BF_ColumnGainCorrection") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_ColumnGainCorrection")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)BF_AutoLevelAdjust_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_AutoLevelAdjust")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)BF_AutoLevelAdjust") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_AutoLevelAdjust")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longin, "$(P)$(R)BF_CalibrationVideoLevel_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_CalibrationVideoLevel")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BF_CalibrationVideoLevel") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_CalibrationVideoLevel")
  field(DISA, "0")
}

record(bi, "$(P)$(R)BF_OutputImagesDuringCalibration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_OutputImagesDuringCalibration")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)BF_OutputImagesDuringCalibration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_OutputImagesDuringCalibration")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BF_Calibrate") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_Calibrate")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)BF_Status_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_Status")
  field(ZRST, "BF_CalibrateOK")
  field(ZRVL, "0")
  field(ONST, "BF_UnderExposed")
  field(ONVL, "1")
  field(TWST, "BF_OverExposed")
  field(TWVL, "2")
  field(THST, "BF_UnstableExpos")
  field(THVL, "3")
  field(FRST, "BF_CalibrateErro")
  field(FRVL, "4")
  field(FVST, "BF_WrongExposure")
  field(FVVL, "5")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)BF_Status") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_Status")
  field(ZRST, "BF_CalibrateOK")
  field(ZRVL, "0")
  field(ONST, "BF_UnderExposed")
  field(ONVL, "1")
  field(TWST, "BF_OverExposed")
  field(TWVL, "2")
  field(THST, "BF_UnstableExpos")
  field(THVL, "3")
  field(FRST, "BF_CalibrateErro")
  field(FRVL, "4")
  field(FVST, "BF_WrongExposure")
  field(FVVL, "5")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BF_RestoreFactory") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_RestoreFactory")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BF_SaveAsFactoryDefault") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_SaveAsFactoryDefault")
  field(DISA, "0")
}

record(bi, "$(P)$(R)BF_IsUserCalibration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_IsUserCalibration")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)BF_IsUserCalibration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BF_IsUserCalibration")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)CFG_FACTORY_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CFG_FACTORY")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)CFG_FACTORY") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CFG_FACTORY")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)CFG_COLOR_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CFG_COLOR")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)CFG_COLOR") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CFG_COLOR")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bi, "$(P)$(R)CFG_MONO_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CFG_MONO")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)CFG_MONO") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CFG_MONO")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)UserSetSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserSetSelector")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(ONST, "UserSet1")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)UserSetSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserSetSelector")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(ONST, "UserSet1")
  field(ONVL, "1")
  field(DISA, "0")
}

record(longout, "$(P)$(R)UserSetLoad") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserSetLoad")
  field(DISA, "0")
}

record(longout, "$(P)$(R)UserSetSave") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UserSetSave")
  field(DISA, "0")
}

# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address
#% gui, $(PORT), edmtab, ./Euresys_Coaxlink_TLDataStream_6_2_4.edl, P=$(P),R=$(R)

record(stringin, "$(P)$(R)StreamID+S_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamID+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)StreamType_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)StreamType") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamType")
  field(ZRST, "CXP")
  field(ZRVL, "0")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)PixelFormat+S_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat+S")
#  field(ZRST, "BayerBG10pmsb")
#  field(ZRVL, "834")
#  field(ONST, "BayerBG12pmsb")
#  field(ONVL, "835")
#  field(TWST, "BayerBG14pmsb")
#  field(TWVL, "836")
#  field(THST, "BayerGB10pmsb")
#  field(THVL, "818")
#  field(FRST, "BayerGB12pmsb")
#  field(FRVL, "819")
#  field(FVST, "BayerGB14pmsb")
#  field(FVVL, "820")
#  field(SXST, "BayerGR10pmsb")
#  field(SXVL, "786")
#  field(SVST, "BayerGR12pmsb")
#  field(SVVL, "787")
#  field(EIST, "BayerGR14pmsb")
#  field(EIVL, "788")
#  field(NIST, "BayerRG10pmsb")
#  field(NIVL, "802")
#  field(TEST, "BayerRG12pmsb")
#  field(TEVL, "803")
#  field(ELST, "BayerRG14pmsb")
#  field(ELVL, "804")
#  field(TVST, "Mono10pmsb")
#  field(TVVL, "258")
#  field(TTST, "Mono12pmsb")
#  field(TTVL, "259")
#  field(FTST, "Mono14pmsb")
#  field(FTVL, "260")
#  field(FFST, "RGB10pmsb")
#  field(FFVL, "1026")
#  field(ZR1ST, "RGB12pmsb")
#  field(ZR1VL, "1027")
#  field(ON1ST, "RGB14pmsb")
#  field(ON1VL, "1028")
#  field(TW1ST, "RGBa10pmsb")
#  field(TW1VL, "1282")
#  field(TH1ST, "RGBa12pmsb")
#  field(TH1VL, "1283")
#  field(FR1ST, "RGBa14pmsb")
#  field(FR1VL, "1284")
#  field(FV1ST, "YCbCr601_10pmsb")
#  field(FV1VL, "1842")
#  field(SX1ST, "YCbCr601_12pmsb")
#  field(SX1VL, "1843")
#  field(SV1ST, "YCbCr601_14pmsb")
#  field(SV1VL, "1844")
#  field(EI1ST, "YCbCr601_16")
#  field(EI1VL, "1845")
#  field(NI1ST, "YCbCr601_411_10p")
#  field(NI1VL, "1810")
#  field(TE1ST, "YCbCr601_411_12p")
#  field(TE1VL, "1811")
#  field(EL1ST, "YCbCr601_411_14p")
#  field(EL1VL, "1812")
#  field(TV1ST, "YCbCr601_411_16")
#  field(TV1VL, "1813")
#  field(TT1ST, "YCbCr601_411_8")
#  field(TT1VL, "1809")
#  field(FT1ST, "YCbCr601_422_10p")
#  field(FT1VL, "1826")
#  field(FF1ST, "YCbCr601_422_12p")
#  field(FF1VL, "1827")
#  field(ZR2ST, "YCbCr601_422_14p")
#  field(ZR2VL, "1828")
#  field(ON2ST, "YCbCr601_422_16")
#  field(ON2VL, "1829")
#  field(TW2ST, "YCbCr601_8")
#  field(TW2VL, "1841")
#  field(TH2ST, "YCbCr709_10pmsb")
#  field(TH2VL, "2098")
#  field(FR2ST, "YCbCr709_12pmsb")
#  field(FR2VL, "2099")
#  field(FV2ST, "YCbCr709_14pmsb")
#  field(FV2VL, "2100")
#  field(SX2ST, "YCbCr709_16")
#  field(SX2VL, "2101")
#  field(SV2ST, "YCbCr709_411_10p")
#  field(SV2VL, "2066")
#  field(EI2ST, "YCbCr709_411_12p")
#  field(EI2VL, "2067")
#  field(NI2ST, "YCbCr709_411_14p")
#  field(NI2VL, "2068")
#  field(TE2ST, "YCbCr709_411_16")
#  field(TE2VL, "2069")
#  field(EL2ST, "YCbCr709_411_8")
#  field(EL2VL, "2065")
#  field(TV2ST, "YCbCr709_422_10p")
#  field(TV2VL, "2082")
#  field(TT2ST, "YCbCr709_422_12p")
#  field(TT2VL, "2083")
#  field(FT2ST, "YCbCr709_422_14p")
#  field(FT2VL, "2084")
#  field(FF2ST, "YCbCr709_422_16")
#  field(FF2VL, "2085")
#  field(ZR3ST, "YCbCr709_8")
#  field(ZR3VL, "2097")
#  field(ON3ST, "YUV10pmsb")
#  field(ON3VL, "1586")
#  field(TW3ST, "YUV12pmsb")
#  field(TW3VL, "1587")
#  field(TH3ST, "YUV14pmsb")
#  field(TH3VL, "1588")
#  field(FR3ST, "YUV16")
#  field(FR3VL, "1589")
#  field(FV3ST, "YUV411_10pmsb")
#  field(FV3VL, "1554")
#  field(SX3ST, "YUV411_12pmsb")
#  field(SX3VL, "1555")
#  field(SV3ST, "YUV411_14pmsb")
#  field(SV3VL, "1556")
#  field(EI3ST, "YUV411_16")
#  field(EI3VL, "1557")
#  field(NI3ST, "YUV411_8")
#  field(NI3VL, "1553")
#  field(TE3ST, "YUV422_10pmsb")
#  field(TE3VL, "1570")
#  field(EL3ST, "YUV422_12pmsb")
#  field(EL3VL, "1571")
#  field(TV3ST, "YUV422_14pmsb")
#  field(TV3VL, "1572")
#  field(TT3ST, "YUV422_16")
#  field(TT3VL, "1573")
#  field(FT3ST, "YUV8")
#  field(FT3VL, "1585")
#  field(FF3ST, "BayerBG10")
#  field(FF3VL, "17825807")
#  field(ZR4ST, "BayerBG10p")
#  field(ZR4VL, "17432658")
#  field(ON4ST, "BayerBG10Packed")
#  field(ON4VL, "17563689")
#  field(TW4ST, "BayerBG12")
#  field(TW4VL, "17825811")
#  field(TH4ST, "BayerBG12p")
#  field(TH4VL, "17563731")
#  field(FR4ST, "BayerBG12Packed")
#  field(FR4VL, "17563693")
#  field(FV4ST, "BayerBG14")
#  field(FV4VL, "2165309463")
#  field(SX4ST, "BayerBG16")
#  field(SX4VL, "17825841")
#  field(SV4ST, "BayerBG8")
#  field(SV4VL, "17301515")
#  field(EI4ST, "BayerGB10")
#  field(EI4VL, "17825806")
#  field(NI4ST, "BayerGB10p")
#  field(NI4VL, "17432660")
#  field(TE4ST, "BayerGB10Packed")
#  field(TE4VL, "17563688")
#  field(EL4ST, "BayerGB12")
#  field(EL4VL, "17825810")
#  field(TV4ST, "BayerGB12p")
#  field(TV4VL, "17563733")
#  field(TT4ST, "BayerGB12Packed")
#  field(TT4VL, "17563692")
#  field(FT4ST, "BayerGB14")
#  field(FT4VL, "2165309462")
#  field(FF4ST, "BayerGB16")
#  field(FF4VL, "17825840")
#  field(ZR5ST, "BayerGB8")
#  field(ZR5VL, "17301514")
#  field(ON5ST, "BayerGR10")
#  field(ON5VL, "17825804")
#  field(TW5ST, "BayerGR10p")
#  field(TW5VL, "17432662")
#  field(TH5ST, "BayerGR10Packed")
#  field(TH5VL, "17563686")
#  field(FR5ST, "BayerGR12")
#  field(FR5VL, "17825808")
#  field(FV5ST, "BayerGR12p")
#  field(FV5VL, "17563735")
#  field(SX5ST, "BayerGR12Packed")
#  field(SX5VL, "17563690")
#  field(SV5ST, "BayerGR14")
#  field(SV5VL, "2165309460")
#  field(EI5ST, "BayerGR16")
#  field(EI5VL, "17825838")
#  field(NI5ST, "BayerGR8")
#  field(NI5VL, "17301512")
#  field(TE5ST, "BayerRG10")
#  field(TE5VL, "17825805")
#  field(EL5ST, "BayerRG10p")
#  field(EL5VL, "17432664")
#  field(TV5ST, "BayerRG10Packed")
#  field(TV5VL, "17563687")
#  field(TT5ST, "BayerRG12")
#  field(TT5VL, "17825809")
#  field(FT5ST, "BayerRG12p")
#  field(FT5VL, "17563737")
#  field(FF5ST, "BayerRG12Packed")
#  field(FF5VL, "17563691")
#  field(ZR6ST, "BayerRG14")
#  field(ZR6VL, "2165309461")
#  field(ON6ST, "BayerRG16")
#  field(ON6VL, "17825839")
#  field(TW6ST, "BayerRG8")
#  field(TW6VL, "17301513")
#  field(TH6ST, "BGR10")
#  field(TH6VL, "36700185")
#  field(FR6ST, "BGR10p")
#  field(FR6VL, "35520584")
#  field(FV6ST, "BGR12")
#  field(FV6VL, "36700187")
#  field(SX6ST, "BGR12p")
#  field(SX6VL, "35913801")
#  field(SV6ST, "BGR14")
#  field(SV6VL, "36700234")
#  field(EI6ST, "BGR16")
#  field(EI6VL, "36700235")
#  field(NI6ST, "BGR565p")
#  field(NI6VL, "34603062")
#  field(TE6ST, "BGR8")
#  field(TE6VL, "35127317")
#  field(EL6ST, "BGR8a32")
#  field(EL6VL, "2183135255")
#  field(TV6ST, "BGRa10")
#  field(TV6VL, "37748812")
#  field(TT6ST, "BGRa10p")
#  field(TT6VL, "36175949")
#  field(FT6ST, "BGRa12")
#  field(FT6VL, "37748814")
#  field(FF6ST, "BGRa12p")
#  field(FF6VL, "36700239")
#  field(ZR7ST, "BGRa14")
#  field(ZR7VL, "37748816")
#  field(ON7ST, "BGRa16")
#  field(ON7VL, "37748817")
#  field(TW7ST, "BGRa8")
#  field(TW7VL, "35651607")
#  field(TH7ST, "BiColorBGRG10")
#  field(TH7VL, "35651753")
#  field(FR7ST, "BiColorBGRG10p")
#  field(FR7VL, "34865322")
#  field(FV7ST, "BiColorBGRG12")
#  field(FV7VL, "35651757")
#  field(SX7ST, "BiColorBGRG12p")
#  field(SX7VL, "35127470")
#  field(SV7ST, "BiColorBGRG8")
#  field(SV7VL, "34603174")
#  field(EI7ST, "BiColorRGBG10")
#  field(EI7VL, "35651751")
#  field(NI7ST, "BiColorRGBG10p")
#  field(NI7VL, "34865320")
#  field(TE7ST, "BiColorRGBG12")
#  field(TE7VL, "35651755")
#  field(EL7ST, "BiColorRGBG12p")
#  field(EL7VL, "35127468")
#  field(TV7ST, "BiColorRGBG8")
#  field(TV7VL, "34603173")
#  field(TT7ST, "Confidence1")
#  field(TT7VL, "17301700")
#  field(FT7ST, "Confidence16")
#  field(FT7VL, "17825991")
#  field(FF7ST, "Confidence1p")
#  field(FF7VL, "16842949")
#  field(ZR8ST, "Confidence32f")
#  field(ZR8VL, "18874568")
#  field(ON8ST, "Confidence8")
#  field(ON8VL, "17301702")
#  field(TW8ST, "Coord3D_A16")
#  field(TW8VL, "17825974")
#  field(TH8ST, "Coord3D_A32f")
#  field(TH8VL, "18874557")
#  field(FR8ST, "Coord3D_A8")
#  field(FR8VL, "17301679")
#  field(FV8ST, "Coord3D_ABC16")
#  field(FV8VL, "36700345")
#  field(SX8ST, "Coord3D_ABC16_Pl")
#  field(SX8VL, "36700346")
#  field(SV8ST, "Coord3D_ABC32f")
#  field(SV8VL, "39846080")
#  field(EI8ST, "Coord3D_ABC32f_P")
#  field(EI8VL, "39846081")
#  field(NI8ST, "Coord3D_ABC8")
#  field(NI8VL, "35127474")
#  field(TE8ST, "Coord3D_ABC8_Pla")
#  field(TE8VL, "35127475")
#  field(EL8ST, "Coord3D_AC16")
#  field(EL8VL, "35651771")
#  field(TV8ST, "Coord3D_AC16_Pla")
#  field(TV8VL, "35651772")
#  field(TT8ST, "Coord3D_AC32f")
#  field(TT8VL, "37748930")
#  field(FT8ST, "Coord3D_AC32f_Pl")
#  field(FT8VL, "37748931")
#  field(FF8ST, "Coord3D_AC8")
#  field(FF8VL, "34603188")
#  field(ZR9ST, "Coord3D_AC8_Plan")
#  field(ZR9VL, "34603189")
#  field(ON9ST, "Coord3D_B16")
#  field(ON9VL, "17825975")
#  field(TW9ST, "Coord3D_B32f")
#  field(TW9VL, "18874558")
#  field(TH9ST, "Coord3D_B8")
#  field(TH9VL, "17301680")
#  field(FR9ST, "Coord3D_C16")
#  field(FR9VL, "17825976")
#  field(FV9ST, "Coord3D_C32f")
#  field(FV9VL, "18874559")
#  field(SX9ST, "Coord3D_C8")
#  field(SX9VL, "17301681")
#  field(SV9ST, "Mono10")
#  field(SV9VL, "17825795")
#  field(EI9ST, "Mono10p")
#  field(EI9VL, "17432646")
#  field(NI9ST, "Mono10Packed")
#  field(NI9VL, "17563652")
#  field(TE9ST, "Mono12")
#  field(TE9VL, "17825797")
#  field(EL9ST, "Mono12p")
#  field(EL9VL, "17563719")
#  field(TV9ST, "Mono12Packed")
#  field(TV9VL, "17563654")
#  field(TT9ST, "Mono14")
#  field(TT9VL, "17825829")
#  field(FT9ST, "Mono16")
#  field(FT9VL, "17825799")
#  field(FF9ST, "Mono1p")
#  field(FF9VL, "16842807")
#  field(ZR10ST, "Mono2p")
#  field(ZR10VL, "16908344")
#  field(ON10ST, "Mono4p")
#  field(ON10VL, "17039417")
#  field(TW10ST, "Mono8")
#  field(TW10VL, "17301505")
#  field(TH10ST, "Mono8s")
#  field(TH10VL, "17301506")
#  field(FR10ST, "RGB10")
#  field(FR10VL, "36700184")
#  field(FV10ST, "RGB10_Planar")
#  field(FV10VL, "36700194")
#  field(SX10ST, "RGB10p")
#  field(SX10VL, "35520604")
#  field(SV10ST, "RGB10p32")
#  field(SV10VL, "35651613")
#  field(EI10ST, "RGB10V1Packed")
#  field(EI10VL, "35651612")
#  field(NI10ST, "RGB12")
#  field(NI10VL, "36700186")
#  field(TE10ST, "RGB12_Planar")
#  field(TE10VL, "36700195")
#  field(EL10ST, "RGB12p")
#  field(EL10VL, "35913821")
#  field(TV10ST, "RGB12V1Packed")
#  field(TV10VL, "35913780")
#  field(TT10ST, "RGB14")
#  field(TT10VL, "36700254")
#  field(FT10ST, "RGB16")
#  field(FT10VL, "36700211")
#  field(FF10ST, "RGB16_Planar")
#  field(FF10VL, "36700196")
#  field(ZR11ST, "RGB565p")
#  field(ZR11VL, "34603061")
#  field(ON11ST, "RGB8")
#  field(ON11VL, "35127316")
#  field(TW11ST, "RGB8_Planar")
#  field(TW11VL, "35127329")
#  field(TH11ST, "RGB8a32")
#  field(TH11VL, "2183135254")
#  field(FR11ST, "RGBa10")
#  field(FR11VL, "37748831")
#  field(FV11ST, "RGBa10p")
#  field(FV11VL, "36175968")
#  field(SX11ST, "RGBa12")
#  field(SX11VL, "37748833")
#  field(SV11ST, "RGBa12p")
#  field(SV11VL, "36700258")
#  field(EI11ST, "RGBa14")
#  field(EI11VL, "37748835")
#  field(NI11ST, "RGBa16")
#  field(NI11VL, "37748836")
#  field(TE11ST, "RGBa8")
#  field(TE11VL, "35651606")
#  field(EL11ST, "SCF1WBWG10")
#  field(EL11VL, "17825896")
#  field(TV11ST, "SCF1WBWG10p")
#  field(TV11VL, "17432681")
#  field(TT11ST, "SCF1WBWG12")
#  field(TT11VL, "17825898")
#  field(FT11ST, "SCF1WBWG12p")
#  field(FT11VL, "17563755")
#  field(FF11ST, "SCF1WBWG14")
#  field(FF11VL, "17825900")
#  field(ZR12ST, "SCF1WBWG16")
#  field(ZR12VL, "17825901")
#  field(ON12ST, "SCF1WBWG8")
#  field(ON12VL, "17301607")
#  field(TW12ST, "SCF1WGWB10")
#  field(TW12VL, "17825903")
#  field(TH12ST, "SCF1WGWB10p")
#  field(TH12VL, "17432688")
#  field(FR12ST, "SCF1WGWB12")
#  field(FR12VL, "17825905")
#  field(FV12ST, "SCF1WGWB12p")
#  field(FV12VL, "17563762")
#  field(SX12ST, "SCF1WGWB14")
#  field(SX12VL, "17825907")
#  field(SV12ST, "SCF1WGWB16")
#  field(SV12VL, "17825908")
#  field(EI12ST, "SCF1WGWB8")
#  field(EI12VL, "17301614")
#  field(NI12ST, "SCF1WGWR10")
#  field(NI12VL, "17825910")
#  field(TE12ST, "SCF1WGWR10p")
#  field(TE12VL, "17432695")
#  field(EL12ST, "SCF1WGWR12")
#  field(EL12VL, "17825912")
#  field(TV12ST, "SCF1WGWR12p")
#  field(TV12VL, "17563769")
#  field(TT12ST, "SCF1WGWR14")
#  field(TT12VL, "17825914")
#  field(FT12ST, "SCF1WGWR16")
#  field(FT12VL, "17825915")
#  field(FF12ST, "SCF1WGWR8")
#  field(FF12VL, "17301621")
#  field(ZR13ST, "SCF1WRWG10")
#  field(ZR13VL, "17825917")
#  field(ON13ST, "SCF1WRWG10p")
#  field(ON13VL, "17432702")
#  field(TW13ST, "SCF1WRWG12")
#  field(TW13VL, "17825919")
#  field(TH13ST, "SCF1WRWG12p")
#  field(TH13VL, "17563776")
#  field(FR13ST, "SCF1WRWG14")
#  field(FR13VL, "17825921")
#  field(FV13ST, "SCF1WRWG16")
#  field(FV13VL, "17825922")
#  field(SX13ST, "SCF1WRWG8")
#  field(SX13VL, "17301628")
#  field(SV13ST, "YCbCr10_CbYCr")
#  field(SV13VL, "36700291")
#  field(EI13ST, "YCbCr10p_CbYCr")
#  field(EI13VL, "35520644")
#  field(NI13ST, "YCbCr12_CbYCr")
#  field(NI13VL, "36700293")
#  field(TE13ST, "YCbCr12p_CbYCr")
#  field(TE13VL, "35913862")
#  field(EL13ST, "YCbCr411_8")
#  field(EL13VL, "34340954")
#  field(TV13ST, "YCbCr411_8_CbYYC")
#  field(TV13VL, "34340924")
#  field(TT13ST, "YCbCr422_10")
#  field(TT13VL, "35651685")
#  field(FT13ST, "YCbCr422_10_CbYC")
#  field(FT13VL, "35651737")
#  field(FF13ST, "YCbCr422_10p")
#  field(FF13VL, "34865287")
#  field(ZR14ST, "YCbCr422_10p_CbY")
#  field(ZR14VL, "34865306")
#  field(ON14ST, "YCbCr422_12")
#  field(ON14VL, "35651686")
#  field(TW14ST, "YCbCr422_12_CbYC")
#  field(TW14VL, "35651739")
#  field(TH14ST, "YCbCr422_12p")
#  field(TH14VL, "35127432")
#  field(FR14ST, "YCbCr422_12p_CbY")
#  field(FR14VL, "35127452")
#  field(FV14ST, "YCbCr422_8")
#  field(FV14VL, "34603067")
#  field(SX14ST, "YCbCr422_8_CbYCr")
#  field(SX14VL, "34603075")
#  field(SV14ST, "YCbCr601_10_CbYC")
#  field(SV14VL, "36700297")
#  field(EI14ST, "YCbCr601_10p_CbY")
#  field(EI14VL, "35520650")
#  field(NI14ST, "YCbCr601_12_CbYC")
#  field(NI14VL, "36700299")
#  field(TE14ST, "YCbCr601_12p_CbY")
#  field(TE14VL, "35913868")
#  field(EL14ST, "YCbCr601_411_8_C")
#  field(EL14VL, "34340927")
#  field(TV14ST, "YCbCr601_422_10")
#  field(TV14VL, "35651725")
#  field(TT14ST, "YCbCr601_422_10_")
#  field(TT14VL, "35651741")
#  field(FT14ST, "YCbCr601_422_10p")
#  field(FT14VL, "34865294")
#  field(FF14ST, "YCbCr601_422_10p")
#  field(FF14VL, "34865310")
#  field(ZR15ST, "YCbCr601_422_12")
#  field(ZR15VL, "35651727")
#  field(ON15ST, "YCbCr601_422_12_")
#  field(ON15VL, "35651743")
#  field(TW15ST, "YCbCr601_422_12p")
#  field(TW15VL, "35127440")
#  field(TH15ST, "YCbCr601_422_12p")
#  field(TH15VL, "35127456")
#  field(FR15ST, "YCbCr601_422_8")
#  field(FR15VL, "34603070")
#  field(FV15ST, "YCbCr601_422_8_C")
#  field(FV15VL, "34603076")
#  field(SX15ST, "YCbCr601_8_CbYCr")
#  field(SX15VL, "35127357")
#  field(SV15ST, "YCbCr709_10_CbYC")
#  field(SV15VL, "36700305")
#  field(EI15ST, "YCbCr709_10p_CbY")
#  field(EI15VL, "35520658")
#  field(NI15ST, "YCbCr709_12_CbYC")
#  field(NI15VL, "36700307")
#  field(TE15ST, "YCbCr709_12p_CbY")
#  field(TE15VL, "35913876")
#  field(EL15ST, "YCbCr709_411_8_C")
#  field(EL15VL, "34340930")
#  field(TV15ST, "YCbCr709_422_10")
#  field(TV15VL, "35651733")
#  field(TT15ST, "YCbCr709_422_10_")
#  field(TT15VL, "35651745")
#  field(FT15ST, "YCbCr709_422_10p")
#  field(FT15VL, "34865302")
#  field(FF15ST, "YCbCr709_422_10p")
#  field(FF15VL, "34865314")
#  field(ZR16ST, "YCbCr709_422_12")
#  field(ZR16VL, "35651735")
#  field(ON16ST, "YCbCr709_422_12_")
#  field(ON16VL, "35651747")
#  field(TW16ST, "YCbCr709_422_12p")
#  field(TW16VL, "35127448")
#  field(TH16ST, "YCbCr709_422_12p")
#  field(TH16VL, "35127460")
#  field(FR16ST, "YCbCr709_422_8")
#  field(FR16VL, "34603073")
#  field(FV16ST, "YCbCr709_422_8_C")
#  field(FV16VL, "34603077")
#  field(SX16ST, "YCbCr709_8_CbYCr")
#  field(SX16VL, "35127360")
#  field(SV16ST, "YCbCr8")
#  field(SV16VL, "35127387")
#  field(EI16ST, "YCbCr8_CbYCr")
#  field(EI16VL, "35127354")
#  field(NI16ST, "YUV411_8_UYYVYY")
#  field(NI16VL, "34340894")
#  field(TE16ST, "YUV422_8")
#  field(TE16VL, "34603058")
#  field(EL16ST, "YUV422_8_UYVY")
#  field(EL16VL, "34603039")
#  field(TV16ST, "YUV8_UYV")
#  field(TV16VL, "35127328")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)PixelFormat+S_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)PixelFormat+S") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormat+S")
#  field(ZRST, "BayerBG10pmsb")
#  field(ZRVL, "834")
#  field(ONST, "BayerBG12pmsb")
#  field(ONVL, "835")
#  field(TWST, "BayerBG14pmsb")
#  field(TWVL, "836")
#  field(THST, "BayerGB10pmsb")
#  field(THVL, "818")
#  field(FRST, "BayerGB12pmsb")
#  field(FRVL, "819")
#  field(FVST, "BayerGB14pmsb")
#  field(FVVL, "820")
#  field(SXST, "BayerGR10pmsb")
#  field(SXVL, "786")
#  field(SVST, "BayerGR12pmsb")
#  field(SVVL, "787")
#  field(EIST, "BayerGR14pmsb")
#  field(EIVL, "788")
#  field(NIST, "BayerRG10pmsb")
#  field(NIVL, "802")
#  field(TEST, "BayerRG12pmsb")
#  field(TEVL, "803")
#  field(ELST, "BayerRG14pmsb")
#  field(ELVL, "804")
#  field(TVST, "Mono10pmsb")
#  field(TVVL, "258")
#  field(TTST, "Mono12pmsb")
#  field(TTVL, "259")
#  field(FTST, "Mono14pmsb")
#  field(FTVL, "260")
#  field(FFST, "RGB10pmsb")
#  field(FFVL, "1026")
#  field(ZR1ST, "RGB12pmsb")
#  field(ZR1VL, "1027")
#  field(ON1ST, "RGB14pmsb")
#  field(ON1VL, "1028")
#  field(TW1ST, "RGBa10pmsb")
#  field(TW1VL, "1282")
#  field(TH1ST, "RGBa12pmsb")
#  field(TH1VL, "1283")
#  field(FR1ST, "RGBa14pmsb")
#  field(FR1VL, "1284")
#  field(FV1ST, "YCbCr601_10pmsb")
#  field(FV1VL, "1842")
#  field(SX1ST, "YCbCr601_12pmsb")
#  field(SX1VL, "1843")
#  field(SV1ST, "YCbCr601_14pmsb")
#  field(SV1VL, "1844")
#  field(EI1ST, "YCbCr601_16")
#  field(EI1VL, "1845")
#  field(NI1ST, "YCbCr601_411_10p")
#  field(NI1VL, "1810")
#  field(TE1ST, "YCbCr601_411_12p")
#  field(TE1VL, "1811")
#  field(EL1ST, "YCbCr601_411_14p")
#  field(EL1VL, "1812")
#  field(TV1ST, "YCbCr601_411_16")
#  field(TV1VL, "1813")
#  field(TT1ST, "YCbCr601_411_8")
#  field(TT1VL, "1809")
#  field(FT1ST, "YCbCr601_422_10p")
#  field(FT1VL, "1826")
#  field(FF1ST, "YCbCr601_422_12p")
#  field(FF1VL, "1827")
#  field(ZR2ST, "YCbCr601_422_14p")
#  field(ZR2VL, "1828")
#  field(ON2ST, "YCbCr601_422_16")
#  field(ON2VL, "1829")
#  field(TW2ST, "YCbCr601_8")
#  field(TW2VL, "1841")
#  field(TH2ST, "YCbCr709_10pmsb")
#  field(TH2VL, "2098")
#  field(FR2ST, "YCbCr709_12pmsb")
#  field(FR2VL, "2099")
#  field(FV2ST, "YCbCr709_14pmsb")
#  field(FV2VL, "2100")
#  field(SX2ST, "YCbCr709_16")
#  field(SX2VL, "2101")
#  field(SV2ST, "YCbCr709_411_10p")
#  field(SV2VL, "2066")
#  field(EI2ST, "YCbCr709_411_12p")
#  field(EI2VL, "2067")
#  field(NI2ST, "YCbCr709_411_14p")
#  field(NI2VL, "2068")
#  field(TE2ST, "YCbCr709_411_16")
#  field(TE2VL, "2069")
#  field(EL2ST, "YCbCr709_411_8")
#  field(EL2VL, "2065")
#  field(TV2ST, "YCbCr709_422_10p")
#  field(TV2VL, "2082")
#  field(TT2ST, "YCbCr709_422_12p")
#  field(TT2VL, "2083")
#  field(FT2ST, "YCbCr709_422_14p")
#  field(FT2VL, "2084")
#  field(FF2ST, "YCbCr709_422_16")
#  field(FF2VL, "2085")
#  field(ZR3ST, "YCbCr709_8")
#  field(ZR3VL, "2097")
#  field(ON3ST, "YUV10pmsb")
#  field(ON3VL, "1586")
#  field(TW3ST, "YUV12pmsb")
#  field(TW3VL, "1587")
#  field(TH3ST, "YUV14pmsb")
#  field(TH3VL, "1588")
#  field(FR3ST, "YUV16")
#  field(FR3VL, "1589")
#  field(FV3ST, "YUV411_10pmsb")
#  field(FV3VL, "1554")
#  field(SX3ST, "YUV411_12pmsb")
#  field(SX3VL, "1555")
#  field(SV3ST, "YUV411_14pmsb")
#  field(SV3VL, "1556")
#  field(EI3ST, "YUV411_16")
#  field(EI3VL, "1557")
#  field(NI3ST, "YUV411_8")
#  field(NI3VL, "1553")
#  field(TE3ST, "YUV422_10pmsb")
#  field(TE3VL, "1570")
#  field(EL3ST, "YUV422_12pmsb")
#  field(EL3VL, "1571")
#  field(TV3ST, "YUV422_14pmsb")
#  field(TV3VL, "1572")
#  field(TT3ST, "YUV422_16")
#  field(TT3VL, "1573")
#  field(FT3ST, "YUV8")
#  field(FT3VL, "1585")
#  field(FF3ST, "BayerBG10")
#  field(FF3VL, "17825807")
#  field(ZR4ST, "BayerBG10p")
#  field(ZR4VL, "17432658")
#  field(ON4ST, "BayerBG10Packed")
#  field(ON4VL, "17563689")
#  field(TW4ST, "BayerBG12")
#  field(TW4VL, "17825811")
#  field(TH4ST, "BayerBG12p")
#  field(TH4VL, "17563731")
#  field(FR4ST, "BayerBG12Packed")
#  field(FR4VL, "17563693")
#  field(FV4ST, "BayerBG14")
#  field(FV4VL, "2165309463")
#  field(SX4ST, "BayerBG16")
#  field(SX4VL, "17825841")
#  field(SV4ST, "BayerBG8")
#  field(SV4VL, "17301515")
#  field(EI4ST, "BayerGB10")
#  field(EI4VL, "17825806")
#  field(NI4ST, "BayerGB10p")
#  field(NI4VL, "17432660")
#  field(TE4ST, "BayerGB10Packed")
#  field(TE4VL, "17563688")
#  field(EL4ST, "BayerGB12")
#  field(EL4VL, "17825810")
#  field(TV4ST, "BayerGB12p")
#  field(TV4VL, "17563733")
#  field(TT4ST, "BayerGB12Packed")
#  field(TT4VL, "17563692")
#  field(FT4ST, "BayerGB14")
#  field(FT4VL, "2165309462")
#  field(FF4ST, "BayerGB16")
#  field(FF4VL, "17825840")
#  field(ZR5ST, "BayerGB8")
#  field(ZR5VL, "17301514")
#  field(ON5ST, "BayerGR10")
#  field(ON5VL, "17825804")
#  field(TW5ST, "BayerGR10p")
#  field(TW5VL, "17432662")
#  field(TH5ST, "BayerGR10Packed")
#  field(TH5VL, "17563686")
#  field(FR5ST, "BayerGR12")
#  field(FR5VL, "17825808")
#  field(FV5ST, "BayerGR12p")
#  field(FV5VL, "17563735")
#  field(SX5ST, "BayerGR12Packed")
#  field(SX5VL, "17563690")
#  field(SV5ST, "BayerGR14")
#  field(SV5VL, "2165309460")
#  field(EI5ST, "BayerGR16")
#  field(EI5VL, "17825838")
#  field(NI5ST, "BayerGR8")
#  field(NI5VL, "17301512")
#  field(TE5ST, "BayerRG10")
#  field(TE5VL, "17825805")
#  field(EL5ST, "BayerRG10p")
#  field(EL5VL, "17432664")
#  field(TV5ST, "BayerRG10Packed")
#  field(TV5VL, "17563687")
#  field(TT5ST, "BayerRG12")
#  field(TT5VL, "17825809")
#  field(FT5ST, "BayerRG12p")
#  field(FT5VL, "17563737")
#  field(FF5ST, "BayerRG12Packed")
#  field(FF5VL, "17563691")
#  field(ZR6ST, "BayerRG14")
#  field(ZR6VL, "2165309461")
#  field(ON6ST, "BayerRG16")
#  field(ON6VL, "17825839")
#  field(TW6ST, "BayerRG8")
#  field(TW6VL, "17301513")
#  field(TH6ST, "BGR10")
#  field(TH6VL, "36700185")
#  field(FR6ST, "BGR10p")
#  field(FR6VL, "35520584")
#  field(FV6ST, "BGR12")
#  field(FV6VL, "36700187")
#  field(SX6ST, "BGR12p")
#  field(SX6VL, "35913801")
#  field(SV6ST, "BGR14")
#  field(SV6VL, "36700234")
#  field(EI6ST, "BGR16")
#  field(EI6VL, "36700235")
#  field(NI6ST, "BGR565p")
#  field(NI6VL, "34603062")
#  field(TE6ST, "BGR8")
#  field(TE6VL, "35127317")
#  field(EL6ST, "BGR8a32")
#  field(EL6VL, "2183135255")
#  field(TV6ST, "BGRa10")
#  field(TV6VL, "37748812")
#  field(TT6ST, "BGRa10p")
#  field(TT6VL, "36175949")
#  field(FT6ST, "BGRa12")
#  field(FT6VL, "37748814")
#  field(FF6ST, "BGRa12p")
#  field(FF6VL, "36700239")
#  field(ZR7ST, "BGRa14")
#  field(ZR7VL, "37748816")
#  field(ON7ST, "BGRa16")
#  field(ON7VL, "37748817")
#  field(TW7ST, "BGRa8")
#  field(TW7VL, "35651607")
#  field(TH7ST, "BiColorBGRG10")
#  field(TH7VL, "35651753")
#  field(FR7ST, "BiColorBGRG10p")
#  field(FR7VL, "34865322")
#  field(FV7ST, "BiColorBGRG12")
#  field(FV7VL, "35651757")
#  field(SX7ST, "BiColorBGRG12p")
#  field(SX7VL, "35127470")
#  field(SV7ST, "BiColorBGRG8")
#  field(SV7VL, "34603174")
#  field(EI7ST, "BiColorRGBG10")
#  field(EI7VL, "35651751")
#  field(NI7ST, "BiColorRGBG10p")
#  field(NI7VL, "34865320")
#  field(TE7ST, "BiColorRGBG12")
#  field(TE7VL, "35651755")
#  field(EL7ST, "BiColorRGBG12p")
#  field(EL7VL, "35127468")
#  field(TV7ST, "BiColorRGBG8")
#  field(TV7VL, "34603173")
#  field(TT7ST, "Confidence1")
#  field(TT7VL, "17301700")
#  field(FT7ST, "Confidence16")
#  field(FT7VL, "17825991")
#  field(FF7ST, "Confidence1p")
#  field(FF7VL, "16842949")
#  field(ZR8ST, "Confidence32f")
#  field(ZR8VL, "18874568")
#  field(ON8ST, "Confidence8")
#  field(ON8VL, "17301702")
#  field(TW8ST, "Coord3D_A16")
#  field(TW8VL, "17825974")
#  field(TH8ST, "Coord3D_A32f")
#  field(TH8VL, "18874557")
#  field(FR8ST, "Coord3D_A8")
#  field(FR8VL, "17301679")
#  field(FV8ST, "Coord3D_ABC16")
#  field(FV8VL, "36700345")
#  field(SX8ST, "Coord3D_ABC16_Pl")
#  field(SX8VL, "36700346")
#  field(SV8ST, "Coord3D_ABC32f")
#  field(SV8VL, "39846080")
#  field(EI8ST, "Coord3D_ABC32f_P")
#  field(EI8VL, "39846081")
#  field(NI8ST, "Coord3D_ABC8")
#  field(NI8VL, "35127474")
#  field(TE8ST, "Coord3D_ABC8_Pla")
#  field(TE8VL, "35127475")
#  field(EL8ST, "Coord3D_AC16")
#  field(EL8VL, "35651771")
#  field(TV8ST, "Coord3D_AC16_Pla")
#  field(TV8VL, "35651772")
#  field(TT8ST, "Coord3D_AC32f")
#  field(TT8VL, "37748930")
#  field(FT8ST, "Coord3D_AC32f_Pl")
#  field(FT8VL, "37748931")
#  field(FF8ST, "Coord3D_AC8")
#  field(FF8VL, "34603188")
#  field(ZR9ST, "Coord3D_AC8_Plan")
#  field(ZR9VL, "34603189")
#  field(ON9ST, "Coord3D_B16")
#  field(ON9VL, "17825975")
#  field(TW9ST, "Coord3D_B32f")
#  field(TW9VL, "18874558")
#  field(TH9ST, "Coord3D_B8")
#  field(TH9VL, "17301680")
#  field(FR9ST, "Coord3D_C16")
#  field(FR9VL, "17825976")
#  field(FV9ST, "Coord3D_C32f")
#  field(FV9VL, "18874559")
#  field(SX9ST, "Coord3D_C8")
#  field(SX9VL, "17301681")
#  field(SV9ST, "Mono10")
#  field(SV9VL, "17825795")
#  field(EI9ST, "Mono10p")
#  field(EI9VL, "17432646")
#  field(NI9ST, "Mono10Packed")
#  field(NI9VL, "17563652")
#  field(TE9ST, "Mono12")
#  field(TE9VL, "17825797")
#  field(EL9ST, "Mono12p")
#  field(EL9VL, "17563719")
#  field(TV9ST, "Mono12Packed")
#  field(TV9VL, "17563654")
#  field(TT9ST, "Mono14")
#  field(TT9VL, "17825829")
#  field(FT9ST, "Mono16")
#  field(FT9VL, "17825799")
#  field(FF9ST, "Mono1p")
#  field(FF9VL, "16842807")
#  field(ZR10ST, "Mono2p")
#  field(ZR10VL, "16908344")
#  field(ON10ST, "Mono4p")
#  field(ON10VL, "17039417")
#  field(TW10ST, "Mono8")
#  field(TW10VL, "17301505")
#  field(TH10ST, "Mono8s")
#  field(TH10VL, "17301506")
#  field(FR10ST, "RGB10")
#  field(FR10VL, "36700184")
#  field(FV10ST, "RGB10_Planar")
#  field(FV10VL, "36700194")
#  field(SX10ST, "RGB10p")
#  field(SX10VL, "35520604")
#  field(SV10ST, "RGB10p32")
#  field(SV10VL, "35651613")
#  field(EI10ST, "RGB10V1Packed")
#  field(EI10VL, "35651612")
#  field(NI10ST, "RGB12")
#  field(NI10VL, "36700186")
#  field(TE10ST, "RGB12_Planar")
#  field(TE10VL, "36700195")
#  field(EL10ST, "RGB12p")
#  field(EL10VL, "35913821")
#  field(TV10ST, "RGB12V1Packed")
#  field(TV10VL, "35913780")
#  field(TT10ST, "RGB14")
#  field(TT10VL, "36700254")
#  field(FT10ST, "RGB16")
#  field(FT10VL, "36700211")
#  field(FF10ST, "RGB16_Planar")
#  field(FF10VL, "36700196")
#  field(ZR11ST, "RGB565p")
#  field(ZR11VL, "34603061")
#  field(ON11ST, "RGB8")
#  field(ON11VL, "35127316")
#  field(TW11ST, "RGB8_Planar")
#  field(TW11VL, "35127329")
#  field(TH11ST, "RGB8a32")
#  field(TH11VL, "2183135254")
#  field(FR11ST, "RGBa10")
#  field(FR11VL, "37748831")
#  field(FV11ST, "RGBa10p")
#  field(FV11VL, "36175968")
#  field(SX11ST, "RGBa12")
#  field(SX11VL, "37748833")
#  field(SV11ST, "RGBa12p")
#  field(SV11VL, "36700258")
#  field(EI11ST, "RGBa14")
#  field(EI11VL, "37748835")
#  field(NI11ST, "RGBa16")
#  field(NI11VL, "37748836")
#  field(TE11ST, "RGBa8")
#  field(TE11VL, "35651606")
#  field(EL11ST, "SCF1WBWG10")
#  field(EL11VL, "17825896")
#  field(TV11ST, "SCF1WBWG10p")
#  field(TV11VL, "17432681")
#  field(TT11ST, "SCF1WBWG12")
#  field(TT11VL, "17825898")
#  field(FT11ST, "SCF1WBWG12p")
#  field(FT11VL, "17563755")
#  field(FF11ST, "SCF1WBWG14")
#  field(FF11VL, "17825900")
#  field(ZR12ST, "SCF1WBWG16")
#  field(ZR12VL, "17825901")
#  field(ON12ST, "SCF1WBWG8")
#  field(ON12VL, "17301607")
#  field(TW12ST, "SCF1WGWB10")
#  field(TW12VL, "17825903")
#  field(TH12ST, "SCF1WGWB10p")
#  field(TH12VL, "17432688")
#  field(FR12ST, "SCF1WGWB12")
#  field(FR12VL, "17825905")
#  field(FV12ST, "SCF1WGWB12p")
#  field(FV12VL, "17563762")
#  field(SX12ST, "SCF1WGWB14")
#  field(SX12VL, "17825907")
#  field(SV12ST, "SCF1WGWB16")
#  field(SV12VL, "17825908")
#  field(EI12ST, "SCF1WGWB8")
#  field(EI12VL, "17301614")
#  field(NI12ST, "SCF1WGWR10")
#  field(NI12VL, "17825910")
#  field(TE12ST, "SCF1WGWR10p")
#  field(TE12VL, "17432695")
#  field(EL12ST, "SCF1WGWR12")
#  field(EL12VL, "17825912")
#  field(TV12ST, "SCF1WGWR12p")
#  field(TV12VL, "17563769")
#  field(TT12ST, "SCF1WGWR14")
#  field(TT12VL, "17825914")
#  field(FT12ST, "SCF1WGWR16")
#  field(FT12VL, "17825915")
#  field(FF12ST, "SCF1WGWR8")
#  field(FF12VL, "17301621")
#  field(ZR13ST, "SCF1WRWG10")
#  field(ZR13VL, "17825917")
#  field(ON13ST, "SCF1WRWG10p")
#  field(ON13VL, "17432702")
#  field(TW13ST, "SCF1WRWG12")
#  field(TW13VL, "17825919")
#  field(TH13ST, "SCF1WRWG12p")
#  field(TH13VL, "17563776")
#  field(FR13ST, "SCF1WRWG14")
#  field(FR13VL, "17825921")
#  field(FV13ST, "SCF1WRWG16")
#  field(FV13VL, "17825922")
#  field(SX13ST, "SCF1WRWG8")
#  field(SX13VL, "17301628")
#  field(SV13ST, "YCbCr10_CbYCr")
#  field(SV13VL, "36700291")
#  field(EI13ST, "YCbCr10p_CbYCr")
#  field(EI13VL, "35520644")
#  field(NI13ST, "YCbCr12_CbYCr")
#  field(NI13VL, "36700293")
#  field(TE13ST, "YCbCr12p_CbYCr")
#  field(TE13VL, "35913862")
#  field(EL13ST, "YCbCr411_8")
#  field(EL13VL, "34340954")
#  field(TV13ST, "YCbCr411_8_CbYYC")
#  field(TV13VL, "34340924")
#  field(TT13ST, "YCbCr422_10")
#  field(TT13VL, "35651685")
#  field(FT13ST, "YCbCr422_10_CbYC")
#  field(FT13VL, "35651737")
#  field(FF13ST, "YCbCr422_10p")
#  field(FF13VL, "34865287")
#  field(ZR14ST, "YCbCr422_10p_CbY")
#  field(ZR14VL, "34865306")
#  field(ON14ST, "YCbCr422_12")
#  field(ON14VL, "35651686")
#  field(TW14ST, "YCbCr422_12_CbYC")
#  field(TW14VL, "35651739")
#  field(TH14ST, "YCbCr422_12p")
#  field(TH14VL, "35127432")
#  field(FR14ST, "YCbCr422_12p_CbY")
#  field(FR14VL, "35127452")
#  field(FV14ST, "YCbCr422_8")
#  field(FV14VL, "34603067")
#  field(SX14ST, "YCbCr422_8_CbYCr")
#  field(SX14VL, "34603075")
#  field(SV14ST, "YCbCr601_10_CbYC")
#  field(SV14VL, "36700297")
#  field(EI14ST, "YCbCr601_10p_CbY")
#  field(EI14VL, "35520650")
#  field(NI14ST, "YCbCr601_12_CbYC")
#  field(NI14VL, "36700299")
#  field(TE14ST, "YCbCr601_12p_CbY")
#  field(TE14VL, "35913868")
#  field(EL14ST, "YCbCr601_411_8_C")
#  field(EL14VL, "34340927")
#  field(TV14ST, "YCbCr601_422_10")
#  field(TV14VL, "35651725")
#  field(TT14ST, "YCbCr601_422_10_")
#  field(TT14VL, "35651741")
#  field(FT14ST, "YCbCr601_422_10p")
#  field(FT14VL, "34865294")
#  field(FF14ST, "YCbCr601_422_10p")
#  field(FF14VL, "34865310")
#  field(ZR15ST, "YCbCr601_422_12")
#  field(ZR15VL, "35651727")
#  field(ON15ST, "YCbCr601_422_12_")
#  field(ON15VL, "35651743")
#  field(TW15ST, "YCbCr601_422_12p")
#  field(TW15VL, "35127440")
#  field(TH15ST, "YCbCr601_422_12p")
#  field(TH15VL, "35127456")
#  field(FR15ST, "YCbCr601_422_8")
#  field(FR15VL, "34603070")
#  field(FV15ST, "YCbCr601_422_8_C")
#  field(FV15VL, "34603076")
#  field(SX15ST, "YCbCr601_8_CbYCr")
#  field(SX15VL, "35127357")
#  field(SV15ST, "YCbCr709_10_CbYC")
#  field(SV15VL, "36700305")
#  field(EI15ST, "YCbCr709_10p_CbY")
#  field(EI15VL, "35520658")
#  field(NI15ST, "YCbCr709_12_CbYC")
#  field(NI15VL, "36700307")
#  field(TE15ST, "YCbCr709_12p_CbY")
#  field(TE15VL, "35913876")
#  field(EL15ST, "YCbCr709_411_8_C")
#  field(EL15VL, "34340930")
#  field(TV15ST, "YCbCr709_422_10")
#  field(TV15VL, "35651733")
#  field(TT15ST, "YCbCr709_422_10_")
#  field(TT15VL, "35651745")
#  field(FT15ST, "YCbCr709_422_10p")
#  field(FT15VL, "34865302")
#  field(FF15ST, "YCbCr709_422_10p")
#  field(FF15VL, "34865314")
#  field(ZR16ST, "YCbCr709_422_12")
#  field(ZR16VL, "35651735")
#  field(ON16ST, "YCbCr709_422_12_")
#  field(ON16VL, "35651747")
#  field(TW16ST, "YCbCr709_422_12p")
#  field(TW16VL, "35127448")
#  field(TH16ST, "YCbCr709_422_12p")
#  field(TH16VL, "35127460")
#  field(FR16ST, "YCbCr709_422_8")
#  field(FR16VL, "34603073")
#  field(FV16ST, "YCbCr709_422_8_C")
#  field(FV16VL, "34603077")
#  field(SX16ST, "YCbCr709_8_CbYCr")
#  field(SX16VL, "35127360")
#  field(SV16ST, "YCbCr8")
#  field(SV16VL, "35127387")
#  field(EI16ST, "YCbCr8_CbYCr")
#  field(EI16VL, "35127354")
#  field(NI16ST, "YUV411_8_UYYVYY")
#  field(NI16VL, "34340894")
#  field(TE16ST, "YUV422_8")
#  field(TE16VL, "34603058")
#  field(EL16ST, "YUV422_8_UYVY")
#  field(EL16VL, "34603039")
#  field(TV16ST, "YUV8_UYV")
#  field(TV16VL, "35127328")
#  field(DISA, "0")
#}

record(mbbi, "$(P)$(R)PixelFormatNamespace_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormatNamespace")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "GEV")
  field(ONVL, "1")
  field(TWST, "IIDC")
  field(TWVL, "2")
  field(THST, "PFNC_16BIT")
  field(THVL, "3")
  field(FRST, "PFNC_32BIT")
  field(FRVL, "4")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)PixelFormatNamespace") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelFormatNamespace")
  field(ZRST, "Unknown")
  field(ZRVL, "0")
  field(ONST, "GEV")
  field(ONVL, "1")
  field(TWST, "IIDC")
  field(TWVL, "2")
  field(THST, "PFNC_16BIT")
  field(THVL, "3")
  field(FRST, "PFNC_32BIT")
  field(FRVL, "4")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PixelSize_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixelSize")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Width+S_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Width+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Width+S") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Width+S")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Height+S_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Height+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)Height+S") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Height+S")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)UnpackingMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UnpackingMode")
  field(ZRST, "Lsb")
  field(ZRVL, "0")
  field(ONST, "Msb")
  field(ONVL, "1")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)UnpackingMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UnpackingMode")
  field(ZRST, "Lsb")
  field(ZRVL, "0")
  field(ONST, "Msb")
  field(ONVL, "1")
  field(DISA, "0")
}

record(bi, "$(P)$(R)RedBlueSwap_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RedBlueSwap")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)RedBlueSwap") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RedBlueSwap")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LUTConfiguration_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTConfiguration")
  field(ZRST, "M_8x8")
  field(ZRVL, "0")
  field(ONST, "M_10x8")
  field(ONVL, "32")
  field(TWST, "M_10x10")
  field(TWVL, "34")
  field(THST, "M_10x16")
  field(THVL, "40")
  field(FRST, "M_12x8")
  field(FRVL, "64")
  field(FVST, "M_12x12")
  field(FVVL, "68")
  field(SXST, "M_12x16")
  field(SXVL, "72")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LUTConfiguration") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTConfiguration")
  field(ZRST, "M_8x8")
  field(ZRVL, "0")
  field(ONST, "M_10x8")
  field(ONVL, "32")
  field(TWST, "M_10x10")
  field(TWVL, "34")
  field(THST, "M_10x16")
  field(THVL, "40")
  field(FRST, "M_12x8")
  field(FRVL, "64")
  field(FVST, "M_12x12")
  field(FVVL, "68")
  field(SXST, "M_12x16")
  field(SXVL, "72")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LUTLength_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTLength")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LUTMaxValue_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTMaxValue")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)LUTSet_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTSet")
  field(ZRST, "Set1")
  field(ZRVL, "1")
  field(ONST, "Set2")
  field(ONVL, "2")
  field(TWST, "Set3")
  field(TWVL, "3")
  field(THST, "Set4")
  field(THVL, "4")
  field(FRST, "Set5")
  field(FRVL, "5")
  field(FVST, "Set6")
  field(FVVL, "6")
  field(SXST, "Set7")
  field(SXVL, "7")
  field(SVST, "Set8")
  field(SVVL, "8")
  field(EIST, "Set9")
  field(EIVL, "9")
  field(NIST, "Set10")
  field(NIVL, "10")
  field(TEST, "Set11")
  field(TEVL, "11")
  field(ELST, "Set12")
  field(ELVL, "12")
  field(TVST, "Set13")
  field(TVVL, "13")
  field(TTST, "Set14")
  field(TTVL, "14")
  field(FTST, "Set15")
  field(FTVL, "15")
  field(FFST, "Set16")
  field(FFVL, "16")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)LUTSet") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTSet")
  field(ZRST, "Set1")
  field(ZRVL, "1")
  field(ONST, "Set2")
  field(ONVL, "2")
  field(TWST, "Set3")
  field(TWVL, "3")
  field(THST, "Set4")
  field(THVL, "4")
  field(FRST, "Set5")
  field(FRVL, "5")
  field(FVST, "Set6")
  field(FVVL, "6")
  field(SXST, "Set7")
  field(SXVL, "7")
  field(SVST, "Set8")
  field(SVVL, "8")
  field(EIST, "Set9")
  field(EIVL, "9")
  field(NIST, "Set10")
  field(NIVL, "10")
  field(TEST, "Set11")
  field(TEVL, "11")
  field(ELST, "Set12")
  field(ELVL, "12")
  field(TVST, "Set13")
  field(TVVL, "13")
  field(TTST, "Set14")
  field(TTVL, "14")
  field(FTST, "Set15")
  field(FTVL, "15")
  field(FFST, "Set16")
  field(FFVL, "16")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LUTIndex_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTIndex")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LUTIndex") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTIndex")
  field(DISA, "0")
}

record(stringin, "$(P)$(R)LUTValue_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTValue")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LUTReadBlockLength_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTReadBlockLength")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LUTReadBlockLength") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTReadBlockLength")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)LUTEnable_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTEnable")
#  field(ZRST, "Off")
#  field(ZRVL, "0")
#  field(ONST, "Set1")
#  field(ONVL, "1")
#  field(TWST, "Set2")
#  field(TWVL, "2")
#  field(THST, "Set3")
#  field(THVL, "3")
#  field(FRST, "Set4")
#  field(FRVL, "4")
#  field(FVST, "Set5")
#  field(FVVL, "5")
#  field(SXST, "Set6")
#  field(SXVL, "6")
#  field(SVST, "Set7")
#  field(SVVL, "7")
#  field(EIST, "Set8")
#  field(EIVL, "8")
#  field(NIST, "Set9")
#  field(NIVL, "9")
#  field(TEST, "Set10")
#  field(TEVL, "10")
#  field(ELST, "Set11")
#  field(ELVL, "11")
#  field(TVST, "Set12")
#  field(TVVL, "12")
#  field(TTST, "Set13")
#  field(TTVL, "13")
#  field(FTST, "Set14")
#  field(FTVL, "14")
#  field(FFST, "Set15")
#  field(FFVL, "15")
#  field(ZR1ST, "Set16")
#  field(ZR1VL, "16")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)LUTEnable_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTEnable")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)LUTEnable") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LUTEnable")
#  field(ZRST, "Off")
#  field(ZRVL, "0")
#  field(ONST, "Set1")
#  field(ONVL, "1")
#  field(TWST, "Set2")
#  field(TWVL, "2")
#  field(THST, "Set3")
#  field(THVL, "3")
#  field(FRST, "Set4")
#  field(FRVL, "4")
#  field(FVST, "Set5")
#  field(FVVL, "5")
#  field(SXST, "Set6")
#  field(SXVL, "6")
#  field(SVST, "Set7")
#  field(SVVL, "7")
#  field(EIST, "Set8")
#  field(EIVL, "8")
#  field(NIST, "Set9")
#  field(NIVL, "9")
#  field(TEST, "Set10")
#  field(TEVL, "10")
#  field(ELST, "Set11")
#  field(ELVL, "11")
#  field(TVST, "Set12")
#  field(TVVL, "12")
#  field(TTST, "Set13")
#  field(TTVL, "13")
#  field(FTST, "Set14")
#  field(FTVL, "14")
#  field(FFST, "Set15")
#  field(FFVL, "15")
#  field(ZR1ST, "Set16")
#  field(ZR1VL, "16")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)PayloadSize+S_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PayloadSize+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamAnnouncedBufferCount_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamAnnouncedBufferCount")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StreamAnnouncedBufferCount") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamAnnouncedBufferCount")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)StreamBufferHandlingMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamBufferHandlingMode")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)StreamBufferHandlingMode") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamBufferHandlingMode")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamAnnounceBufferMinimum_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamAnnounceBufferMinimum")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StreamAnnounceBufferMinimum") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamAnnounceBufferMinimum")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)StreamAcquisitionModeSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamAcquisitionModeSelector")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)StreamAcquisitionModeSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamAcquisitionModeSelector")
  field(ZRST, "Default")
  field(ZRVL, "0")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)StartOfScanTriggerSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartOfScanTriggerSource")
#  field(ZRST, "Immediate")
#  field(ZRVL, "253")
#  field(ONST, "StartScan")
#  field(ONVL, "0")
#  field(TWST, "LIN1")
#  field(TWVL, "1")
#  field(THST, "LIN2")
#  field(THVL, "2")
#  field(FRST, "LIN3")
#  field(FRVL, "3")
#  field(FVST, "LIN4")
#  field(FVVL, "4")
#  field(SXST, "LIN5")
#  field(SXVL, "5")
#  field(SVST, "LIN6")
#  field(SVVL, "6")
#  field(EIST, "LIN7")
#  field(EIVL, "7")
#  field(NIST, "LIN8")
#  field(NIVL, "8")
#  field(TEST, "QDC1")
#  field(TEVL, "9")
#  field(ELST, "QDC2")
#  field(ELVL, "10")
#  field(TVST, "MDV1")
#  field(TVVL, "11")
#  field(TTST, "MDV2")
#  field(TTVL, "12")
#  field(FTST, "DIV1")
#  field(FTVL, "13")
#  field(FFST, "DIV2")
#  field(FFVL, "14")
#  field(ZR1ST, "DEL1_1")
#  field(ZR1VL, "15")
#  field(ON1ST, "DEL1_2")
#  field(ON1VL, "16")
#  field(TW1ST, "DEL2_1")
#  field(TW1VL, "17")
#  field(TH1ST, "DEL2_2")
#  field(TH1VL, "18")
#  field(FR1ST, "EIN1")
#  field(FR1VL, "19")
#  field(FV1ST, "EIN2")
#  field(FV1VL, "20")
#  field(SX1ST, "UserEvent1")
#  field(SX1VL, "21")
#  field(SV1ST, "UserEvent2")
#  field(SV1VL, "22")
#  field(EI1ST, "UserEvent3")
#  field(EI1VL, "23")
#  field(NI1ST, "UserEvent4")
#  field(NI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)StartOfScanTriggerSource_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartOfScanTriggerSource")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)StartOfScanTriggerSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartOfScanTriggerSource")
#  field(ZRST, "Immediate")
#  field(ZRVL, "253")
#  field(ONST, "StartScan")
#  field(ONVL, "0")
#  field(TWST, "LIN1")
#  field(TWVL, "1")
#  field(THST, "LIN2")
#  field(THVL, "2")
#  field(FRST, "LIN3")
#  field(FRVL, "3")
#  field(FVST, "LIN4")
#  field(FVVL, "4")
#  field(SXST, "LIN5")
#  field(SXVL, "5")
#  field(SVST, "LIN6")
#  field(SVVL, "6")
#  field(EIST, "LIN7")
#  field(EIVL, "7")
#  field(NIST, "LIN8")
#  field(NIVL, "8")
#  field(TEST, "QDC1")
#  field(TEVL, "9")
#  field(ELST, "QDC2")
#  field(ELVL, "10")
#  field(TVST, "MDV1")
#  field(TVVL, "11")
#  field(TTST, "MDV2")
#  field(TTVL, "12")
#  field(FTST, "DIV1")
#  field(FTVL, "13")
#  field(FFST, "DIV2")
#  field(FFVL, "14")
#  field(ZR1ST, "DEL1_1")
#  field(ZR1VL, "15")
#  field(ON1ST, "DEL1_2")
#  field(ON1VL, "16")
#  field(TW1ST, "DEL2_1")
#  field(TW1VL, "17")
#  field(TH1ST, "DEL2_2")
#  field(TH1VL, "18")
#  field(FR1ST, "EIN1")
#  field(FR1VL, "19")
#  field(FV1ST, "EIN2")
#  field(FV1VL, "20")
#  field(SX1ST, "UserEvent1")
#  field(SX1VL, "21")
#  field(SV1ST, "UserEvent2")
#  field(SV1VL, "22")
#  field(EI1ST, "UserEvent3")
#  field(EI1VL, "23")
#  field(NI1ST, "UserEvent4")
#  field(NI1VL, "24")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EndOfScanTriggerSource_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EndOfScanTriggerSource")
#  field(ZRST, "ScanLength")
#  field(ZRVL, "254")
#  field(ONST, "StopScan")
#  field(ONVL, "0")
#  field(TWST, "LIN1")
#  field(TWVL, "1")
#  field(THST, "LIN2")
#  field(THVL, "2")
#  field(FRST, "LIN3")
#  field(FRVL, "3")
#  field(FVST, "LIN4")
#  field(FVVL, "4")
#  field(SXST, "LIN5")
#  field(SXVL, "5")
#  field(SVST, "LIN6")
#  field(SVVL, "6")
#  field(EIST, "LIN7")
#  field(EIVL, "7")
#  field(NIST, "LIN8")
#  field(NIVL, "8")
#  field(TEST, "QDC1")
#  field(TEVL, "9")
#  field(ELST, "QDC2")
#  field(ELVL, "10")
#  field(TVST, "MDV1")
#  field(TVVL, "11")
#  field(TTST, "MDV2")
#  field(TTVL, "12")
#  field(FTST, "DIV1")
#  field(FTVL, "13")
#  field(FFST, "DIV2")
#  field(FFVL, "14")
#  field(ZR1ST, "DEL1_1")
#  field(ZR1VL, "15")
#  field(ON1ST, "DEL1_2")
#  field(ON1VL, "16")
#  field(TW1ST, "DEL2_1")
#  field(TW1VL, "17")
#  field(TH1ST, "DEL2_2")
#  field(TH1VL, "18")
#  field(FR1ST, "EIN1")
#  field(FR1VL, "19")
#  field(FV1ST, "EIN2")
#  field(FV1VL, "20")
#  field(SX1ST, "UserEvent1")
#  field(SX1VL, "21")
#  field(SV1ST, "UserEvent2")
#  field(SV1VL, "22")
#  field(EI1ST, "UserEvent3")
#  field(EI1VL, "23")
#  field(NI1ST, "UserEvent4")
#  field(NI1VL, "24")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EndOfScanTriggerSource_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EndOfScanTriggerSource")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EndOfScanTriggerSource") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EndOfScanTriggerSource")
#  field(ZRST, "ScanLength")
#  field(ZRVL, "254")
#  field(ONST, "StopScan")
#  field(ONVL, "0")
#  field(TWST, "LIN1")
#  field(TWVL, "1")
#  field(THST, "LIN2")
#  field(THVL, "2")
#  field(FRST, "LIN3")
#  field(FRVL, "3")
#  field(FVST, "LIN4")
#  field(FVVL, "4")
#  field(SXST, "LIN5")
#  field(SXVL, "5")
#  field(SVST, "LIN6")
#  field(SVVL, "6")
#  field(EIST, "LIN7")
#  field(EIVL, "7")
#  field(NIST, "LIN8")
#  field(NIVL, "8")
#  field(TEST, "QDC1")
#  field(TEVL, "9")
#  field(ELST, "QDC2")
#  field(ELVL, "10")
#  field(TVST, "MDV1")
#  field(TVVL, "11")
#  field(TTST, "MDV2")
#  field(TTVL, "12")
#  field(FTST, "DIV1")
#  field(FTVL, "13")
#  field(FFST, "DIV2")
#  field(FFVL, "14")
#  field(ZR1ST, "DEL1_1")
#  field(ZR1VL, "15")
#  field(ON1ST, "DEL1_2")
#  field(ON1VL, "16")
#  field(TW1ST, "DEL2_1")
#  field(TW1VL, "17")
#  field(TH1ST, "DEL2_2")
#  field(TH1VL, "18")
#  field(FR1ST, "EIN1")
#  field(FR1VL, "19")
#  field(FV1ST, "EIN2")
#  field(FV1VL, "20")
#  field(SX1ST, "UserEvent1")
#  field(SX1VL, "21")
#  field(SV1ST, "UserEvent2")
#  field(SV1VL, "22")
#  field(EI1ST, "UserEvent3")
#  field(EI1VL, "23")
#  field(NI1ST, "UserEvent4")
#  field(NI1VL, "24")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)ScanLength_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScanLength")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ScanLength") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ScanLength")
  field(DISA, "0")
}

record(longin, "$(P)$(R)BufferHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BufferHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)BufferHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BufferHeight")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StartScan") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartScan")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StopScan") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StopScan")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StreamReset") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamReset")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LineWidth_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineWidth")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LineWidth") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LineWidth")
  field(DISA, "0")
}

record(longin, "$(P)$(R)LinePitch_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LinePitch")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)LinePitch") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LinePitch")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StripeHeight_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StripeHeight")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StripeHeight") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StripeHeight")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StripePitch_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StripePitch")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StripePitch") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StripePitch")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)ErrorSelector+S_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorSelector+S")
#  field(ZRST, "All")
#  field(ZRVL, "255")
#  field(ONST, "StreamPacketSize")
#  field(ONVL, "0")
#  field(TWST, "StreamPacketFifo")
#  field(TWVL, "2")
#  field(THST, "CameraTriggerOve")
#  field(THVL, "3")
#  field(FRST, "DidNotReceiveTri")
#  field(FRVL, "4")
#  field(FVST, "TriggerPacketRet")
#  field(FVVL, "5")
#  field(SXST, "InputStreamFifoH")
#  field(SXVL, "6")
#  field(SVST, "InputStreamFifoF")
#  field(SVVL, "7")
#  field(EIST, "ImageHeaderError")
#  field(EIVL, "8")
#  field(NIST, "MigAxiWriteError")
#  field(NIVL, "9")
#  field(TEST, "MigAxiReadError")
#  field(TEVL, "10")
#  field(ELST, "PacketWithUnexpe")
#  field(ELVL, "11")
#  field(TVST, "StreamPacketCrcE")
#  field(TVVL, "12")
#  field(TTST, "StreamPacketCrcE")
#  field(TTVL, "13")
#  field(FTST, "StreamPacketCrcE")
#  field(FTVL, "14")
#  field(FFST, "StreamPacketCrcE")
#  field(FFVL, "15")
#  field(ZR1ST, "StartOfScanSkipp")
#  field(ZR1VL, "16")
#  field(ON1ST, "PrematureEndOfSc")
#  field(ON1VL, "17")
#  field(TW1ST, "ExternalTriggerR")
#  field(TW1VL, "18")
#  field(TH1ST, "Unknown")
#  field(TH1VL, "254")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)ErrorSelector+S_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorSelector+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)ErrorSelector+S") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorSelector+S")
#  field(ZRST, "All")
#  field(ZRVL, "255")
#  field(ONST, "StreamPacketSize")
#  field(ONVL, "0")
#  field(TWST, "StreamPacketFifo")
#  field(TWVL, "2")
#  field(THST, "CameraTriggerOve")
#  field(THVL, "3")
#  field(FRST, "DidNotReceiveTri")
#  field(FRVL, "4")
#  field(FVST, "TriggerPacketRet")
#  field(FVVL, "5")
#  field(SXST, "InputStreamFifoH")
#  field(SXVL, "6")
#  field(SVST, "InputStreamFifoF")
#  field(SVVL, "7")
#  field(EIST, "ImageHeaderError")
#  field(EIVL, "8")
#  field(NIST, "MigAxiWriteError")
#  field(NIVL, "9")
#  field(TEST, "MigAxiReadError")
#  field(TEVL, "10")
#  field(ELST, "PacketWithUnexpe")
#  field(ELVL, "11")
#  field(TVST, "StreamPacketCrcE")
#  field(TVVL, "12")
#  field(TTST, "StreamPacketCrcE")
#  field(TTVL, "13")
#  field(FTST, "StreamPacketCrcE")
#  field(FTVL, "14")
#  field(FFST, "StreamPacketCrcE")
#  field(FFVL, "15")
#  field(ZR1ST, "StartOfScanSkipp")
#  field(ZR1VL, "16")
#  field(ON1ST, "PrematureEndOfSc")
#  field(ON1VL, "17")
#  field(TW1ST, "ExternalTriggerR")
#  field(TW1VL, "18")
#  field(TH1ST, "Unknown")
#  field(TH1VL, "254")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)ErrorCount+S_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorCount+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)ErrorCountReset+S") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ErrorCountReset+S")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)StatisticsSamplingSelector_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StatisticsSamplingSelector")
  field(ZRST, "LastSecond")
  field(ZRVL, "1")
  field(ONST, "LastTenSeconds")
  field(ONVL, "3")
  field(TWST, "Last2Buffers")
  field(TWVL, "4")
  field(THST, "Last10Buffers")
  field(THVL, "5")
  field(FRST, "Last100Buffers")
  field(FRVL, "6")
  field(FVST, "Last1000Buffers")
  field(FVVL, "7")
  field(SXST, "LastAcquisition")
  field(SXVL, "8")
  field(SVST, "Custom")
  field(SVVL, "9")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)StatisticsSamplingSelector") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StatisticsSamplingSelector")
  field(ZRST, "LastSecond")
  field(ZRVL, "1")
  field(ONST, "LastTenSeconds")
  field(ONVL, "3")
  field(TWST, "Last2Buffers")
  field(TWVL, "4")
  field(THST, "Last10Buffers")
  field(THVL, "5")
  field(FRST, "Last100Buffers")
  field(FRVL, "6")
  field(FVST, "Last1000Buffers")
  field(FVVL, "7")
  field(SXST, "LastAcquisition")
  field(SXVL, "8")
  field(SVST, "Custom")
  field(SVVL, "9")
  field(DISA, "0")
}

record(ai, "$(P)$(R)StatisticsFrameRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StatisticsFrameRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ai, "$(P)$(R)StatisticsLineRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StatisticsLineRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(ai, "$(P)$(R)StatisticsDataRate_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StatisticsDataRate")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StatisticsStartSampling") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StatisticsStartSampling")
  field(DISA, "0")
}

record(longout, "$(P)$(R)StatisticsStopSampling") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StatisticsStopSampling")
  field(DISA, "0")
}

record(mbbi, "$(P)$(R)EventSelector+S_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+S")
  field(ZRST, "StartOfCameraRea")
  field(ZRVL, "32865")
  field(ONST, "EndOfCameraReado")
  field(ONVL, "32866")
  field(TWST, "StartOfScan")
  field(TWVL, "32867")
  field(THST, "EndOfScan")
  field(THVL, "32868")
  field(FRST, "RejectedFrame")
  field(FRVL, "32869")
  field(FVST, "RejectedScan")
  field(FVVL, "32870")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(mbbo, "$(P)$(R)EventSelector+S") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventSelector+S")
  field(ZRST, "StartOfCameraRea")
  field(ZRVL, "32865")
  field(ONST, "EndOfCameraReado")
  field(ONVL, "32866")
  field(TWST, "StartOfScan")
  field(TWVL, "32867")
  field(THST, "EndOfScan")
  field(THVL, "32868")
  field(FRST, "RejectedFrame")
  field(FRVL, "32869")
  field(FVST, "RejectedScan")
  field(FVVL, "32870")
  field(DISA, "0")
}

record(bi, "$(P)$(R)EventNotification+S_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotification+S")
  field(SCAN, "I/O Intr")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

record(bo, "$(P)$(R)EventNotification+S") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotification+S")
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(DISA, "0")
}

#record(mbbi, "$(P)$(R)EventNotificationContext1+S_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+S")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext1+S_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext1+S") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext1+S")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EventNotificationContext2+S_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+S")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext2+S_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext2+S") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext2+S")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(DISA, "0")
#}

#record(mbbi, "$(P)$(R)EventNotificationContext3+S_RBV") {
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+S")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(SCAN, "I/O Intr")
#  field(DISA, "0")
#}

record(stringin, "$(P)$(R)EventNotificationContext3+S_RBV") {
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

#record(mbbo, "$(P)$(R)EventNotificationContext3+S") {
#  field(DTYP, "asynInt32")
#  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventNotificationContext3+S")
#  field(ZRST, "EventSpecific")
#  field(ZRVL, "0")
#  field(ONST, "LineStatusAll")
#  field(ONVL, "1")
#  field(TWST, "PendingCicTrigge")
#  field(TWVL, "2")
#  field(THST, "LIN1EventCount")
#  field(THVL, "32768")
#  field(FRST, "LIN2EventCount")
#  field(FRVL, "32769")
#  field(FVST, "LIN3EventCount")
#  field(FVVL, "32770")
#  field(SXST, "LIN4EventCount")
#  field(SXVL, "32771")
#  field(SVST, "LIN5EventCount")
#  field(SVVL, "32772")
#  field(EIST, "LIN6EventCount")
#  field(EIVL, "32773")
#  field(NIST, "LIN7EventCount")
#  field(NIVL, "32774")
#  field(TEST, "LIN8EventCount")
#  field(TEVL, "32775")
#  field(ELST, "QDC1EventCount")
#  field(ELVL, "32896")
#  field(TVST, "QDC1DirEventCoun")
#  field(TVVL, "32897")
#  field(TTST, "QDC2EventCount")
#  field(TTVL, "32898")
#  field(FTST, "QDC2DirEventCoun")
#  field(FTVL, "32899")
#  field(FFST, "DIV1EventCount")
#  field(FFVL, "33024")
#  field(ZR1ST, "DIV2EventCount")
#  field(ZR1VL, "33025")
#  field(ON1ST, "MDV1EventCount")
#  field(ON1VL, "33152")
#  field(TW1ST, "MDV2EventCount")
#  field(TW1VL, "33153")
#  field(TH1ST, "DEL11EventCount")
#  field(TH1VL, "33280")
#  field(FR1ST, "DEL12EventCount")
#  field(FR1VL, "33281")
#  field(FV1ST, "DEL21EventCount")
#  field(FV1VL, "33282")
#  field(SX1ST, "DEL22EventCount")
#  field(SX1VL, "33283")
#  field(SV1ST, "UserEvent1EventC")
#  field(SV1VL, "33536")
#  field(EI1ST, "UserEvent2EventC")
#  field(EI1VL, "33537")
#  field(NI1ST, "UserEvent3EventC")
#  field(NI1VL, "33538")
#  field(TE1ST, "UserEvent4EventC")
#  field(TE1VL, "33539")
#  field(EL1ST, "EIN1EventCount")
#  field(EL1VL, "33664")
#  field(TV1ST, "EIN2EventCount")
#  field(TV1VL, "33665")
#  field(TT1ST, "CrcErrorCxpAEven")
#  field(TT1VL, "33408")
#  field(FT1ST, "CrcErrorCxpBEven")
#  field(FT1VL, "33409")
#  field(FF1ST, "CrcErrorCxpCEven")
#  field(FF1VL, "33410")
#  field(ZR2ST, "CrcErrorCxpDEven")
#  field(ZR2VL, "33411")
#  field(ON2ST, "CameraTriggerRis")
#  field(ON2VL, "32833")
#  field(TW2ST, "CameraTriggerFal")
#  field(TW2VL, "32834")
#  field(TH2ST, "StrobeRisingEdge")
#  field(TH2VL, "32835")
#  field(FR2ST, "StrobeFallingEdg")
#  field(FR2VL, "32836")
#  field(FV2ST, "AllowNextCycleEv")
#  field(FV2VL, "32837")
#  field(SX2ST, "DiscardedCicTrig")
#  field(SX2VL, "32838")
#  field(SV2ST, "PendingCicTrigge")
#  field(SV2VL, "32839")
#  field(EI2ST, "CxpTriggerAckEve")
#  field(EI2VL, "32840")
#  field(NI2ST, "CxpTriggerResend")
#  field(NI2VL, "32841")
#  field(TE2ST, "TriggerEventCoun")
#  field(TE2VL, "32842")
#  field(EL2ST, "StartOfCameraRea")
#  field(EL2VL, "32865")
#  field(TV2ST, "EndOfCameraReado")
#  field(TV2VL, "32866")
#  field(TT2ST, "StartOfScanEvent")
#  field(TT2VL, "32867")
#  field(FT2ST, "EndOfScanEventCo")
#  field(FT2VL, "32868")
#  field(FF2ST, "RejectedFrameEve")
#  field(FF2VL, "32869")
#  field(ZR3ST, "RejectedScanEven")
#  field(ZR3VL, "32870")
#  field(DISA, "0")
#}

record(longin, "$(P)$(R)EventCount+S_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventCount+S")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longout, "$(P)$(R)EventCountReset+S") {
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EventCountReset+S")
  field(DISA, "0")
}

record(longin, "$(P)$(R)All-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))All-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamPacketSizeError-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamPacketSizeError-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamPacketFifoOverflow-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamPacketFifoOverflow-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)CameraTriggerOverrun-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CameraTriggerOverrun-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)DidNotReceiveTriggerAck-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DidNotReceiveTriggerAck-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)TriggerPacketRetryError-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TriggerPacketRetryError-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)InputStreamFifiHalfFull-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InputStreamFifiHalfFull-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)InputStreamFifoFull-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))InputStreamFifoFull-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ImageHeaderError-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ImageHeaderError-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MigAxiWriteError-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MigAxiWriteError-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)MigAxiReadError-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MigAxiReadError-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PacketWithUnexpectedTag-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PacketWithUnexpectedTag-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamPacketCrcError0-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamPacketCrcError0-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamPacketCrcError1-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamPacketCrcError1-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamPacketCrcError2-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamPacketCrcError2-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StreamPacketCrcError3-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StreamPacketCrcError3-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)StartOfScanSkipped-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))StartOfScanSkipped-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)PrematureEndOfScan-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PrematureEndOfScan-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)ExternalTriggerReqsTooClose-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ExternalTriggerReqsTooClose-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

record(longin, "$(P)$(R)Unknown-D_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Unknown-D")
  field(SCAN, "I/O Intr")
  field(DISA, "0")
}

