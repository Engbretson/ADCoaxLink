/* ./Euresys_Coaxlink_TLInterface_6_2_4 */ 

createParam(COAXLINK_Interface_InterfaceIDString, asynParamOctet, &COAXLINK_Interface_InterfaceID);

createParam(COAXLINK_Interface_InterfaceTypeString, asynParamInt32, &COAXLINK_Interface_InterfaceType);

createParam(COAXLINK_Interface_SerialNumberString, asynParamOctet, &COAXLINK_Interface_SerialNumber);

createParam(COAXLINK_Interface_PartNumberString, asynParamOctet, &COAXLINK_Interface_PartNumber);

createParam(COAXLINK_Interface_FirmwareRevisionString, asynParamInt32, &COAXLINK_Interface_FirmwareRevision);

createParam(COAXLINK_Interface_FirmwareVariantString, asynParamInt32, &COAXLINK_Interface_FirmwareVariant);

createParam(COAXLINK_Interface_FirmwareStatusString, asynParamInt32, &COAXLINK_Interface_FirmwareStatus);

createParam(COAXLINK_Interface_FirmwareRecoverySwitchString, asynParamInt32, &COAXLINK_Interface_FirmwareRecoverySwitch);

createParam(COAXLINK_Interface_DeviceUpdateListString, asynParamInt32, &COAXLINK_Interface_DeviceUpdateList);

createParam(COAXLINK_Interface_DeviceSelectorString, asynParamInt32, &COAXLINK_Interface_DeviceSelector);

createParam(COAXLINK_Interface_DeviceIDString, asynParamOctet, &COAXLINK_Interface_DeviceID);

createParam(COAXLINK_Interface_DeviceVendorNameString, asynParamOctet, &COAXLINK_Interface_DeviceVendorName);

createParam(COAXLINK_Interface_DeviceModelNameString, asynParamOctet, &COAXLINK_Interface_DeviceModelName);

createParam(COAXLINK_Interface_DeviceAccessStatusString, asynParamInt32, &COAXLINK_Interface_DeviceAccessStatus);

createParam(COAXLINK_Interface_CxpPoCxpHostConnectionSelectorString, asynParamInt32, &COAXLINK_Interface_CxpPoCxpHostConnectionSelector);

createParam(COAXLINK_Interface_CxpPoCxpAutoString, asynParamInt32, &COAXLINK_Interface_CxpPoCxpAuto);

createParam(COAXLINK_Interface_CxpPoCxpTurnOffString, asynParamInt32, &COAXLINK_Interface_CxpPoCxpTurnOff);

createParam(COAXLINK_Interface_CxpPoCxpTripResetString, asynParamInt32, &COAXLINK_Interface_CxpPoCxpTripReset);

createParam(COAXLINK_Interface_CxpPoCxpConfigurationStatusString, asynParamInt32, &COAXLINK_Interface_CxpPoCxpConfigurationStatus);

createParam(COAXLINK_Interface_CxpPoCxpStatusString, asynParamInt32, &COAXLINK_Interface_CxpPoCxpStatus);

createParam(COAXLINK_Interface_CxpPoCxpCurrentString, asynParamFloat64, &COAXLINK_Interface_CxpPoCxpCurrent);

createParam(COAXLINK_Interface_CxpPoCxpVoltageString, asynParamFloat64, &COAXLINK_Interface_CxpPoCxpVoltage);

createParam(COAXLINK_Interface_CxpPoCxpPowerInputStatusString, asynParamInt32, &COAXLINK_Interface_CxpPoCxpPowerInputStatus);

createParam(COAXLINK_Interface_CxpHostConnectionCountString, asynParamInt32, &COAXLINK_Interface_CxpHostConnectionCount);

createParam(COAXLINK_Interface_CxpHostConnectionSelectorString, asynParamInt32, &COAXLINK_Interface_CxpHostConnectionSelector);

createParam(COAXLINK_Interface_CxpConnectionStateString, asynParamInt32, &COAXLINK_Interface_CxpConnectionState);

createParam(COAXLINK_Interface_CxpDownConnectionSpeedString, asynParamInt32, &COAXLINK_Interface_CxpDownConnectionSpeed);

createParam(COAXLINK_Interface_CxpDeviceConnectionIDString, asynParamInt32, &COAXLINK_Interface_CxpDeviceConnectionID);

createParam(COAXLINK_Interface_CxpHostConnectionTestModeString, asynParamInt32, &COAXLINK_Interface_CxpHostConnectionTestMode);

createParam(COAXLINK_Interface_tErrorCountString, asynParamInt32, &COAXLINK_Interface_tErrorCount);

createParam(COAXLINK_Interface_tPacketCountString, asynParamInt32, &COAXLINK_Interface_tPacketCount);

createParam(COAXLINK_Interface_tInjectErrorString, asynParamInt32, &COAXLINK_Interface_tInjectError);

createParam(COAXLINK_Interface_CxpRevisionSelectorString, asynParamInt32, &COAXLINK_Interface_CxpRevisionSelector);

createParam(COAXLINK_Interface_CxpRevisionSupportString, asynParamInt32, &COAXLINK_Interface_CxpRevisionSupport);

createParam(COAXLINK_Interface_LineSelectorString, asynParamInt32, &COAXLINK_Interface_LineSelector);

createParam(COAXLINK_Interface_LineFormatString, asynParamInt32, &COAXLINK_Interface_LineFormat);

createParam(COAXLINK_Interface_LineModeString, asynParamInt32, &COAXLINK_Interface_LineMode);

createParam(COAXLINK_Interface_LineInverterString, asynParamInt32, &COAXLINK_Interface_LineInverter);

createParam(COAXLINK_Interface_LineFilterStrengthString, asynParamInt32, &COAXLINK_Interface_LineFilterStrength);

createParam(COAXLINK_Interface_LineFilterDelayString, asynParamFloat64, &COAXLINK_Interface_LineFilterDelay);

createParam(COAXLINK_Interface_LineStatusString, asynParamInt32, &COAXLINK_Interface_LineStatus);

createParam(COAXLINK_Interface_LineStatusAllString, asynParamInt32, &COAXLINK_Interface_LineStatusAll);

createParam(COAXLINK_Interface_LineSourceString, asynParamInt32, &COAXLINK_Interface_LineSource);

createParam(COAXLINK_Interface_UserOutputValueAllString, asynParamInt32, &COAXLINK_Interface_UserOutputValueAll);

createParam(COAXLINK_Interface_UserActionsString, asynParamInt32, &COAXLINK_Interface_UserActions);

createParam(COAXLINK_Interface_AddUserActionString, asynParamInt32, &COAXLINK_Interface_AddUserAction);

createParam(COAXLINK_Interface_ClearUserActionsString, asynParamInt32, &COAXLINK_Interface_ClearUserActions);

createParam(COAXLINK_Interface_ExecuteUserActionsString, asynParamInt32, &COAXLINK_Interface_ExecuteUserActions);

createParam(COAXLINK_Interface_ScheduleUserActionsString, asynParamInt32, &COAXLINK_Interface_ScheduleUserActions);

createParam(COAXLINK_Interface_UserActionsSchedulerReferenceString, asynParamInt32, &COAXLINK_Interface_UserActionsSchedulerReference);

createParam(COAXLINK_Interface_ScheduledUserActionsPoolStatusString, asynParamInt32, &COAXLINK_Interface_ScheduledUserActionsPoolStatus);

createParam(COAXLINK_Interface_DiscardScheduledUserActionsString, asynParamInt32, &COAXLINK_Interface_DiscardScheduledUserActions);

createParam(COAXLINK_Interface_LineInputToolSelectorString, asynParamInt32, &COAXLINK_Interface_LineInputToolSelector);

createParam(COAXLINK_Interface_LineInputToolSourceString, asynParamInt32, &COAXLINK_Interface_LineInputToolSource);

createParam(COAXLINK_Interface_LineInputToolActivationString, asynParamInt32, &COAXLINK_Interface_LineInputToolActivation);

createParam(COAXLINK_Interface_MultiplierDividerToolSelectorString, asynParamInt32, &COAXLINK_Interface_MultiplierDividerToolSelector);

createParam(COAXLINK_Interface_MultiplierDividerToolSourceString, asynParamInt32, &COAXLINK_Interface_MultiplierDividerToolSource);

createParam(COAXLINK_Interface_lOutputControlString, asynParamInt32, &COAXLINK_Interface_lOutputControl);

createParam(COAXLINK_Interface_lMultiplicationFactorString, asynParamFloat64, &COAXLINK_Interface_lMultiplicationFactor);

createParam(COAXLINK_Interface_lDivisionFactorString, asynParamFloat64, &COAXLINK_Interface_lDivisionFactor);

createParam(COAXLINK_Interface_lEffectiveMultiplicationFactorString, asynParamInt32, &COAXLINK_Interface_lEffectiveMultiplicationFactor);

createParam(COAXLINK_Interface_lEffectiveDivisionFactorString, asynParamInt32, &COAXLINK_Interface_lEffectiveDivisionFactor);

createParam(COAXLINK_Interface_QuadratureDecoderToolSelectorString, asynParamInt32, &COAXLINK_Interface_QuadratureDecoderToolSelector);

createParam(COAXLINK_Interface_QuadratureDecoderToolSourcesString, asynParamInt32, &COAXLINK_Interface_QuadratureDecoderToolSources);

createParam(COAXLINK_Interface_lActivationString, asynParamInt32, &COAXLINK_Interface_lActivation);

createParam(COAXLINK_Interface_lForwardDirectionString, asynParamInt32, &COAXLINK_Interface_lForwardDirection);

createParam(COAXLINK_Interface_lOutputModeString, asynParamInt32, &COAXLINK_Interface_lOutputMode);

createParam(COAXLINK_Interface_QuadratureDecoderToolPositionString, asynParamInt32, &COAXLINK_Interface_QuadratureDecoderToolPosition);

createParam(COAXLINK_Interface_QuadratureDecoderToolDirectionString, asynParamInt32, &COAXLINK_Interface_QuadratureDecoderToolDirection);

createParam(COAXLINK_Interface_lPositionResetString, asynParamInt32, &COAXLINK_Interface_lPositionReset);

createParam(COAXLINK_Interface_DividerToolSelectorString, asynParamInt32, &COAXLINK_Interface_DividerToolSelector);

createParam(COAXLINK_Interface_DividerToolSourceString, asynParamInt32, &COAXLINK_Interface_DividerToolSource);

createParam(COAXLINK_Interface_DividerToolEnableControlString, asynParamInt32, &COAXLINK_Interface_DividerToolEnableControl);

createParam(COAXLINK_Interface_DividerToolDivisionFactorString, asynParamInt32, &COAXLINK_Interface_DividerToolDivisionFactor);

createParam(COAXLINK_Interface_DividerToolInitialOffsetString, asynParamInt32, &COAXLINK_Interface_DividerToolInitialOffset);

createParam(COAXLINK_Interface_DelayToolSelectorString, asynParamInt32, &COAXLINK_Interface_DelayToolSelector);

createParam(COAXLINK_Interface_DelayToolSource1String, asynParamInt32, &COAXLINK_Interface_DelayToolSource1);

createParam(COAXLINK_Interface_DelayToolSource2String, asynParamInt32, &COAXLINK_Interface_DelayToolSource2);

createParam(COAXLINK_Interface_DelayToolClockSourceString, asynParamInt32, &COAXLINK_Interface_DelayToolClockSource);

createParam(COAXLINK_Interface_DelayToolDelayValueString, asynParamInt32, &COAXLINK_Interface_DelayToolDelayValue);

createParam(COAXLINK_Interface_EventInputToolSelectorString, asynParamInt32, &COAXLINK_Interface_EventInputToolSelector);

createParam(COAXLINK_Interface_EventInputToolSourceString, asynParamInt32, &COAXLINK_Interface_EventInputToolSource);

createParam(COAXLINK_Interface_EventInputToolActivationString, asynParamInt32, &COAXLINK_Interface_EventInputToolActivation);

createParam(COAXLINK_Interface_InternalTimeString, asynParamInt32, &COAXLINK_Interface_InternalTime);

createParam(COAXLINK_Interface_PCIeMaxPayloadSizeSupportedString, asynParamInt32, &COAXLINK_Interface_PCIeMaxPayloadSizeSupported);

createParam(COAXLINK_Interface_PCIeMaxPayloadSizeString, asynParamInt32, &COAXLINK_Interface_PCIeMaxPayloadSize);

createParam(COAXLINK_Interface_PCIeMaxReadRequestSizeString, asynParamInt32, &COAXLINK_Interface_PCIeMaxReadRequestSize);

createParam(COAXLINK_Interface_PCIeMaxLinkSpeedString, asynParamInt32, &COAXLINK_Interface_PCIeMaxLinkSpeed);

createParam(COAXLINK_Interface_PCIeCurrentLinkSpeedString, asynParamInt32, &COAXLINK_Interface_PCIeCurrentLinkSpeed);

createParam(COAXLINK_Interface_PCIeMaximumLinkWidthString, asynParamInt32, &COAXLINK_Interface_PCIeMaximumLinkWidth);

createParam(COAXLINK_Interface_PCIeNegotiatedLinkWidthString, asynParamInt32, &COAXLINK_Interface_PCIeNegotiatedLinkWidth);

createParam(COAXLINK_Interface_PCIeLinkSpeed2500MTpsSupportedString, asynParamInt32, &COAXLINK_Interface_PCIeLinkSpeed2500MTpsSupported);

createParam(COAXLINK_Interface_PCIeLinkSpeed5000MTpsSupportedString, asynParamInt32, &COAXLINK_Interface_PCIeLinkSpeed5000MTpsSupported);

createParam(COAXLINK_Interface_PCIeLinkSpeed8000MTpsSupportedString, asynParamInt32, &COAXLINK_Interface_PCIeLinkSpeed8000MTpsSupported);

createParam(COAXLINK_Interface_FanStatusString, asynParamInt32, &COAXLINK_Interface_FanStatus);

createParam(COAXLINK_Interface_TemperatureSensorSelectorString, asynParamInt32, &COAXLINK_Interface_TemperatureSensorSelector);

createParam(COAXLINK_Interface_TemperatureString, asynParamFloat64, &COAXLINK_Interface_Temperature);

createParam(COAXLINK_Interface_AuxiliaryPowerInputString, asynParamInt32, &COAXLINK_Interface_AuxiliaryPowerInput);

createParam(COAXLINK_Interface_AuxiliaryPower12VInputString, asynParamInt32, &COAXLINK_Interface_AuxiliaryPower12VInput);

createParam(COAXLINK_Interface_BoardCapabilitiesString, asynParamOctet, &COAXLINK_Interface_BoardCapabilities);

createParam(COAXLINK_Interface_FirmwareBoardIDString, asynParamInt32, &COAXLINK_Interface_FirmwareBoardID);

createParam(COAXLINK_Interface_CPLDRevisionString, asynParamInt32, &COAXLINK_Interface_CPLDRevision);

createParam(COAXLINK_Interface_PreviousBootBankString, asynParamInt32, &COAXLINK_Interface_PreviousBootBank);

createParam(COAXLINK_Interface_NextBootBankString, asynParamInt32, &COAXLINK_Interface_NextBootBank);

createParam(COAXLINK_Interface_CurrentBankSelectString, asynParamInt32, &COAXLINK_Interface_CurrentBankSelect);

createParam(COAXLINK_Interface_CurrentBankSelectReadbackString, asynParamInt32, &COAXLINK_Interface_CurrentBankSelectReadback);

createParam(COAXLINK_Interface_NextBankSelectString, asynParamInt32, &COAXLINK_Interface_NextBankSelect);

createParam(COAXLINK_Interface_SpiBankStatusString, asynParamInt32, &COAXLINK_Interface_SpiBankStatus);

createParam(COAXLINK_Interface_PotBankStatusString, asynParamInt32, &COAXLINK_Interface_PotBankStatus);

createParam(COAXLINK_Interface_EventSelectorString, asynParamInt32, &COAXLINK_Interface_EventSelector);

createParam(COAXLINK_Interface_EventNotificationString, asynParamInt32, &COAXLINK_Interface_EventNotification);

createParam(COAXLINK_Interface_EventNotificationContext1String, asynParamInt32, &COAXLINK_Interface_EventNotificationContext1);

createParam(COAXLINK_Interface_EventNotificationContext2String, asynParamInt32, &COAXLINK_Interface_EventNotificationContext2);

createParam(COAXLINK_Interface_EventNotificationContext3String, asynParamInt32, &COAXLINK_Interface_EventNotificationContext3);

createParam(COAXLINK_Interface_EventCountString, asynParamInt32, &COAXLINK_Interface_EventCount);

createParam(COAXLINK_Interface_EventCountResetString, asynParamInt32, &COAXLINK_Interface_EventCountReset);

createParam(COAXLINK_Interface_OemSafetyKeyVerificationString, asynParamInt32, &COAXLINK_Interface_OemSafetyKeyVerification);

createParam(COAXLINK_Interface_CheckOemSafetyKeyString, asynParamOctet, &COAXLINK_Interface_CheckOemSafetyKey);

createParam(COAXLINK_Interface_ProgramOemSafetyKeyString, asynParamOctet, &COAXLINK_Interface_ProgramOemSafetyKey);

createParam(COAXLINK_Interface_EncryptedOemSafetyKeyString, asynParamOctet, &COAXLINK_Interface_EncryptedOemSafetyKey);

